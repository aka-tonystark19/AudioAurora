
vgavisualizer.elf:     file format elf32-littlenios2
vgavisualizer.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040180

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00006d6c memsz 0x00006d6c flags r-x
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x00046d8c align 2**12
         filesz 0x00004854 memsz 0x000098bc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00006c0c  00040180  00040180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000328  08000000  00046d8c  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       0000452c  08000328  000470b4  00008328  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00005068  08004854  0004b5e0  0000c854  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  0004b5e0  0004b5e0  0000c854  2**0
                  CONTENTS
  7 .new_sdram_controller_0 00000000  080098bc  080098bc  0000c854  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0000c854  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000708  00000000  00000000  0000c878  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00007ea0  00000000  00000000  0000cf80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000320c  00000000  00000000  00014e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00004463  00000000  00000000  0001802c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00000be4  00000000  00000000  0001c490  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000235d  00000000  00000000  0001d074  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00009b89  00000000  00000000  0001f3d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00028f5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00000e48  00000000  00000000  00028f70  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0002b8fa  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0002b8fd  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0002b909  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0002b90a  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0002b90b  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  0002b916  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  0002b921  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000a  00000000  00000000  0002b92c  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000037  00000000  00000000  0002b936  2**0
                  CONTENTS, READONLY
 27 .jdi          00005116  00000000  00000000  0002b96d  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0005a864  00000000  00000000  00030a83  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040180 l    d  .text	00000000 .text
08000000 l    d  .rodata	00000000 .rodata
08000328 l    d  .rwdata	00000000 .rwdata
08004854 l    d  .bss	00000000 .bss
0004b5e0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
080098bc l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../vgavisualizer_bsp//obj/HAL/src/crt0.o
000401b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world_small.c
00040a24 l     F .text	00000064 vert_time_isr
00040204 l     F .text	00000288 fft_helper.part.0
080043c8 l     O .rwdata	00000050 sizes
08004378 l     O .rwdata	00000050 colors
08004854 l     O .bss	00000004 progress.3725
00000000 l    df *ABS*	00000000 cexp.c
00000000 l    df *ABS*	00000000 cimag.c
00000000 l    df *ABS*	00000000 creal.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_exp.c
00000000 l    df *ABS*	00000000 e_exp.c
0800003c l     O .rodata	00000010 halF
0800002c l     O .rodata	00000010 ln2HI
0800001c l     O .rodata	00000010 ln2LO
00000000 l    df *ABS*	00000000 e_rem_pio2.c
080000cc l     O .rodata	00000108 two_over_pi
0800004c l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
08000214 l     O .rodata	00000010 init_jk
080001d4 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
08004418 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 strlen.c
08004868 g     O .bss	00000004 alt_instruction_exception_handler
00046bb4 g     F .text	0000002c alt_main
080097bc g     O .bss	00000100 alt_irq
00043154 g     F .text	00000014 fabs
000470b4 g       *ABS*	00000000 __flash_rwdata_start
00045220 g     F .text	00000088 .hidden __eqdf2
00040c78 g     F .text	00000014 creal
00046be0 g     F .text	00000038 alt_putstr
000452a8 g     F .text	000000dc .hidden __gtdf2
00046cec g     F .text	00000008 altera_nios2_gen2_irq_init
00046848 g     F .text	00000010 __errno
00040000 g     F .entry	0000000c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00043184 g     F .text	000001ec floor
08004860 g     O .bss	00000004 alt_argv
0800c83c g       *ABS*	00000000 _gp
080048bc g     O .bss	00000200 output
000414e0 g     F .text	0000076c __ieee754_rem_pio2
00046660 g     F .text	000000dc .hidden __floatsidf
08004abc g     O .bss	00000080 magn
00045384 g     F .text	000000f4 .hidden __ltdf2
00046c78 g     F .text	00000074 alt_exception_cause_generated_bad_addr
08004b3c g     O .bss	00000080 freq
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00043ec0 g     F .text	00000064 .hidden __udivsi3
08004bbc g     O .bss	00004b00 image
00041c4c g     F .text	000004a4 __kernel_cos
080096bc g     O .bss	00000080 imag
00042e88 g     F .text	000002cc __kernel_sin
00043fa4 g     F .text	000008ac .hidden __adddf3
0800483c g     O .rwdata	00000004 vga
08004840 g     O .rwdata	00000004 __fdlib_version
08004844 g     O .rwdata	00000004 _global_impure_ptr
080098bc g       *ABS*	00000000 __bss_end
00046a6c g     F .text	00000068 alt_iic_isr_register
00040ff8 g     F .text	000004e8 __ieee754_exp
0004673c g     F .text	000000a8 .hidden __floatunsidf
00040c64 g     F .text	00000014 cimag
00046a54 g     F .text	00000018 alt_ic_irq_enabled
08004858 g     O .bss	00000004 alt_irq_active
00043530 g     F .text	00000898 .hidden __muldc3
000400fc g     F .exceptions	00000060 alt_irq_handler
000420f0 g     F .text	00000d98 __kernel_rem_pio2
00046c70 g     F .text	00000004 alt_dcache_flush_all
00040674 g     F .text	000001b8 runfft
000465e0 g     F .text	00000080 .hidden __fixdfsi
08004854 g       *ABS*	00000000 __ram_rwdata_end
08000328 g       *ABS*	00000000 __ram_rodata_end
08004850 g     O .rwdata	00000004 jtag_uart_0
00045384 g     F .text	000000f4 .hidden __ledf2
00043f24 g     F .text	00000058 .hidden __umodsi3
080098bc g       *ABS*	00000000 end
0004015c g     F .exceptions	00000024 alt_instruction_exception_entry
0c000000 g       *ABS*	00000000 __alt_stack_pointer
000467e4 g     F .text	00000064 .hidden __clzsi2
00046c3c g     F .text	00000034 altera_avalon_jtag_uart_write
00040c8c g     F .text	000000ec cos
000401f8 g     F .text	0000000c fft_helper
00040b10 g     F .text	00000154 cexp
0800973c g     O .bss	00000080 real
00040180 g     F .text	0000003c _start
00040d78 g     F .text	000000f0 sin
00046870 g     F .text	00000064 rand
00046c38 g     F .text	00000004 alt_sys_init
000401bc g     F .text	0000003c init_isr
0800486c g     O .bss	00000050 occurFreq
00043f7c g     F .text	00000028 .hidden __mulsi3
08000328 g       *ABS*	00000000 __ram_rwdata_start
08000000 g       *ABS*	00000000 __ram_rodata_start
00040514 g     F .text	00000160 printcplxArr
080098bc g       *ABS*	00000000 __alt_stack_base
0004082c g     F .text	000001f8 runvga
00044850 g     F .text	000009d0 .hidden __divdf3
00045478 g     F .text	0000086c .hidden __muldf3
08004854 g       *ABS*	00000000 __bss_start
08000378 g     O .rwdata	00004000 data
00040a88 g     F .text	00000088 main
0800485c g     O .bss	00000004 alt_envp
00046858 g     F .text	00000018 srand
00043370 g     F .text	00000008 matherr
00040e68 g     F .text	00000190 exp
08000328 g     O .rwdata	00000050 rangeFreq
00043dc8 g     F .text	00000084 .hidden __divsi3
00043168 g     F .text	0000001c finite
00046d8c g       *ABS*	00000000 __flash_rodata_start
00043514 g     F .text	0000001c copysign
00045220 g     F .text	00000088 .hidden __nedf2
00046c18 g     F .text	00000020 alt_irq_init
08000224 g     O .rodata	00000100 .hidden __clz_tab
08004848 g     O .rwdata	00000004 _impure_ptr
08004864 g     O .bss	00000004 alt_argc
00043378 g     F .text	0000019c scalbn
00040020 g       .exceptions	00000000 alt_irq_entry
0004048c g     F .text	00000088 fft
00040020 g       *ABS*	00000000 __ram_exceptions_start
08000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
000469e0 g     F .text	00000004 alt_ic_isr_register
08004854 g       *ABS*	00000000 _edata
080098bc g       *ABS*	00000000 _end
00040180 g       *ABS*	00000000 __ram_exceptions_end
00046a1c g     F .text	00000038 alt_ic_irq_disable
00043e4c g     F .text	00000074 .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004000c g       .entry	00000000 _exit
000468d4 g     F .text	0000010c .hidden __muldi3
00046cf4 g     F .text	00000098 strlen
000452a8 g     F .text	000000dc .hidden __gedf2
00046c74 g     F .text	00000004 alt_icache_flush_all
0800484c g     O .rwdata	00000004 alt_priority_mask
000469e4 g     F .text	00000038 alt_ic_irq_enable
00045ce4 g     F .text	000008fc .hidden __subdf3
00046ad4 g     F .text	000000e0 alt_load



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08406014 	ori	at,at,384
    jmp r1
   40008:	0800683a 	jmp	at

0004000c <_exit>:
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	004015c0 	call	4015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defffe04 	addi	sp,sp,-8
   40100:	dfc00115 	stw	ra,4(sp)
   40104:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40108:	0009313a 	rdctl	r4,ipending
    do
    {
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4010c:	04020074 	movhi	r16,2049
   40110:	8425ef04 	addi	r16,r16,-26692

  active = alt_irq_pending ();

  do
  {
    i = 0;
   40114:	0005883a 	mov	r2,zero
    mask = 1;
   40118:	00c00044 	movi	r3,1
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4011c:	20ca703a 	and	r5,r4,r3
   40120:	28000b26 	beq	r5,zero,40150 <alt_irq_handler+0x54>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   40124:	100490fa 	slli	r2,r2,3
   40128:	8085883a 	add	r2,r16,r2
   4012c:	10c00017 	ldw	r3,0(r2)
   40130:	11000117 	ldw	r4,4(r2)
   40134:	183ee83a 	callr	r3
   40138:	0009313a 	rdctl	r4,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
   4013c:	203ff51e 	bne	r4,zero,40114 <__alt_data_end+0xf4040114>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   40140:	dfc00117 	ldw	ra,4(sp)
   40144:	dc000017 	ldw	r16,0(sp)
   40148:	dec00204 	addi	sp,sp,8
   4014c:	f800283a 	ret
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   40150:	18c7883a 	add	r3,r3,r3
      i++;
   40154:	10800044 	addi	r2,r2,1

    } while (1);
   40158:	003ff006 	br	4011c <__alt_data_end+0xf404011c>

0004015c <alt_instruction_exception_entry>:
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   4015c:	d0a00b17 	ldw	r2,-32724(gp)
   40160:	10000426 	beq	r2,zero,40174 <alt_instruction_exception_entry+0x18>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   40164:	200b883a 	mov	r5,r4
   40168:	000d883a 	mov	r6,zero
   4016c:	013fffc4 	movi	r4,-1
   40170:	1000683a 	jmp	r2
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40174:	003da03a 	break	0
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
}
   40178:	0005883a 	mov	r2,zero
   4017c:	f800283a 	ret

Disassembly of section .text:

00040180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40180:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
   40184:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   40188:	06820034 	movhi	gp,2048
    ori gp, gp, %lo(_gp)
   4018c:	d6b20f14 	ori	gp,gp,51260
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40190:	00820034 	movhi	r2,2048
    ori r2, r2, %lo(__bss_start)
   40194:	10921514 	ori	r2,r2,18516

    movhi r3, %hi(__bss_end)
   40198:	00c20034 	movhi	r3,2048
    ori r3, r3, %lo(__bss_end)
   4019c:	18e62f14 	ori	r3,r3,39100

    beq r2, r3, 1f
   401a0:	10c00326 	beq	r2,r3,401b0 <_start+0x30>

0:
    stw zero, (r2)
   401a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401ac:	10fffd36 	bltu	r2,r3,401a4 <__alt_data_end+0xf40401a4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   401b0:	0046ad40 	call	46ad4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   401b4:	0046bb40 	call	46bb4 <alt_main>

000401b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   401b8:	003fff06 	br	401b8 <__alt_data_end+0xf40401b8>

000401bc <init_isr>:

  return 0;
}

// Setup the hardware timer
void init_isr(void){
   401bc:	defffe04 	addi	sp,sp,-8
	alt_ic_isr_register(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, TIMER_0_IRQ, (void *)vert_time_isr, NULL, 0x0);
   401c0:	01800134 	movhi	r6,4
   401c4:	d8000015 	stw	zero,0(sp)
   401c8:	000f883a 	mov	r7,zero
   401cc:	31828904 	addi	r6,r6,2596
   401d0:	000b883a 	mov	r5,zero
   401d4:	0009883a 	mov	r4,zero

  return 0;
}

// Setup the hardware timer
void init_isr(void){
   401d8:	dfc00115 	stw	ra,4(sp)
	alt_ic_isr_register(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, TIMER_0_IRQ, (void *)vert_time_isr, NULL, 0x0);
   401dc:	00469e00 	call	469e0 <alt_ic_isr_register>

	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE, ALTERA_AVALON_TIMER_CONTROL_CONT_MSK | ALTERA_AVALON_TIMER_CONTROL_START_MSK | ALTERA_AVALON_TIMER_CONTROL_ITO_MSK);
   401e0:	00840104 	movi	r2,4100
   401e4:	00c001c4 	movi	r3,7
   401e8:	10c00035 	stwio	r3,0(r2)
}
   401ec:	dfc00117 	ldw	ra,4(sp)
   401f0:	dec00204 	addi	sp,sp,8
   401f4:	f800283a 	ret

000401f8 <fft_helper>:
	fft_helper(buf, out, N, 1);
}

void fft_helper(cplx buf[], cplx out[], int n, int step)
{
	if (step < n) {
   401f8:	3980010e 	bge	r7,r6,40200 <fft_helper+0x8>
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
			buf[i / 2]     = out[i] + t;
			buf[(i + n)/2] = out[i] - t;
		}
	}
}
   401fc:	00402041 	jmpi	40204 <fft_helper.part.0>
   40200:	f800283a 	ret

00040204 <fft_helper.part.0>:
		out[i] = buf[i];
	}
	fft_helper(buf, out, N, 1);
}

void fft_helper(cplx buf[], cplx out[], int n, int step)
   40204:	deffe704 	addi	sp,sp,-100
   40208:	ddc01615 	stw	r23,88(sp)
   4020c:	dcc01215 	stw	r19,72(sp)
   40210:	282f883a 	mov	r23,r5
{
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
   40214:	39e7883a 	add	r19,r7,r7
   40218:	200b883a 	mov	r5,r4
		out[i] = buf[i];
	}
	fft_helper(buf, out, N, 1);
}

void fft_helper(cplx buf[], cplx out[], int n, int step)
   4021c:	dd001315 	stw	r20,76(sp)
   40220:	dc401015 	stw	r17,64(sp)
   40224:	2029883a 	mov	r20,r4
   40228:	3823883a 	mov	r17,r7
{
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
   4022c:	b809883a 	mov	r4,r23
   40230:	980f883a 	mov	r7,r19
		fft_helper(out + step, buf + step, n, step * 2);
   40234:	8822913a 	slli	r17,r17,4
		out[i] = buf[i];
	}
	fft_helper(buf, out, N, 1);
}

void fft_helper(cplx buf[], cplx out[], int n, int step)
   40238:	dfc01815 	stw	ra,96(sp)
   4023c:	dc801115 	stw	r18,68(sp)
   40240:	d9800a15 	stw	r6,40(sp)
   40244:	df001715 	stw	fp,92(sp)
   40248:	dd801515 	stw	r22,84(sp)
   4024c:	dd401415 	stw	r21,80(sp)
   40250:	dc000f15 	stw	r16,60(sp)
{
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
   40254:	00401f80 	call	401f8 <fft_helper>
		fft_helper(out + step, buf + step, n, step * 2);
   40258:	d9800a17 	ldw	r6,40(sp)
   4025c:	a44b883a 	add	r5,r20,r17
   40260:	bc49883a 	add	r4,r23,r17
   40264:	980f883a 	mov	r7,r19
   40268:	dc400915 	stw	r17,36(sp)
   4026c:	00401f80 	call	401f8 <fft_helper>
   40270:	9814913a 	slli	r10,r19,4
   40274:	bc800204 	addi	r18,r23,8

		for (int i = 0; i < n; i += 2 * step) {
   40278:	0023883a 	mov	r17,zero
   4027c:	d8800a17 	ldw	r2,40(sp)
   40280:	8880760e 	bge	r17,r2,4045c <fft_helper.part.0+0x258>
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   40284:	8809883a 	mov	r4,r17
   40288:	da800e15 	stw	r10,56(sp)
   4028c:	00466600 	call	46660 <__floatsidf>
   40290:	d9000a17 	ldw	r4,40(sp)
   40294:	1039883a 	mov	fp,r2
   40298:	182d883a 	mov	r22,r3
   4029c:	00466600 	call	46660 <__floatsidf>
   402a0:	e009883a 	mov	r4,fp
   402a4:	b00b883a 	mov	r5,r22
   402a8:	000d883a 	mov	r6,zero
   402ac:	01e00034 	movhi	r7,32768
   402b0:	102b883a 	mov	r21,r2
   402b4:	1821883a 	mov	r16,r3
   402b8:	00454780 	call	45478 <__muldf3>
   402bc:	a80d883a 	mov	r6,r21
   402c0:	800f883a 	mov	r7,r16
   402c4:	1009883a 	mov	r4,r2
   402c8:	180b883a 	mov	r5,r3
   402cc:	00448500 	call	44850 <__divdf3>
   402d0:	01951134 	movhi	r6,21572
   402d4:	01f00274 	movhi	r7,49161
   402d8:	e009883a 	mov	r4,fp
   402dc:	b00b883a 	mov	r5,r22
   402e0:	318b4604 	addi	r6,r6,11544
   402e4:	39c87ec4 	addi	r7,r7,8699
   402e8:	d8c00d15 	stw	r3,52(sp)
   402ec:	d8800c15 	stw	r2,48(sp)
   402f0:	00454780 	call	45478 <__muldf3>
   402f4:	a80d883a 	mov	r6,r21
   402f8:	800f883a 	mov	r7,r16
   402fc:	1009883a 	mov	r4,r2
   40300:	180b883a 	mov	r5,r3
   40304:	00448500 	call	44850 <__divdf3>
   40308:	db000c17 	ldw	r12,48(sp)
   4030c:	dac00d17 	ldw	r11,52(sp)
   40310:	100f883a 	mov	r7,r2
   40314:	600b883a 	mov	r5,r12
   40318:	580d883a 	mov	r6,r11
   4031c:	d8c00015 	stw	r3,0(sp)
   40320:	d9000504 	addi	r4,sp,20
   40324:	0040b100 	call	40b10 <cexp>
   40328:	d8c00917 	ldw	r3,36(sp)
   4032c:	d9c00717 	ldw	r7,28(sp)
   40330:	d9400517 	ldw	r5,20(sp)
   40334:	90c5883a 	add	r2,r18,r3
   40338:	10c00017 	ldw	r3,0(r2)
   4033c:	d9800617 	ldw	r6,24(sp)
   40340:	d9000504 	addi	r4,sp,20
   40344:	d8c00315 	stw	r3,12(sp)
   40348:	10800117 	ldw	r2,4(r2)
   4034c:	d8c00917 	ldw	r3,36(sp)
			buf[i / 2]     = out[i] + t;
   40350:	8820d7fa 	srli	r16,r17,31
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   40354:	d8800415 	stw	r2,16(sp)
   40358:	b8c5883a 	add	r2,r23,r3
   4035c:	10c00017 	ldw	r3,0(r2)
			buf[i / 2]     = out[i] + t;
   40360:	8461883a 	add	r16,r16,r17
   40364:	8021d07a 	srai	r16,r16,1
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   40368:	d8c00115 	stw	r3,4(sp)
   4036c:	10800117 	ldw	r2,4(r2)
			buf[i / 2]     = out[i] + t;
   40370:	8020913a 	slli	r16,r16,4
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   40374:	d8800215 	stw	r2,8(sp)
   40378:	d8800817 	ldw	r2,32(sp)
			buf[i / 2]     = out[i] + t;
   4037c:	a421883a 	add	r16,r20,r16
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   40380:	d8800015 	stw	r2,0(sp)
   40384:	00435300 	call	43530 <__muldc3>
   40388:	dac00717 	ldw	r11,28(sp)
   4038c:	df000817 	ldw	fp,32(sp)
			buf[i / 2]     = out[i] + t;
   40390:	91800017 	ldw	r6,0(r18)
   40394:	91c00117 	ldw	r7,4(r18)
   40398:	5809883a 	mov	r4,r11
   4039c:	e00b883a 	mov	r5,fp
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
   403a0:	dd800517 	ldw	r22,20(sp)
   403a4:	dd400617 	ldw	r21,24(sp)
			buf[i / 2]     = out[i] + t;
   403a8:	dac00d15 	stw	r11,52(sp)
   403ac:	0043fa40 	call	43fa4 <__adddf3>
   403b0:	b9c00117 	ldw	r7,4(r23)
   403b4:	b9800017 	ldw	r6,0(r23)
   403b8:	b009883a 	mov	r4,r22
   403bc:	a80b883a 	mov	r5,r21
   403c0:	d8c00c15 	stw	r3,48(sp)
   403c4:	d8800b15 	stw	r2,44(sp)
   403c8:	0043fa40 	call	43fa4 <__adddf3>
   403cc:	db400b17 	ldw	r13,44(sp)
   403d0:	80c00115 	stw	r3,4(r16)
   403d4:	80800015 	stw	r2,0(r16)
   403d8:	83400215 	stw	r13,8(r16)
   403dc:	db000c17 	ldw	r12,48(sp)
			buf[(i + n)/2] = out[i] - t;
   403e0:	e00f883a 	mov	r7,fp
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
			buf[i / 2]     = out[i] + t;
   403e4:	83000315 	stw	r12,12(r16)
			buf[(i + n)/2] = out[i] - t;
   403e8:	d8c00a17 	ldw	r3,40(sp)
   403ec:	dac00d17 	ldw	r11,52(sp)
   403f0:	91000017 	ldw	r4,0(r18)
   403f4:	1c45883a 	add	r2,r3,r17
   403f8:	91400117 	ldw	r5,4(r18)
   403fc:	1020d7fa 	srli	r16,r2,31
   40400:	580d883a 	mov	r6,r11
{
	if (step < n) {
		fft_helper(out, buf, n, step * 2);
		fft_helper(out + step, buf + step, n, step * 2);

		for (int i = 0; i < n; i += 2 * step) {
   40404:	8ce3883a 	add	r17,r17,r19
			cplx t = cexp(-I * M_PI * i / n) * out[i + step];
			buf[i / 2]     = out[i] + t;
			buf[(i + n)/2] = out[i] - t;
   40408:	80a1883a 	add	r16,r16,r2
   4040c:	0045ce40 	call	45ce4 <__subdf3>
   40410:	b9400117 	ldw	r5,4(r23)
   40414:	b9000017 	ldw	r4,0(r23)
   40418:	8021d07a 	srai	r16,r16,1
   4041c:	b00d883a 	mov	r6,r22
   40420:	a80f883a 	mov	r7,r21
   40424:	1839883a 	mov	fp,r3
   40428:	8020913a 	slli	r16,r16,4
   4042c:	d8800d15 	stw	r2,52(sp)
   40430:	0045ce40 	call	45ce4 <__subdf3>
   40434:	dac00d17 	ldw	r11,52(sp)
   40438:	a421883a 	add	r16,r20,r16
   4043c:	87000315 	stw	fp,12(r16)
   40440:	82c00215 	stw	r11,8(r16)
   40444:	da800e17 	ldw	r10,56(sp)
   40448:	80800015 	stw	r2,0(r16)
   4044c:	80c00115 	stw	r3,4(r16)
   40450:	baaf883a 	add	r23,r23,r10
   40454:	92a5883a 	add	r18,r18,r10
   40458:	003f8806 	br	4027c <__alt_data_end+0xf404027c>
		}
	}
}
   4045c:	dfc01817 	ldw	ra,96(sp)
   40460:	df001717 	ldw	fp,92(sp)
   40464:	ddc01617 	ldw	r23,88(sp)
   40468:	dd801517 	ldw	r22,84(sp)
   4046c:	dd401417 	ldw	r21,80(sp)
   40470:	dd001317 	ldw	r20,76(sp)
   40474:	dcc01217 	ldw	r19,72(sp)
   40478:	dc801117 	ldw	r18,68(sp)
   4047c:	dc401017 	ldw	r17,64(sp)
   40480:	dc000f17 	ldw	r16,60(sp)
   40484:	dec01904 	addi	sp,sp,100
   40488:	f800283a 	ret

0004048c <fft>:
	}
}

void fft(cplx buf[], int n)
{
	cplx out[n];
   4048c:	2804913a 	slli	r2,r5,4
		runvga(progress%20);
	}
}

void fft(cplx buf[], int n)
{
   40490:	defffe04 	addi	sp,sp,-8
   40494:	df000015 	stw	fp,0(sp)
	cplx out[n];
   40498:	10800104 	addi	r2,r2,4
		runvga(progress%20);
	}
}

void fft(cplx buf[], int n)
{
   4049c:	dfc00115 	stw	ra,4(sp)
   404a0:	d839883a 	mov	fp,sp
	cplx out[n];
   404a4:	d8b7c83a 	sub	sp,sp,r2
		runvga(progress%20);
	}
}

void fft(cplx buf[], int n)
{
   404a8:	2811883a 	mov	r8,r5
   404ac:	200d883a 	mov	r6,r4
	cplx out[n];
   404b0:	d80b883a 	mov	r5,sp
   404b4:	d80f883a 	mov	r7,sp
	for (int i = 0; i < n; i++){
   404b8:	0007883a 	mov	r3,zero
		out[i] = buf[i];
   404bc:	02400404 	movi	r9,16
}

void fft(cplx buf[], int n)
{
	cplx out[n];
	for (int i = 0; i < n; i++){
   404c0:	1a000c0e 	bge	r3,r8,404f4 <fft+0x68>
		out[i] = buf[i];
   404c4:	0005883a 	mov	r2,zero
   404c8:	1240062e 	bgeu	r2,r9,404e4 <fft+0x58>
   404cc:	3097883a 	add	r11,r6,r2
   404d0:	5ac00003 	ldbu	r11,0(r11)
   404d4:	3895883a 	add	r10,r7,r2
   404d8:	10800044 	addi	r2,r2,1
   404dc:	52c00005 	stb	r11,0(r10)
   404e0:	003ff906 	br	404c8 <__alt_data_end+0xf40404c8>
}

void fft(cplx buf[], int n)
{
	cplx out[n];
	for (int i = 0; i < n; i++){
   404e4:	18c00044 	addi	r3,r3,1
   404e8:	31800404 	addi	r6,r6,16
   404ec:	39c00404 	addi	r7,r7,16
   404f0:	003ff306 	br	404c0 <__alt_data_end+0xf40404c0>
   404f4:	01c00044 	movi	r7,1
   404f8:	01800804 	movi	r6,32
   404fc:	00402040 	call	40204 <fft_helper.part.0>
		out[i] = buf[i];
	}
	fft_helper(buf, out, N, 1);
}
   40500:	e037883a 	mov	sp,fp
   40504:	dfc00117 	ldw	ra,4(sp)
   40508:	df000017 	ldw	fp,0(sp)
   4050c:	dec00204 	addi	sp,sp,8
   40510:	f800283a 	ret

00040514 <printcplxArr>:
		}
	}
}

// Convert fft output to magnitude of frequencies
void printcplxArr(cplx arr[], int size){
   40514:	defff304 	addi	sp,sp,-52
   40518:	df000b15 	stw	fp,44(sp)
   4051c:	ddc00a15 	stw	r23,40(sp)
   40520:	dc800515 	stw	r18,20(sp)
   40524:	dc400415 	stw	r17,16(sp)
   40528:	04820074 	movhi	r18,2049
   4052c:	04420074 	movhi	r17,2049
		} else {
			real[i] = (int) creal(arr[i]);
			imag[i] = (int) cimag(arr[i]);
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
   40530:	05c20034 	movhi	r23,2048
		freq[i] = i * 11025 / N;
   40534:	07020034 	movhi	fp,2048
		}
	}
}

// Convert fft output to magnitude of frequencies
void printcplxArr(cplx arr[], int size){
   40538:	dd800915 	stw	r22,36(sp)
   4053c:	dcc00615 	stw	r19,24(sp)
   40540:	dc000315 	stw	r16,12(sp)
   40544:	dfc00c15 	stw	ra,48(sp)
   40548:	dd400815 	stw	r21,32(sp)
   4054c:	dd000715 	stw	r20,28(sp)
   40550:	d9400015 	stw	r5,0(sp)
   40554:	94a5cf04 	addi	r18,r18,-26820
   40558:	8c65af04 	addi	r17,r17,-26948
   4055c:	202d883a 	mov	r22,r4
   40560:	24c00204 	addi	r19,r4,8
	for (int i = 0; i < size; i++){
   40564:	0021883a 	mov	r16,zero
		} else {
			real[i] = (int) creal(arr[i]);
			imag[i] = (int) cimag(arr[i]);
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
   40568:	bdd2af04 	addi	r23,r23,19132
		freq[i] = i * 11025 / N;
   4056c:	e712cf04 	addi	fp,fp,19260
	}
}

// Convert fft output to magnitude of frequencies
void printcplxArr(cplx arr[], int size){
	for (int i = 0; i < size; i++){
   40570:	d8800017 	ldw	r2,0(sp)
   40574:	8080330e 	bge	r16,r2,40644 <printcplxArr+0x130>
		if (!cimag(arr[i])) {
   40578:	9d400017 	ldw	r21,0(r19)
   4057c:	9d000117 	ldw	r20,4(r19)
   40580:	000d883a 	mov	r6,zero
   40584:	a809883a 	mov	r4,r21
   40588:	a00b883a 	mov	r5,r20
   4058c:	000f883a 	mov	r7,zero
   40590:	00452200 	call	45220 <__eqdf2>
			real[i] = (int) creal(arr[i]);
   40594:	b1000017 	ldw	r4,0(r22)
   40598:	b1400117 	ldw	r5,4(r22)
}

// Convert fft output to magnitude of frequencies
void printcplxArr(cplx arr[], int size){
	for (int i = 0; i < size; i++){
		if (!cimag(arr[i])) {
   4059c:	1000041e 	bne	r2,zero,405b0 <printcplxArr+0x9c>
			real[i] = (int) creal(arr[i]);
   405a0:	00465e00 	call	465e0 <__fixdfsi>
   405a4:	90800015 	stw	r2,0(r18)
			imag[i] = 0;
   405a8:	88000015 	stw	zero,0(r17)
   405ac:	00000606 	br	405c8 <printcplxArr+0xb4>
		} else {
			real[i] = (int) creal(arr[i]);
   405b0:	00465e00 	call	465e0 <__fixdfsi>
			imag[i] = (int) cimag(arr[i]);
   405b4:	a809883a 	mov	r4,r21
   405b8:	a00b883a 	mov	r5,r20
	for (int i = 0; i < size; i++){
		if (!cimag(arr[i])) {
			real[i] = (int) creal(arr[i]);
			imag[i] = 0;
		} else {
			real[i] = (int) creal(arr[i]);
   405bc:	90800015 	stw	r2,0(r18)
			imag[i] = (int) cimag(arr[i]);
   405c0:	00465e00 	call	465e0 <__fixdfsi>
   405c4:	88800015 	stw	r2,0(r17)
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
   405c8:	91400017 	ldw	r5,0(r18)
   405cc:	89c00017 	ldw	r7,0(r17)
   405d0:	8429883a 	add	r20,r16,r16
   405d4:	a529883a 	add	r20,r20,r20
   405d8:	a5cd883a 	add	r6,r20,r23
   405dc:	2809883a 	mov	r4,r5
   405e0:	d9800215 	stw	r6,8(sp)
   405e4:	d9c00115 	stw	r7,4(sp)
   405e8:	0043f7c0 	call	43f7c <__mulsi3>
   405ec:	d9c00117 	ldw	r7,4(sp)
   405f0:	102b883a 	mov	r21,r2
		freq[i] = i * 11025 / N;
   405f4:	a729883a 	add	r20,r20,fp
		} else {
			real[i] = (int) creal(arr[i]);
			imag[i] = (int) cimag(arr[i]);
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
   405f8:	380b883a 	mov	r5,r7
   405fc:	3809883a 	mov	r4,r7
   40600:	0043f7c0 	call	43f7c <__mulsi3>
   40604:	d9800217 	ldw	r6,8(sp)
   40608:	a885883a 	add	r2,r21,r2
		freq[i] = i * 11025 / N;
   4060c:	014ac444 	movi	r5,11025
		} else {
			real[i] = (int) creal(arr[i]);
			imag[i] = (int) cimag(arr[i]);
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
   40610:	30800015 	stw	r2,0(r6)
		freq[i] = i * 11025 / N;
   40614:	8009883a 	mov	r4,r16
   40618:	0043f7c0 	call	43f7c <__mulsi3>
   4061c:	1000010e 	bge	r2,zero,40624 <printcplxArr+0x110>
   40620:	108007c4 	addi	r2,r2,31
   40624:	1005d17a 	srai	r2,r2,5
	}
}

// Convert fft output to magnitude of frequencies
void printcplxArr(cplx arr[], int size){
	for (int i = 0; i < size; i++){
   40628:	84000044 	addi	r16,r16,1
   4062c:	94800104 	addi	r18,r18,4
			real[i] = (int) creal(arr[i]);
			imag[i] = (int) cimag(arr[i]);
		}

		magn[i] = (real[i]*real[i] + imag[i]*imag[i]);
		freq[i] = i * 11025 / N;
   40630:	a0800015 	stw	r2,0(r20)
   40634:	8c400104 	addi	r17,r17,4
   40638:	b5800404 	addi	r22,r22,16
   4063c:	9cc00404 	addi	r19,r19,16
   40640:	003fcb06 	br	40570 <__alt_data_end+0xf4040570>
	}
}
   40644:	dfc00c17 	ldw	ra,48(sp)
   40648:	df000b17 	ldw	fp,44(sp)
   4064c:	ddc00a17 	ldw	r23,40(sp)
   40650:	dd800917 	ldw	r22,36(sp)
   40654:	dd400817 	ldw	r21,32(sp)
   40658:	dd000717 	ldw	r20,28(sp)
   4065c:	dcc00617 	ldw	r19,24(sp)
   40660:	dc800517 	ldw	r18,20(sp)
   40664:	dc400417 	ldw	r17,16(sp)
   40668:	dc000317 	ldw	r16,12(sp)
   4066c:	dec00d04 	addi	sp,sp,52
   40670:	f800283a 	ret

00040674 <runfft>:

// Run one instance of the fft calculation
void runfft(int index) {
   40674:	defffa04 	addi	sp,sp,-24
   40678:	dc000015 	stw	r16,0(sp)
   4067c:	2020913a 	slli	r16,r4,4
   40680:	00820034 	movhi	r2,2048
   40684:	dd000415 	stw	r20,16(sp)
   40688:	10923104 	addi	r2,r2,18628
   4068c:	2109883a 	add	r4,r4,r4
	// Copy data being processed
	for (int i = index; i < N+index; i++) {
		output[i] = data[i];
   40690:	05020034 	movhi	r20,2048
		freq[i] = i * 11025 / N;
	}
}

// Run one instance of the fft calculation
void runfft(int index) {
   40694:	dcc00315 	stw	r19,12(sp)
   40698:	dc800215 	stw	r18,8(sp)
   4069c:	dc400115 	stw	r17,4(sp)
   406a0:	dfc00515 	stw	ra,20(sp)
   406a4:	80a1883a 	add	r16,r16,r2
   406a8:	2123883a 	add	r17,r4,r4
	// Copy data being processed
	for (int i = index; i < N+index; i++) {
   406ac:	0025883a 	mov	r18,zero
   406b0:	04c02004 	movi	r19,128
		output[i] = data[i];
   406b4:	a500de04 	addi	r20,r20,888
}

// Run one instance of the fft calculation
void runfft(int index) {
	// Copy data being processed
	for (int i = index; i < N+index; i++) {
   406b8:	94c00b26 	beq	r18,r19,406e8 <runfft+0x74>
		output[i] = data[i];
   406bc:	9445883a 	add	r2,r18,r17
   406c0:	1505883a 	add	r2,r2,r20
   406c4:	11000017 	ldw	r4,0(r2)
   406c8:	94800104 	addi	r18,r18,4
   406cc:	84000404 	addi	r16,r16,16
   406d0:	004673c0 	call	4673c <__floatunsidf>
   406d4:	80bffa15 	stw	r2,-24(r16)
   406d8:	80fffb15 	stw	r3,-20(r16)
   406dc:	803ffc15 	stw	zero,-16(r16)
   406e0:	803ffd15 	stw	zero,-12(r16)
   406e4:	003ff406 	br	406b8 <__alt_data_end+0xf40406b8>
	}
	// Reset recurrent frequency data
	for (int i = 0; i < 20; i++) {
		occurFreq[i] = 0;
   406e8:	01420034 	movhi	r5,2048
   406ec:	0005883a 	mov	r2,zero
   406f0:	29521b04 	addi	r5,r5,18540
	// Copy data being processed
	for (int i = index; i < N+index; i++) {
		output[i] = data[i];
	}
	// Reset recurrent frequency data
	for (int i = 0; i < 20; i++) {
   406f4:	00c01404 	movi	r3,80
		occurFreq[i] = 0;
   406f8:	1149883a 	add	r4,r2,r5
   406fc:	04020034 	movhi	r16,2048
   40700:	20000015 	stw	zero,0(r4)
   40704:	10800104 	addi	r2,r2,4
   40708:	84121b04 	addi	r16,r16,18540
	// Copy data being processed
	for (int i = index; i < N+index; i++) {
		output[i] = data[i];
	}
	// Reset recurrent frequency data
	for (int i = 0; i < 20; i++) {
   4070c:	10fffa1e 	bne	r2,r3,406f8 <__alt_data_end+0xf40406f8>
		occurFreq[i] = 0;
	}

	// FFT and frequency magnitude calculation
	fft(output, N);
   40710:	01020034 	movhi	r4,2048
   40714:	01400804 	movi	r5,32
   40718:	21122f04 	addi	r4,r4,18620
   4071c:	004048c0 	call	4048c <fft>
	printcplxArr(output, N);
   40720:	01020034 	movhi	r4,2048
   40724:	01400804 	movi	r5,32
   40728:	21122f04 	addi	r4,r4,18620
   4072c:	00405140 	call	40514 <printcplxArr>
   40730:	02420034 	movhi	r9,2048
   40734:	02820034 	movhi	r10,2048
   40738:	01400804 	movi	r5,32
   4073c:	4a52af04 	addi	r9,r9,19132
   40740:	5292cf04 	addi	r10,r10,19260

	// Sort frequency and magnitude arrays
	// Currently O(n^2) --> Change to O(nlogn)
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N-1; j++) {
   40744:	02c01f04 	movi	r11,124
   40748:	01020034 	movhi	r4,2048
   4074c:	00c20034 	movhi	r3,2048
   40750:	2112b004 	addi	r4,r4,19136
   40754:	18d2d004 	addi	r3,r3,19264
   40758:	0005883a 	mov	r2,zero
   4075c:	124f883a 	add	r7,r2,r9
			if (magn[j] > magn[j+1]) {
   40760:	39800017 	ldw	r6,0(r7)
   40764:	22000017 	ldw	r8,0(r4)
   40768:	4180072e 	bgeu	r8,r6,40788 <runfft+0x114>
				unsigned int temp = magn[j];
				magn[j] = magn[j+1];
   4076c:	3a000015 	stw	r8,0(r7)
				magn[j+1] = temp;
   40770:	21800015 	stw	r6,0(r4)

				temp = freq[j];
				freq[j] = freq[j+1];
   40774:	1a000017 	ldw	r8,0(r3)
   40778:	128d883a 	add	r6,r2,r10
			if (magn[j] > magn[j+1]) {
				unsigned int temp = magn[j];
				magn[j] = magn[j+1];
				magn[j+1] = temp;

				temp = freq[j];
   4077c:	31c00017 	ldw	r7,0(r6)
				freq[j] = freq[j+1];
   40780:	32000015 	stw	r8,0(r6)
				freq[j+1] = temp;
   40784:	19c00015 	stw	r7,0(r3)
   40788:	10800104 	addi	r2,r2,4
   4078c:	21000104 	addi	r4,r4,4
   40790:	18c00104 	addi	r3,r3,4
	printcplxArr(output, N);

	// Sort frequency and magnitude arrays
	// Currently O(n^2) --> Change to O(nlogn)
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N-1; j++) {
   40794:	12fff11e 	bne	r2,r11,4075c <__alt_data_end+0xf404075c>
   40798:	297fffc4 	addi	r5,r5,-1
	fft(output, N);
	printcplxArr(output, N);

	// Sort frequency and magnitude arrays
	// Currently O(n^2) --> Change to O(nlogn)
	for (int i = 0; i < N; i++) {
   4079c:	283fea1e 	bne	r5,zero,40748 <__alt_data_end+0xf4040748>
	}

	// Update the most recurrent frequencies
	for (int i = N; i >= N-30; i--) {
		for (int j = 0; j < 20; j++) {
			if ((signed int)(rangeFreq[j]-freq[i]) > 0) {
   407a0:	01c20034 	movhi	r7,2048
   407a4:	02020034 	movhi	r8,2048
   407a8:	01000804 	movi	r4,32
   407ac:	39d2cf04 	addi	r7,r7,19260
   407b0:	4200ca04 	addi	r8,r8,808
		}
	}

	// Update the most recurrent frequencies
	for (int i = N; i >= N-30; i--) {
		for (int j = 0; j < 20; j++) {
   407b4:	02400504 	movi	r9,20
			}
		}
	}

	// Update the most recurrent frequencies
	for (int i = N; i >= N-30; i--) {
   407b8:	02800044 	movi	r10,1
		for (int j = 0; j < 20; j++) {
			if ((signed int)(rangeFreq[j]-freq[i]) > 0) {
   407bc:	2105883a 	add	r2,r4,r4
   407c0:	1085883a 	add	r2,r2,r2
   407c4:	11c5883a 	add	r2,r2,r7
   407c8:	11800017 	ldw	r6,0(r2)
   407cc:	0007883a 	mov	r3,zero
   407d0:	18c5883a 	add	r2,r3,r3
   407d4:	1085883a 	add	r2,r2,r2
   407d8:	120b883a 	add	r5,r2,r8
   407dc:	29400017 	ldw	r5,0(r5)
   407e0:	298bc83a 	sub	r5,r5,r6
   407e4:	0140050e 	bge	zero,r5,407fc <runfft+0x188>
				occurFreq[j]++;
   407e8:	8085883a 	add	r2,r16,r2
   407ec:	10c00017 	ldw	r3,0(r2)
   407f0:	18c00044 	addi	r3,r3,1
   407f4:	10c00015 	stw	r3,0(r2)
				break;
   407f8:	00000206 	br	40804 <runfft+0x190>
		}
	}

	// Update the most recurrent frequencies
	for (int i = N; i >= N-30; i--) {
		for (int j = 0; j < 20; j++) {
   407fc:	18c00044 	addi	r3,r3,1
   40800:	1a7ff31e 	bne	r3,r9,407d0 <__alt_data_end+0xf40407d0>
			}
		}
	}

	// Update the most recurrent frequencies
	for (int i = N; i >= N-30; i--) {
   40804:	213fffc4 	addi	r4,r4,-1
   40808:	22bfec1e 	bne	r4,r10,407bc <__alt_data_end+0xf40407bc>
				occurFreq[j]++;
				break;
			}
		}
	}
}
   4080c:	dfc00517 	ldw	ra,20(sp)
   40810:	dd000417 	ldw	r20,16(sp)
   40814:	dcc00317 	ldw	r19,12(sp)
   40818:	dc800217 	ldw	r18,8(sp)
   4081c:	dc400117 	ldw	r17,4(sp)
   40820:	dc000017 	ldw	r16,0(sp)
   40824:	dec00604 	addi	sp,sp,24
   40828:	f800283a 	ret

0004082c <runvga>:
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
			for( int i = 0; i < 160; i++ ) {
				if (i % 8 != 0 && i % 8 != 1 ) {
					*vga = (j << 24) | (i << 16) | image[i][j];
   4082c:	d2600017 	ldw	r9,-32768(gp)
		}
	}
}

// Update 1 frame on VGA output
void runvga(int change) {
   40830:	defff704 	addi	sp,sp,-36
   40834:	01c20034 	movhi	r7,2048
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
			for( int i = 0; i < 160; i++ ) {
				if (i % 8 != 0 && i % 8 != 1 ) {
					*vga = (j << 24) | (i << 16) | image[i][j];
					image[i][j] = (j < (sizes[i/8] + 10) || j > (110 - sizes[i/8])) ? colors[i/8] : 0;
   40838:	02c20034 	movhi	r11,2048
   4083c:	03020034 	movhi	r12,2048
		}
	}
}

// Update 1 frame on VGA output
void runvga(int change) {
   40840:	dc800215 	stw	r18,8(sp)
   40844:	dfc00815 	stw	ra,32(sp)
   40848:	ddc00715 	stw	r23,28(sp)
   4084c:	dd800615 	stw	r22,24(sp)
   40850:	dd400515 	stw	r21,20(sp)
   40854:	dd000415 	stw	r20,16(sp)
   40858:	dcc00315 	stw	r19,12(sp)
   4085c:	dc400115 	stw	r17,4(sp)
   40860:	dc000015 	stw	r16,0(sp)
   40864:	2025883a 	mov	r18,r4
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
   40868:	0007883a 	mov	r3,zero
   4086c:	39d2ef04 	addi	r7,r7,19388
			for( int i = 0; i < 160; i++ ) {
				if (i % 8 != 0 && i % 8 != 1 ) {
   40870:	02800044 	movi	r10,1
					*vga = (j << 24) | (i << 16) | image[i][j];
					image[i][j] = (j < (sizes[i/8] + 10) || j > (110 - sizes[i/8])) ? colors[i/8] : 0;
   40874:	5ad0f204 	addi	r11,r11,17352
   40878:	6310de04 	addi	r12,r12,17272
   4087c:	03401b84 	movi	r13,110

// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
			for( int i = 0; i < 160; i++ ) {
   40880:	03802804 	movi	r14,160
}

// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
   40884:	03c01e04 	movi	r15,120
			for( int i = 0; i < 160; i++ ) {
				if (i % 8 != 0 && i % 8 != 1 ) {
					*vga = (j << 24) | (i << 16) | image[i][j];
   40888:	1810963a 	slli	r8,r3,24
   4088c:	19cb883a 	add	r5,r3,r7
   40890:	0009883a 	mov	r4,zero
// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
			for( int i = 0; i < 160; i++ ) {
				if (i % 8 != 0 && i % 8 != 1 ) {
   40894:	208001cc 	andi	r2,r4,7
   40898:	10001526 	beq	r2,zero,408f0 <runvga+0xc4>
   4089c:	12801426 	beq	r2,r10,408f0 <runvga+0xc4>
					*vga = (j << 24) | (i << 16) | image[i][j];
   408a0:	2004943a 	slli	r2,r4,16
   408a4:	120cb03a 	or	r6,r2,r8
   408a8:	28800003 	ldbu	r2,0(r5)
   408ac:	3084b03a 	or	r2,r6,r2
   408b0:	48800015 	stw	r2,0(r9)
					image[i][j] = (j < (sizes[i/8] + 10) || j > (110 - sizes[i/8])) ? colors[i/8] : 0;
   408b4:	2005d0fa 	srai	r2,r4,3
   408b8:	1085883a 	add	r2,r2,r2
   408bc:	108d883a 	add	r6,r2,r2
   408c0:	598d883a 	add	r6,r11,r6
   408c4:	31800017 	ldw	r6,0(r6)
   408c8:	34000244 	addi	r16,r6,9
   408cc:	80c0020e 	bge	r16,r3,408d8 <runvga+0xac>
   408d0:	698dc83a 	sub	r6,r13,r6
   408d4:	30c0040e 	bge	r6,r3,408e8 <runvga+0xbc>
   408d8:	1085883a 	add	r2,r2,r2
   408dc:	6085883a 	add	r2,r12,r2
   408e0:	10800003 	ldbu	r2,0(r2)
   408e4:	00000106 	br	408ec <runvga+0xc0>
   408e8:	0005883a 	mov	r2,zero
   408ec:	28800005 	stb	r2,0(r5)

// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
			for( int i = 0; i < 160; i++ ) {
   408f0:	21000044 	addi	r4,r4,1
   408f4:	29401e04 	addi	r5,r5,120
   408f8:	23bfe61e 	bne	r4,r14,40894 <__alt_data_end+0xf4040894>
}

// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
   408fc:	18c00044 	addi	r3,r3,1
   40900:	1bffe11e 	bne	r3,r15,40888 <__alt_data_end+0xf4040888>
   40904:	04020034 	movhi	r16,2048
   40908:	05c20034 	movhi	r23,2048
		}

		// Change Size and Color
		for (int i = 0; i < 20; i++) {
			// size change
			if (change == 1) {
   4090c:	04c00044 	movi	r19,1
			}
			else {
				if (rand() % 3 == 0) {
					sizes[i] += (rand() % 2);
				} else if (rand() % 3 == 1) {
					sizes[i] -= (rand() % 2);
   40910:	05200034 	movhi	r20,32768

		// Change Size and Color
		for (int i = 0; i < 20; i++) {
			// size change
			if (change == 1) {
				sizes[i] = 3*occurFreq[i];
   40914:	05820034 	movhi	r22,2048
   40918:	8410de04 	addi	r16,r16,17272
   4091c:	bdd0f204 	addi	r23,r23,17352
}

// Update 1 frame on VGA output
void runvga(int change) {
	// Display and update image
		for( int j = 0; j < 120; j++ ) {
   40920:	0023883a 	mov	r17,zero
			}
			else {
				if (rand() % 3 == 0) {
					sizes[i] += (rand() % 2);
				} else if (rand() % 3 == 1) {
					sizes[i] -= (rand() % 2);
   40924:	a4e9883a 	add	r20,r20,r19
   40928:	057fff84 	movi	r21,-2

		// Change Size and Color
		for (int i = 0; i < 20; i++) {
			// size change
			if (change == 1) {
				sizes[i] = 3*occurFreq[i];
   4092c:	b5921b04 	addi	r22,r22,18540
		}

		// Change Size and Color
		for (int i = 0; i < 20; i++) {
			// size change
			if (change == 1) {
   40930:	94c0041e 	bne	r18,r19,40944 <runvga+0x118>
				sizes[i] = 3*occurFreq[i];
   40934:	8d85883a 	add	r2,r17,r22
   40938:	10800017 	ldw	r2,0(r2)
   4093c:	1087883a 	add	r3,r2,r2
   40940:	00000c06 	br	40974 <runvga+0x148>
			}
			else {
				if (rand() % 3 == 0) {
   40944:	00468700 	call	46870 <rand>
   40948:	014000c4 	movi	r5,3
   4094c:	1009883a 	mov	r4,r2
   40950:	0043e4c0 	call	43e4c <__modsi3>
   40954:	1000091e 	bne	r2,zero,4097c <runvga+0x150>
					sizes[i] += (rand() % 2);
   40958:	00468700 	call	46870 <rand>
   4095c:	1504703a 	and	r2,r2,r20
   40960:	1000030e 	bge	r2,zero,40970 <runvga+0x144>
   40964:	10bfffc4 	addi	r2,r2,-1
   40968:	1544b03a 	or	r2,r2,r21
   4096c:	10800044 	addi	r2,r2,1
   40970:	b8c00017 	ldw	r3,0(r23)
   40974:	1885883a 	add	r2,r3,r2
   40978:	00000d06 	br	409b0 <runvga+0x184>
				} else if (rand() % 3 == 1) {
   4097c:	00468700 	call	46870 <rand>
   40980:	014000c4 	movi	r5,3
   40984:	1009883a 	mov	r4,r2
   40988:	0043e4c0 	call	43e4c <__modsi3>
   4098c:	14c0091e 	bne	r2,r19,409b4 <runvga+0x188>
					sizes[i] -= (rand() % 2);
   40990:	00468700 	call	46870 <rand>
   40994:	1504703a 	and	r2,r2,r20
   40998:	1000030e 	bge	r2,zero,409a8 <runvga+0x17c>
   4099c:	10bfffc4 	addi	r2,r2,-1
   409a0:	1544b03a 	or	r2,r2,r21
   409a4:	10800044 	addi	r2,r2,1
   409a8:	b8c00017 	ldw	r3,0(r23)
   409ac:	1885c83a 	sub	r2,r3,r2
   409b0:	b8800015 	stw	r2,0(r23)
				}
			}

			// color change
			if (rand() % 5 == 0) {
   409b4:	00468700 	call	46870 <rand>
   409b8:	01400144 	movi	r5,5
   409bc:	1009883a 	mov	r4,r2
   409c0:	0043e4c0 	call	43e4c <__modsi3>
   409c4:	1000071e 	bne	r2,zero,409e4 <runvga+0x1b8>
				if (colors[i] == 0b000011) {
   409c8:	80800017 	ldw	r2,0(r16)
   409cc:	00c000c4 	movi	r3,3
   409d0:	10c0021e 	bne	r2,r3,409dc <runvga+0x1b0>
						colors[i] = 0b000001;
   409d4:	84c00015 	stw	r19,0(r16)
   409d8:	00000206 	br	409e4 <runvga+0x1b8>
				} else {
						colors[i]++;
   409dc:	10800044 	addi	r2,r2,1
   409e0:	80800015 	stw	r2,0(r16)
   409e4:	8c400104 	addi	r17,r17,4
				}
			}
		}

		// Change Size and Color
		for (int i = 0; i < 20; i++) {
   409e8:	00801404 	movi	r2,80
   409ec:	84000104 	addi	r16,r16,4
   409f0:	bdc00104 	addi	r23,r23,4
   409f4:	88bfce1e 	bne	r17,r2,40930 <__alt_data_end+0xf4040930>
				} else {
						colors[i]++;
				}
			}
		}
}
   409f8:	dfc00817 	ldw	ra,32(sp)
   409fc:	ddc00717 	ldw	r23,28(sp)
   40a00:	dd800617 	ldw	r22,24(sp)
   40a04:	dd400517 	ldw	r21,20(sp)
   40a08:	dd000417 	ldw	r20,16(sp)
   40a0c:	dcc00317 	ldw	r19,12(sp)
   40a10:	dc800217 	ldw	r18,8(sp)
   40a14:	dc400117 	ldw	r17,4(sp)
   40a18:	dc000017 	ldw	r16,0(sp)
   40a1c:	dec00904 	addi	sp,sp,36
   40a20:	f800283a 	ret

00040a24 <vert_time_isr>:
			}
		}
}

// Update the image array and display it on the VGA screen
static void vert_time_isr(void * context, alt_u32 id){
   40a24:	defffe04 	addi	sp,sp,-8
   40a28:	dfc00115 	stw	ra,4(sp)
   40a2c:	dc000015 	stw	r16,0(sp)
	static int progress = 0;

	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE, 0);
   40a30:	00840004 	movi	r2,4096
   40a34:	10000035 	stwio	zero,0(r2)
	progress++;
   40a38:	d4200617 	ldw	r16,-32744(gp)
	if (progress % 20 == 0) {
   40a3c:	01400504 	movi	r5,20
// Update the image array and display it on the VGA screen
static void vert_time_isr(void * context, alt_u32 id){
	static int progress = 0;

	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE, 0);
	progress++;
   40a40:	84000044 	addi	r16,r16,1
	if (progress % 20 == 0) {
   40a44:	8009883a 	mov	r4,r16
// Update the image array and display it on the VGA screen
static void vert_time_isr(void * context, alt_u32 id){
	static int progress = 0;

	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE, 0);
	progress++;
   40a48:	d4200615 	stw	r16,-32744(gp)
	if (progress % 20 == 0) {
   40a4c:	0043e4c0 	call	43e4c <__modsi3>
   40a50:	1000081e 	bne	r2,zero,40a74 <vert_time_isr+0x50>
		runfft((int)(progress/20));
   40a54:	8009883a 	mov	r4,r16
   40a58:	01400504 	movi	r5,20
   40a5c:	0043dc80 	call	43dc8 <__divsi3>
   40a60:	1009883a 	mov	r4,r2
	} else {
		runvga(progress%20);
	}
}
   40a64:	dfc00117 	ldw	ra,4(sp)
   40a68:	dc000017 	ldw	r16,0(sp)
   40a6c:	dec00204 	addi	sp,sp,8
	static int progress = 0;

	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE, 0);
	progress++;
	if (progress % 20 == 0) {
		runfft((int)(progress/20));
   40a70:	00406741 	jmpi	40674 <runfft>
	} else {
		runvga(progress%20);
   40a74:	1009883a 	mov	r4,r2
	}
}
   40a78:	dfc00117 	ldw	ra,4(sp)
   40a7c:	dc000017 	ldw	r16,0(sp)
   40a80:	dec00204 	addi	sp,sp,8
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_0_BASE, 0);
	progress++;
	if (progress % 20 == 0) {
		runfft((int)(progress/20));
	} else {
		runvga(progress%20);
   40a84:	004082c1 	jmpi	4082c <runvga>

00040a88 <main>:
// Pointer to VGA controller
volatile unsigned *vga = (volatile unsigned *) VGA_INTEGRATE_0_BASE;

int main()
{
	alt_putstr("Hello from Nios II!\n");
   40a88:	01020034 	movhi	r4,2048

// Pointer to VGA controller
volatile unsigned *vga = (volatile unsigned *) VGA_INTEGRATE_0_BASE;

int main()
{
   40a8c:	defff904 	addi	sp,sp,-28
	alt_putstr("Hello from Nios II!\n");
   40a90:	21000004 	addi	r4,r4,0

// Pointer to VGA controller
volatile unsigned *vga = (volatile unsigned *) VGA_INTEGRATE_0_BASE;

int main()
{
   40a94:	dd400515 	stw	r21,20(sp)
   40a98:	dd000415 	stw	r20,16(sp)
   40a9c:	dcc00315 	stw	r19,12(sp)
   40aa0:	dc800215 	stw	r18,8(sp)
   40aa4:	dc000015 	stw	r16,0(sp)
   40aa8:	dfc00615 	stw	ra,24(sp)
   40aac:	dc400115 	stw	r17,4(sp)
	alt_putstr("Hello from Nios II!\n");
   40ab0:	0046be00 	call	46be0 <alt_putstr>

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
	  for( int y = 0; y < 120; y++ ) {
		  image[x][y] = 0;
		  *vga = (y << 24) | (x << 16) | 0;
   40ab4:	d4a00017 	ldw	r18,-32768(gp)
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
	  for( int y = 0; y < 120; y++ ) {
		  image[x][y] = 0;
   40ab8:	05020034 	movhi	r20,2048
int main()
{
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
   40abc:	0021883a 	mov	r16,zero
   40ac0:	04c01e04 	movi	r19,120
	  for( int y = 0; y < 120; y++ ) {
		  image[x][y] = 0;
   40ac4:	a512ef04 	addi	r20,r20,19388
int main()
{
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
   40ac8:	05402804 	movi	r21,160
   40acc:	01401e04 	movi	r5,120
   40ad0:	8009883a 	mov	r4,r16
	  for( int y = 0; y < 120; y++ ) {
		  image[x][y] = 0;
		  *vga = (y << 24) | (x << 16) | 0;
   40ad4:	8022943a 	slli	r17,r16,16
   40ad8:	0043f7c0 	call	43f7c <__mulsi3>
   40adc:	0007883a 	mov	r3,zero
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
	  for( int y = 0; y < 120; y++ ) {
		  image[x][y] = 0;
   40ae0:	1889883a 	add	r4,r3,r2
   40ae4:	2509883a 	add	r4,r4,r20
   40ae8:	20000005 	stb	zero,0(r4)
		  *vga = (y << 24) | (x << 16) | 0;
   40aec:	1808963a 	slli	r4,r3,24
{
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
	  for( int y = 0; y < 120; y++ ) {
   40af0:	18c00044 	addi	r3,r3,1
		  image[x][y] = 0;
		  *vga = (y << 24) | (x << 16) | 0;
   40af4:	2448b03a 	or	r4,r4,r17
   40af8:	91000015 	stw	r4,0(r18)
{
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
	  for( int y = 0; y < 120; y++ ) {
   40afc:	1cfff81e 	bne	r3,r19,40ae0 <__alt_data_end+0xf4040ae0>
int main()
{
	alt_putstr("Hello from Nios II!\n");

  // Initialize the image array and VGA screen to contain all black pixels
  for( int x = 0; x < 160; x++ ) {
   40b00:	84000044 	addi	r16,r16,1
   40b04:	857ff11e 	bne	r16,r21,40acc <__alt_data_end+0xf4040acc>
		  *vga = (y << 24) | (x << 16) | 0;
	  }
  }

  // Initialize the hardware timer
  init_isr();
   40b08:	00401bc0 	call	401bc <init_isr>
   40b0c:	003fff06 	br	40b0c <__alt_data_end+0xf4040b0c>

00040b10 <cexp>:
   40b10:	defff304 	addi	sp,sp,-52
   40b14:	dcc00315 	stw	r19,12(sp)
   40b18:	dcc00d17 	ldw	r19,52(sp)
   40b1c:	dc800215 	stw	r18,8(sp)
   40b20:	2825883a 	mov	r18,r5
   40b24:	dd000415 	stw	r20,16(sp)
   40b28:	dc400115 	stw	r17,4(sp)
   40b2c:	dc000015 	stw	r16,0(sp)
   40b30:	3023883a 	mov	r17,r6
   40b34:	2021883a 	mov	r16,r4
   40b38:	3829883a 	mov	r20,r7
   40b3c:	d9400a15 	stw	r5,40(sp)
   40b40:	d9800b15 	stw	r6,44(sp)
   40b44:	d9c00c15 	stw	r7,48(sp)
   40b48:	300b883a 	mov	r5,r6
   40b4c:	9009883a 	mov	r4,r18
   40b50:	380d883a 	mov	r6,r7
   40b54:	980f883a 	mov	r7,r19
   40b58:	dfc00915 	stw	ra,36(sp)
   40b5c:	df000815 	stw	fp,32(sp)
   40b60:	ddc00715 	stw	r23,28(sp)
   40b64:	dd800615 	stw	r22,24(sp)
   40b68:	dd400515 	stw	r21,20(sp)
   40b6c:	0040c780 	call	40c78 <creal>
   40b70:	a00d883a 	mov	r6,r20
   40b74:	980f883a 	mov	r7,r19
   40b78:	9009883a 	mov	r4,r18
   40b7c:	880b883a 	mov	r5,r17
   40b80:	1039883a 	mov	fp,r2
   40b84:	182f883a 	mov	r23,r3
   40b88:	0040c640 	call	40c64 <cimag>
   40b8c:	e009883a 	mov	r4,fp
   40b90:	b80b883a 	mov	r5,r23
   40b94:	102d883a 	mov	r22,r2
   40b98:	182b883a 	mov	r21,r3
   40b9c:	0040e680 	call	40e68 <exp>
   40ba0:	b009883a 	mov	r4,r22
   40ba4:	a80b883a 	mov	r5,r21
   40ba8:	1029883a 	mov	r20,r2
   40bac:	1827883a 	mov	r19,r3
   40bb0:	0040d780 	call	40d78 <sin>
   40bb4:	100d883a 	mov	r6,r2
   40bb8:	180f883a 	mov	r7,r3
   40bbc:	a009883a 	mov	r4,r20
   40bc0:	980b883a 	mov	r5,r19
   40bc4:	00454780 	call	45478 <__muldf3>
   40bc8:	b009883a 	mov	r4,r22
   40bcc:	a80b883a 	mov	r5,r21
   40bd0:	1025883a 	mov	r18,r2
   40bd4:	1823883a 	mov	r17,r3
   40bd8:	0040c8c0 	call	40c8c <cos>
   40bdc:	a009883a 	mov	r4,r20
   40be0:	980b883a 	mov	r5,r19
   40be4:	100d883a 	mov	r6,r2
   40be8:	180f883a 	mov	r7,r3
   40bec:	00454780 	call	45478 <__muldf3>
   40bf0:	9009883a 	mov	r4,r18
   40bf4:	880b883a 	mov	r5,r17
   40bf8:	000d883a 	mov	r6,zero
   40bfc:	000f883a 	mov	r7,zero
   40c00:	1029883a 	mov	r20,r2
   40c04:	1827883a 	mov	r19,r3
   40c08:	00454780 	call	45478 <__muldf3>
   40c0c:	100d883a 	mov	r6,r2
   40c10:	180f883a 	mov	r7,r3
   40c14:	a009883a 	mov	r4,r20
   40c18:	980b883a 	mov	r5,r19
   40c1c:	0043fa40 	call	43fa4 <__adddf3>
   40c20:	80800015 	stw	r2,0(r16)
   40c24:	8005883a 	mov	r2,r16
   40c28:	80c00115 	stw	r3,4(r16)
   40c2c:	84800215 	stw	r18,8(r16)
   40c30:	84400315 	stw	r17,12(r16)
   40c34:	dfc00917 	ldw	ra,36(sp)
   40c38:	df000817 	ldw	fp,32(sp)
   40c3c:	ddc00717 	ldw	r23,28(sp)
   40c40:	dd800617 	ldw	r22,24(sp)
   40c44:	dd400517 	ldw	r21,20(sp)
   40c48:	dd000417 	ldw	r20,16(sp)
   40c4c:	dcc00317 	ldw	r19,12(sp)
   40c50:	dc800217 	ldw	r18,8(sp)
   40c54:	dc400117 	ldw	r17,4(sp)
   40c58:	dc000017 	ldw	r16,0(sp)
   40c5c:	dec00d04 	addi	sp,sp,52
   40c60:	f800283a 	ret

00040c64 <cimag>:
   40c64:	3005883a 	mov	r2,r6
   40c68:	3807883a 	mov	r3,r7
   40c6c:	defffc04 	addi	sp,sp,-16
   40c70:	dec00404 	addi	sp,sp,16
   40c74:	f800283a 	ret

00040c78 <creal>:
   40c78:	2005883a 	mov	r2,r4
   40c7c:	2807883a 	mov	r3,r5
   40c80:	defffc04 	addi	sp,sp,-16
   40c84:	dec00404 	addi	sp,sp,16
   40c88:	f800283a 	ret

00040c8c <cos>:
   40c8c:	00a00034 	movhi	r2,32768
   40c90:	defffa04 	addi	sp,sp,-24
   40c94:	10bfffc4 	addi	r2,r2,-1
   40c98:	00cffa74 	movhi	r3,16361
   40c9c:	dfc00515 	stw	ra,20(sp)
   40ca0:	2884703a 	and	r2,r5,r2
   40ca4:	18c87ec4 	addi	r3,r3,8699
   40ca8:	1880180e 	bge	r3,r2,40d0c <cos+0x80>
   40cac:	00dffc34 	movhi	r3,32752
   40cb0:	18ffffc4 	addi	r3,r3,-1
   40cb4:	1880060e 	bge	r3,r2,40cd0 <cos+0x44>
   40cb8:	280f883a 	mov	r7,r5
   40cbc:	200d883a 	mov	r6,r4
   40cc0:	0045ce40 	call	45ce4 <__subdf3>
   40cc4:	dfc00517 	ldw	ra,20(sp)
   40cc8:	dec00604 	addi	sp,sp,24
   40ccc:	f800283a 	ret
   40cd0:	d9800104 	addi	r6,sp,4
   40cd4:	00414e00 	call	414e0 <__ieee754_rem_pio2>
   40cd8:	108000cc 	andi	r2,r2,3
   40cdc:	00c00044 	movi	r3,1
   40ce0:	10c01726 	beq	r2,r3,40d40 <cos+0xb4>
   40ce4:	01000084 	movi	r4,2
   40ce8:	11000e26 	beq	r2,r4,40d24 <cos+0x98>
   40cec:	10001c26 	beq	r2,zero,40d60 <cos+0xd4>
   40cf0:	d9800317 	ldw	r6,12(sp)
   40cf4:	d9c00417 	ldw	r7,16(sp)
   40cf8:	d9000117 	ldw	r4,4(sp)
   40cfc:	d9400217 	ldw	r5,8(sp)
   40d00:	d8c00015 	stw	r3,0(sp)
   40d04:	0042e880 	call	42e88 <__kernel_sin>
   40d08:	003fee06 	br	40cc4 <__alt_data_end+0xf4040cc4>
   40d0c:	000d883a 	mov	r6,zero
   40d10:	000f883a 	mov	r7,zero
   40d14:	0041c4c0 	call	41c4c <__kernel_cos>
   40d18:	dfc00517 	ldw	ra,20(sp)
   40d1c:	dec00604 	addi	sp,sp,24
   40d20:	f800283a 	ret
   40d24:	d9800317 	ldw	r6,12(sp)
   40d28:	d9c00417 	ldw	r7,16(sp)
   40d2c:	d9000117 	ldw	r4,4(sp)
   40d30:	d9400217 	ldw	r5,8(sp)
   40d34:	0041c4c0 	call	41c4c <__kernel_cos>
   40d38:	18e0003c 	xorhi	r3,r3,32768
   40d3c:	003fe106 	br	40cc4 <__alt_data_end+0xf4040cc4>
   40d40:	d9800317 	ldw	r6,12(sp)
   40d44:	d9c00417 	ldw	r7,16(sp)
   40d48:	d9000117 	ldw	r4,4(sp)
   40d4c:	d9400217 	ldw	r5,8(sp)
   40d50:	d8800015 	stw	r2,0(sp)
   40d54:	0042e880 	call	42e88 <__kernel_sin>
   40d58:	18e0003c 	xorhi	r3,r3,32768
   40d5c:	003fd906 	br	40cc4 <__alt_data_end+0xf4040cc4>
   40d60:	d9800317 	ldw	r6,12(sp)
   40d64:	d9c00417 	ldw	r7,16(sp)
   40d68:	d9000117 	ldw	r4,4(sp)
   40d6c:	d9400217 	ldw	r5,8(sp)
   40d70:	0041c4c0 	call	41c4c <__kernel_cos>
   40d74:	003fd306 	br	40cc4 <__alt_data_end+0xf4040cc4>

00040d78 <sin>:
   40d78:	00a00034 	movhi	r2,32768
   40d7c:	defffa04 	addi	sp,sp,-24
   40d80:	10bfffc4 	addi	r2,r2,-1
   40d84:	00cffa74 	movhi	r3,16361
   40d88:	dfc00515 	stw	ra,20(sp)
   40d8c:	2884703a 	and	r2,r5,r2
   40d90:	18c87ec4 	addi	r3,r3,8699
   40d94:	1880180e 	bge	r3,r2,40df8 <sin+0x80>
   40d98:	00dffc34 	movhi	r3,32752
   40d9c:	18ffffc4 	addi	r3,r3,-1
   40da0:	1880060e 	bge	r3,r2,40dbc <sin+0x44>
   40da4:	280f883a 	mov	r7,r5
   40da8:	200d883a 	mov	r6,r4
   40dac:	0045ce40 	call	45ce4 <__subdf3>
   40db0:	dfc00517 	ldw	ra,20(sp)
   40db4:	dec00604 	addi	sp,sp,24
   40db8:	f800283a 	ret
   40dbc:	d9800104 	addi	r6,sp,4
   40dc0:	00414e00 	call	414e0 <__ieee754_rem_pio2>
   40dc4:	108000cc 	andi	r2,r2,3
   40dc8:	00c00044 	movi	r3,1
   40dcc:	10c01926 	beq	r2,r3,40e34 <sin+0xbc>
   40dd0:	01000084 	movi	r4,2
   40dd4:	11000f26 	beq	r2,r4,40e14 <sin+0x9c>
   40dd8:	10001c26 	beq	r2,zero,40e4c <sin+0xd4>
   40ddc:	d9800317 	ldw	r6,12(sp)
   40de0:	d9c00417 	ldw	r7,16(sp)
   40de4:	d9000117 	ldw	r4,4(sp)
   40de8:	d9400217 	ldw	r5,8(sp)
   40dec:	0041c4c0 	call	41c4c <__kernel_cos>
   40df0:	18e0003c 	xorhi	r3,r3,32768
   40df4:	003fee06 	br	40db0 <__alt_data_end+0xf4040db0>
   40df8:	d8000015 	stw	zero,0(sp)
   40dfc:	000d883a 	mov	r6,zero
   40e00:	000f883a 	mov	r7,zero
   40e04:	0042e880 	call	42e88 <__kernel_sin>
   40e08:	dfc00517 	ldw	ra,20(sp)
   40e0c:	dec00604 	addi	sp,sp,24
   40e10:	f800283a 	ret
   40e14:	d9800317 	ldw	r6,12(sp)
   40e18:	d9c00417 	ldw	r7,16(sp)
   40e1c:	d9000117 	ldw	r4,4(sp)
   40e20:	d9400217 	ldw	r5,8(sp)
   40e24:	d8c00015 	stw	r3,0(sp)
   40e28:	0042e880 	call	42e88 <__kernel_sin>
   40e2c:	18e0003c 	xorhi	r3,r3,32768
   40e30:	003fdf06 	br	40db0 <__alt_data_end+0xf4040db0>
   40e34:	d9800317 	ldw	r6,12(sp)
   40e38:	d9c00417 	ldw	r7,16(sp)
   40e3c:	d9000117 	ldw	r4,4(sp)
   40e40:	d9400217 	ldw	r5,8(sp)
   40e44:	0041c4c0 	call	41c4c <__kernel_cos>
   40e48:	003fd906 	br	40db0 <__alt_data_end+0xf4040db0>
   40e4c:	d9800317 	ldw	r6,12(sp)
   40e50:	d9c00417 	ldw	r7,16(sp)
   40e54:	d9000117 	ldw	r4,4(sp)
   40e58:	d9400217 	ldw	r5,8(sp)
   40e5c:	d8c00015 	stw	r3,0(sp)
   40e60:	0042e880 	call	42e88 <__kernel_sin>
   40e64:	003fd206 	br	40db0 <__alt_data_end+0xf4040db0>

00040e68 <exp>:
   40e68:	defff104 	addi	sp,sp,-60
   40e6c:	dd000d15 	stw	r20,52(sp)
   40e70:	05020034 	movhi	r20,2048
   40e74:	dcc00c15 	stw	r19,48(sp)
   40e78:	dc800b15 	stw	r18,44(sp)
   40e7c:	dc400a15 	stw	r17,40(sp)
   40e80:	dc000915 	stw	r16,36(sp)
   40e84:	dfc00e15 	stw	ra,56(sp)
   40e88:	a5121004 	addi	r20,r20,18496
   40e8c:	2027883a 	mov	r19,r4
   40e90:	2825883a 	mov	r18,r5
   40e94:	0040ff80 	call	40ff8 <__ieee754_exp>
   40e98:	1821883a 	mov	r16,r3
   40e9c:	a0c00017 	ldw	r3,0(r20)
   40ea0:	1023883a 	mov	r17,r2
   40ea4:	00bfffc4 	movi	r2,-1
   40ea8:	18802e26 	beq	r3,r2,40f64 <exp+0xfc>
   40eac:	9809883a 	mov	r4,r19
   40eb0:	900b883a 	mov	r5,r18
   40eb4:	00431680 	call	43168 <finite>
   40eb8:	10002a26 	beq	r2,zero,40f64 <exp+0xfc>
   40ebc:	01bfbeb4 	movhi	r6,65274
   40ec0:	01d021b4 	movhi	r7,16518
   40ec4:	318e7bc4 	addi	r6,r6,14831
   40ec8:	39cb9084 	addi	r7,r7,11842
   40ecc:	9809883a 	mov	r4,r19
   40ed0:	900b883a 	mov	r5,r18
   40ed4:	00452a80 	call	452a8 <__gedf2>
   40ed8:	00802c16 	blt	zero,r2,40f8c <exp+0x124>
   40edc:	01b54b74 	movhi	r6,54573
   40ee0:	01f021f4 	movhi	r7,49287
   40ee4:	318c1444 	addi	r6,r6,12369
   40ee8:	39d24404 	addi	r7,r7,18704
   40eec:	9809883a 	mov	r4,r19
   40ef0:	900b883a 	mov	r5,r18
   40ef4:	00453840 	call	45384 <__ledf2>
   40ef8:	10001a0e 	bge	r2,zero,40f64 <exp+0xfc>
   40efc:	00800104 	movi	r2,4
   40f00:	d8800015 	stw	r2,0(sp)
   40f04:	a0c00017 	ldw	r3,0(r20)
   40f08:	00820034 	movhi	r2,2048
   40f0c:	10800604 	addi	r2,r2,24
   40f10:	d8800115 	stw	r2,4(sp)
   40f14:	d8000815 	stw	zero,32(sp)
   40f18:	dcc00415 	stw	r19,16(sp)
   40f1c:	dc800515 	stw	r18,20(sp)
   40f20:	dcc00215 	stw	r19,8(sp)
   40f24:	dc800315 	stw	r18,12(sp)
   40f28:	d8000615 	stw	zero,24(sp)
   40f2c:	d8000715 	stw	zero,28(sp)
   40f30:	00800084 	movi	r2,2
   40f34:	18802c26 	beq	r3,r2,40fe8 <exp+0x180>
   40f38:	d809883a 	mov	r4,sp
   40f3c:	00433700 	call	43370 <matherr>
   40f40:	10002926 	beq	r2,zero,40fe8 <exp+0x180>
   40f44:	d8800817 	ldw	r2,32(sp)
   40f48:	10000326 	beq	r2,zero,40f58 <exp+0xf0>
   40f4c:	00468480 	call	46848 <__errno>
   40f50:	d8c00817 	ldw	r3,32(sp)
   40f54:	10c00015 	stw	r3,0(r2)
   40f58:	d8800617 	ldw	r2,24(sp)
   40f5c:	d8c00717 	ldw	r3,28(sp)
   40f60:	00000206 	br	40f6c <exp+0x104>
   40f64:	8805883a 	mov	r2,r17
   40f68:	8007883a 	mov	r3,r16
   40f6c:	dfc00e17 	ldw	ra,56(sp)
   40f70:	dd000d17 	ldw	r20,52(sp)
   40f74:	dcc00c17 	ldw	r19,48(sp)
   40f78:	dc800b17 	ldw	r18,44(sp)
   40f7c:	dc400a17 	ldw	r17,40(sp)
   40f80:	dc000917 	ldw	r16,36(sp)
   40f84:	dec00f04 	addi	sp,sp,60
   40f88:	f800283a 	ret
   40f8c:	00c000c4 	movi	r3,3
   40f90:	d8c00015 	stw	r3,0(sp)
   40f94:	a0800017 	ldw	r2,0(r20)
   40f98:	00c20034 	movhi	r3,2048
   40f9c:	18c00604 	addi	r3,r3,24
   40fa0:	d8c00115 	stw	r3,4(sp)
   40fa4:	d8000815 	stw	zero,32(sp)
   40fa8:	dcc00415 	stw	r19,16(sp)
   40fac:	dc800515 	stw	r18,20(sp)
   40fb0:	dcc00215 	stw	r19,8(sp)
   40fb4:	dc800315 	stw	r18,12(sp)
   40fb8:	1000061e 	bne	r2,zero,40fd4 <exp+0x16c>
   40fbc:	00b80034 	movhi	r2,57344
   40fc0:	d8800615 	stw	r2,24(sp)
   40fc4:	0091fc34 	movhi	r2,18416
   40fc8:	10bfffc4 	addi	r2,r2,-1
   40fcc:	d8800715 	stw	r2,28(sp)
   40fd0:	003fd906 	br	40f38 <__alt_data_end+0xf4040f38>
   40fd4:	00dffc34 	movhi	r3,32752
   40fd8:	d8c00715 	stw	r3,28(sp)
   40fdc:	d8000615 	stw	zero,24(sp)
   40fe0:	00c00084 	movi	r3,2
   40fe4:	10ffd41e 	bne	r2,r3,40f38 <__alt_data_end+0xf4040f38>
   40fe8:	00468480 	call	46848 <__errno>
   40fec:	00c00884 	movi	r3,34
   40ff0:	10c00015 	stw	r3,0(r2)
   40ff4:	003fd306 	br	40f44 <__alt_data_end+0xf4040f44>

00040ff8 <__ieee754_exp>:
   40ff8:	00e00034 	movhi	r3,32768
   40ffc:	defff604 	addi	sp,sp,-40
   41000:	18ffffc4 	addi	r3,r3,-1
   41004:	009021b4 	movhi	r2,16518
   41008:	ddc00715 	stw	r23,28(sp)
   4100c:	dc400115 	stw	r17,4(sp)
   41010:	dc000015 	stw	r16,0(sp)
   41014:	dfc00915 	stw	ra,36(sp)
   41018:	df000815 	stw	fp,32(sp)
   4101c:	dd800615 	stw	r22,24(sp)
   41020:	dd400515 	stw	r21,20(sp)
   41024:	dd000415 	stw	r20,16(sp)
   41028:	dcc00315 	stw	r19,12(sp)
   4102c:	dc800215 	stw	r18,8(sp)
   41030:	28c6703a 	and	r3,r5,r3
   41034:	108b9044 	addi	r2,r2,11841
   41038:	2821883a 	mov	r16,r5
   4103c:	2023883a 	mov	r17,r4
   41040:	282ed7fa 	srli	r23,r5,31
   41044:	10c00c2e 	bgeu	r2,r3,41078 <__ieee754_exp+0x80>
   41048:	009ffc34 	movhi	r2,32752
   4104c:	10bfffc4 	addi	r2,r2,-1
   41050:	10c08b2e 	bgeu	r2,r3,41280 <__ieee754_exp+0x288>
   41054:	00800434 	movhi	r2,16
   41058:	10bfffc4 	addi	r2,r2,-1
   4105c:	2884703a 	and	r2,r5,r2
   41060:	1104b03a 	or	r2,r2,r4
   41064:	1000fb1e 	bne	r2,zero,41454 <__ieee754_exp+0x45c>
   41068:	b8011a1e 	bne	r23,zero,414d4 <__ieee754_exp+0x4dc>
   4106c:	2005883a 	mov	r2,r4
   41070:	2807883a 	mov	r3,r5
   41074:	00007606 	br	41250 <__ieee754_exp+0x258>
   41078:	008ff5b4 	movhi	r2,16342
   4107c:	108b9084 	addi	r2,r2,11842
   41080:	10c0c336 	bltu	r2,r3,41390 <__ieee754_exp+0x398>
   41084:	008f8c34 	movhi	r2,15920
   41088:	10bfffc4 	addi	r2,r2,-1
   4108c:	10c0d52e 	bgeu	r2,r3,413e4 <__ieee754_exp+0x3ec>
   41090:	0025883a 	mov	r18,zero
   41094:	880d883a 	mov	r6,r17
   41098:	800f883a 	mov	r7,r16
   4109c:	8809883a 	mov	r4,r17
   410a0:	800b883a 	mov	r5,r16
   410a4:	00454780 	call	45478 <__muldf3>
   410a8:	019caff4 	movhi	r6,29375
   410ac:	01cf99b4 	movhi	r7,15974
   410b0:	31a93404 	addi	r6,r6,-23344
   410b4:	39cdda44 	addi	r7,r7,14185
   410b8:	1009883a 	mov	r4,r2
   410bc:	180b883a 	mov	r5,r3
   410c0:	1039883a 	mov	fp,r2
   410c4:	182f883a 	mov	r23,r3
   410c8:	00454780 	call	45478 <__muldf3>
   410cc:	01b174b4 	movhi	r6,50642
   410d0:	01cfaf34 	movhi	r7,16060
   410d4:	319afc44 	addi	r6,r6,27633
   410d8:	39ef5044 	addi	r7,r7,-17087
   410dc:	1009883a 	mov	r4,r2
   410e0:	180b883a 	mov	r5,r3
   410e4:	0045ce40 	call	45ce4 <__subdf3>
   410e8:	e00d883a 	mov	r6,fp
   410ec:	b80f883a 	mov	r7,r23
   410f0:	1009883a 	mov	r4,r2
   410f4:	180b883a 	mov	r5,r3
   410f8:	00454780 	call	45478 <__muldf3>
   410fc:	01abc9b4 	movhi	r6,44838
   41100:	01cfc474 	movhi	r7,16145
   41104:	31b78b04 	addi	r6,r6,-8660
   41108:	39d59a84 	addi	r7,r7,22122
   4110c:	1009883a 	mov	r4,r2
   41110:	180b883a 	mov	r5,r3
   41114:	0043fa40 	call	43fa4 <__adddf3>
   41118:	e00d883a 	mov	r6,fp
   4111c:	b80f883a 	mov	r7,r23
   41120:	1009883a 	mov	r4,r2
   41124:	180b883a 	mov	r5,r3
   41128:	00454780 	call	45478 <__muldf3>
   4112c:	0185aff4 	movhi	r6,5823
   41130:	01cfd9f4 	movhi	r7,16231
   41134:	31af64c4 	addi	r6,r6,-17005
   41138:	39f05b04 	addi	r7,r7,-16020
   4113c:	1009883a 	mov	r4,r2
   41140:	180b883a 	mov	r5,r3
   41144:	0045ce40 	call	45ce4 <__subdf3>
   41148:	e00d883a 	mov	r6,fp
   4114c:	b80f883a 	mov	r7,r23
   41150:	1009883a 	mov	r4,r2
   41154:	180b883a 	mov	r5,r3
   41158:	00454780 	call	45478 <__muldf3>
   4115c:	01955574 	movhi	r6,21845
   41160:	01cff174 	movhi	r7,16325
   41164:	31954f84 	addi	r6,r6,21822
   41168:	39d55544 	addi	r7,r7,21845
   4116c:	1009883a 	mov	r4,r2
   41170:	180b883a 	mov	r5,r3
   41174:	0043fa40 	call	43fa4 <__adddf3>
   41178:	e00d883a 	mov	r6,fp
   4117c:	b80f883a 	mov	r7,r23
   41180:	1009883a 	mov	r4,r2
   41184:	180b883a 	mov	r5,r3
   41188:	00454780 	call	45478 <__muldf3>
   4118c:	100d883a 	mov	r6,r2
   41190:	180f883a 	mov	r7,r3
   41194:	8809883a 	mov	r4,r17
   41198:	800b883a 	mov	r5,r16
   4119c:	0045ce40 	call	45ce4 <__subdf3>
   411a0:	1039883a 	mov	fp,r2
   411a4:	182f883a 	mov	r23,r3
   411a8:	9000ae26 	beq	r18,zero,41464 <__ieee754_exp+0x46c>
   411ac:	8809883a 	mov	r4,r17
   411b0:	800b883a 	mov	r5,r16
   411b4:	100d883a 	mov	r6,r2
   411b8:	180f883a 	mov	r7,r3
   411bc:	00454780 	call	45478 <__muldf3>
   411c0:	e00d883a 	mov	r6,fp
   411c4:	b80f883a 	mov	r7,r23
   411c8:	0009883a 	mov	r4,zero
   411cc:	01500034 	movhi	r5,16384
   411d0:	1023883a 	mov	r17,r2
   411d4:	1821883a 	mov	r16,r3
   411d8:	0045ce40 	call	45ce4 <__subdf3>
   411dc:	100d883a 	mov	r6,r2
   411e0:	180f883a 	mov	r7,r3
   411e4:	8809883a 	mov	r4,r17
   411e8:	800b883a 	mov	r5,r16
   411ec:	00448500 	call	44850 <__divdf3>
   411f0:	100d883a 	mov	r6,r2
   411f4:	180f883a 	mov	r7,r3
   411f8:	b009883a 	mov	r4,r22
   411fc:	a80b883a 	mov	r5,r21
   41200:	0045ce40 	call	45ce4 <__subdf3>
   41204:	a00d883a 	mov	r6,r20
   41208:	980f883a 	mov	r7,r19
   4120c:	1009883a 	mov	r4,r2
   41210:	180b883a 	mov	r5,r3
   41214:	0045ce40 	call	45ce4 <__subdf3>
   41218:	0009883a 	mov	r4,zero
   4121c:	100d883a 	mov	r6,r2
   41220:	180f883a 	mov	r7,r3
   41224:	014ffc34 	movhi	r5,16368
   41228:	0045ce40 	call	45ce4 <__subdf3>
   4122c:	013f00c4 	movi	r4,-1021
   41230:	91007d0e 	bge	r18,r4,41428 <__ieee754_exp+0x430>
   41234:	9140fa04 	addi	r5,r18,1000
   41238:	280a953a 	slli	r5,r5,20
   4123c:	000d883a 	mov	r6,zero
   41240:	01c05c34 	movhi	r7,368
   41244:	1009883a 	mov	r4,r2
   41248:	28cb883a 	add	r5,r5,r3
   4124c:	00454780 	call	45478 <__muldf3>
   41250:	dfc00917 	ldw	ra,36(sp)
   41254:	df000817 	ldw	fp,32(sp)
   41258:	ddc00717 	ldw	r23,28(sp)
   4125c:	dd800617 	ldw	r22,24(sp)
   41260:	dd400517 	ldw	r21,20(sp)
   41264:	dd000417 	ldw	r20,16(sp)
   41268:	dcc00317 	ldw	r19,12(sp)
   4126c:	dc800217 	ldw	r18,8(sp)
   41270:	dc400117 	ldw	r17,4(sp)
   41274:	dc000017 	ldw	r16,0(sp)
   41278:	dec00a04 	addi	sp,sp,40
   4127c:	f800283a 	ret
   41280:	01bfbeb4 	movhi	r6,65274
   41284:	01d021b4 	movhi	r7,16518
   41288:	318e7bc4 	addi	r6,r6,14831
   4128c:	39cb9084 	addi	r7,r7,11842
   41290:	00452a80 	call	452a8 <__gedf2>
   41294:	00806716 	blt	zero,r2,41434 <__ieee754_exp+0x43c>
   41298:	01b54b74 	movhi	r6,54573
   4129c:	01f021f4 	movhi	r7,49287
   412a0:	318c1444 	addi	r6,r6,12369
   412a4:	39d24404 	addi	r7,r7,18704
   412a8:	8809883a 	mov	r4,r17
   412ac:	800b883a 	mov	r5,r16
   412b0:	00453840 	call	45384 <__ledf2>
   412b4:	10008716 	blt	r2,zero,414d4 <__ieee754_exp+0x4dc>
   412b8:	b82490fa 	slli	r18,r23,3
   412bc:	01994b34 	movhi	r6,25900
   412c0:	01cffdf4 	movhi	r7,16375
   412c4:	05c20034 	movhi	r23,2048
   412c8:	31a0bf84 	addi	r6,r6,-32002
   412cc:	39c551c4 	addi	r7,r7,5447
   412d0:	8809883a 	mov	r4,r17
   412d4:	800b883a 	mov	r5,r16
   412d8:	bdc00f04 	addi	r23,r23,60
   412dc:	00454780 	call	45478 <__muldf3>
   412e0:	bca5883a 	add	r18,r23,r18
   412e4:	91800017 	ldw	r6,0(r18)
   412e8:	91c00117 	ldw	r7,4(r18)
   412ec:	1009883a 	mov	r4,r2
   412f0:	180b883a 	mov	r5,r3
   412f4:	0043fa40 	call	43fa4 <__adddf3>
   412f8:	180b883a 	mov	r5,r3
   412fc:	1009883a 	mov	r4,r2
   41300:	00465e00 	call	465e0 <__fixdfsi>
   41304:	1009883a 	mov	r4,r2
   41308:	1025883a 	mov	r18,r2
   4130c:	00466600 	call	46660 <__floatsidf>
   41310:	01cff9b4 	movhi	r7,16358
   41314:	39cb9084 	addi	r7,r7,11842
   41318:	01bfb834 	movhi	r6,65248
   4131c:	1009883a 	mov	r4,r2
   41320:	180b883a 	mov	r5,r3
   41324:	102d883a 	mov	r22,r2
   41328:	182b883a 	mov	r21,r3
   4132c:	00454780 	call	45478 <__muldf3>
   41330:	100d883a 	mov	r6,r2
   41334:	180f883a 	mov	r7,r3
   41338:	8809883a 	mov	r4,r17
   4133c:	800b883a 	mov	r5,r16
   41340:	0045ce40 	call	45ce4 <__subdf3>
   41344:	018d5e74 	movhi	r6,13689
   41348:	01cf7ab4 	movhi	r7,15850
   4134c:	b009883a 	mov	r4,r22
   41350:	a80b883a 	mov	r5,r21
   41354:	318f1d84 	addi	r6,r6,15478
   41358:	39ce7bc4 	addi	r7,r7,14831
   4135c:	1029883a 	mov	r20,r2
   41360:	1827883a 	mov	r19,r3
   41364:	00454780 	call	45478 <__muldf3>
   41368:	102d883a 	mov	r22,r2
   4136c:	182b883a 	mov	r21,r3
   41370:	b00d883a 	mov	r6,r22
   41374:	a80f883a 	mov	r7,r21
   41378:	a009883a 	mov	r4,r20
   4137c:	980b883a 	mov	r5,r19
   41380:	0045ce40 	call	45ce4 <__subdf3>
   41384:	1023883a 	mov	r17,r2
   41388:	1821883a 	mov	r16,r3
   4138c:	003f4106 	br	41094 <__alt_data_end+0xf4041094>
   41390:	008ffc74 	movhi	r2,16369
   41394:	10a8ac44 	addi	r2,r2,-23887
   41398:	10ffc736 	bltu	r2,r3,412b8 <__alt_data_end+0xf40412b8>
   4139c:	b82290fa 	slli	r17,r23,3
   413a0:	00820034 	movhi	r2,2048
   413a4:	10800b04 	addi	r2,r2,44
   413a8:	1445883a 	add	r2,r2,r17
   413ac:	11800017 	ldw	r6,0(r2)
   413b0:	11c00117 	ldw	r7,4(r2)
   413b4:	04800044 	movi	r18,1
   413b8:	95e5c83a 	sub	r18,r18,r23
   413bc:	0045ce40 	call	45ce4 <__subdf3>
   413c0:	1029883a 	mov	r20,r2
   413c4:	00820034 	movhi	r2,2048
   413c8:	10800704 	addi	r2,r2,28
   413cc:	1463883a 	add	r17,r2,r17
   413d0:	1827883a 	mov	r19,r3
   413d4:	8d800017 	ldw	r22,0(r17)
   413d8:	8d400117 	ldw	r21,4(r17)
   413dc:	95e5c83a 	sub	r18,r18,r23
   413e0:	003fe306 	br	41370 <__alt_data_end+0xf4041370>
   413e4:	01a20034 	movhi	r6,34816
   413e8:	01df8e34 	movhi	r7,32312
   413ec:	319d6704 	addi	r6,r6,30108
   413f0:	39f90f04 	addi	r7,r7,-7108
   413f4:	0043fa40 	call	43fa4 <__adddf3>
   413f8:	000d883a 	mov	r6,zero
   413fc:	01cffc34 	movhi	r7,16368
   41400:	1009883a 	mov	r4,r2
   41404:	180b883a 	mov	r5,r3
   41408:	00452a80 	call	452a8 <__gedf2>
   4140c:	00bf200e 	bge	zero,r2,41090 <__alt_data_end+0xf4041090>
   41410:	000d883a 	mov	r6,zero
   41414:	01cffc34 	movhi	r7,16368
   41418:	8809883a 	mov	r4,r17
   4141c:	800b883a 	mov	r5,r16
   41420:	0043fa40 	call	43fa4 <__adddf3>
   41424:	003f8a06 	br	41250 <__alt_data_end+0xf4041250>
   41428:	9020953a 	slli	r16,r18,20
   4142c:	80c7883a 	add	r3,r16,r3
   41430:	003f8706 	br	41250 <__alt_data_end+0xf4041250>
   41434:	01a20034 	movhi	r6,34816
   41438:	01df8e34 	movhi	r7,32312
   4143c:	319d6704 	addi	r6,r6,30108
   41440:	39f90f04 	addi	r7,r7,-7108
   41444:	3009883a 	mov	r4,r6
   41448:	380b883a 	mov	r5,r7
   4144c:	00454780 	call	45478 <__muldf3>
   41450:	003f7f06 	br	41250 <__alt_data_end+0xf4041250>
   41454:	200d883a 	mov	r6,r4
   41458:	280f883a 	mov	r7,r5
   4145c:	0043fa40 	call	43fa4 <__adddf3>
   41460:	003f7b06 	br	41250 <__alt_data_end+0xf4041250>
   41464:	8809883a 	mov	r4,r17
   41468:	800b883a 	mov	r5,r16
   4146c:	100d883a 	mov	r6,r2
   41470:	180f883a 	mov	r7,r3
   41474:	00454780 	call	45478 <__muldf3>
   41478:	e009883a 	mov	r4,fp
   4147c:	b80b883a 	mov	r5,r23
   41480:	000d883a 	mov	r6,zero
   41484:	01d00034 	movhi	r7,16384
   41488:	1027883a 	mov	r19,r2
   4148c:	1825883a 	mov	r18,r3
   41490:	0045ce40 	call	45ce4 <__subdf3>
   41494:	9809883a 	mov	r4,r19
   41498:	900b883a 	mov	r5,r18
   4149c:	100d883a 	mov	r6,r2
   414a0:	180f883a 	mov	r7,r3
   414a4:	00448500 	call	44850 <__divdf3>
   414a8:	880d883a 	mov	r6,r17
   414ac:	800f883a 	mov	r7,r16
   414b0:	1009883a 	mov	r4,r2
   414b4:	180b883a 	mov	r5,r3
   414b8:	0045ce40 	call	45ce4 <__subdf3>
   414bc:	100d883a 	mov	r6,r2
   414c0:	180f883a 	mov	r7,r3
   414c4:	0009883a 	mov	r4,zero
   414c8:	014ffc34 	movhi	r5,16368
   414cc:	0045ce40 	call	45ce4 <__subdf3>
   414d0:	003f5f06 	br	41250 <__alt_data_end+0xf4041250>
   414d4:	0005883a 	mov	r2,zero
   414d8:	0007883a 	mov	r3,zero
   414dc:	003f5c06 	br	41250 <__alt_data_end+0xf4041250>

000414e0 <__ieee754_rem_pio2>:
   414e0:	02200034 	movhi	r8,32768
   414e4:	deffea04 	addi	sp,sp,-88
   414e8:	423fffc4 	addi	r8,r8,-1
   414ec:	00cffa74 	movhi	r3,16361
   414f0:	ddc01315 	stw	r23,76(sp)
   414f4:	dc400d15 	stw	r17,52(sp)
   414f8:	dfc01515 	stw	ra,84(sp)
   414fc:	df001415 	stw	fp,80(sp)
   41500:	dd801215 	stw	r22,72(sp)
   41504:	dd401115 	stw	r21,68(sp)
   41508:	dd001015 	stw	r20,64(sp)
   4150c:	dcc00f15 	stw	r19,60(sp)
   41510:	dc800e15 	stw	r18,56(sp)
   41514:	dc000c15 	stw	r16,48(sp)
   41518:	2a2e703a 	and	r23,r5,r8
   4151c:	18c87ec4 	addi	r3,r3,8699
   41520:	2823883a 	mov	r17,r5
   41524:	1dc0790e 	bge	r3,r23,4170c <__ieee754_rem_pio2+0x22c>
   41528:	009000f4 	movhi	r2,16387
   4152c:	10b65ec4 	addi	r2,r2,-9861
   41530:	3021883a 	mov	r16,r6
   41534:	2027883a 	mov	r19,r4
   41538:	15c02316 	blt	r2,r23,415c8 <__ieee754_rem_pio2+0xe8>
   4153c:	01cffe74 	movhi	r7,16377
   41540:	39c87ec4 	addi	r7,r7,8699
   41544:	01951034 	movhi	r6,21568
   41548:	01417a0e 	bge	zero,r5,41b34 <__ieee754_rem_pio2+0x654>
   4154c:	0045ce40 	call	45ce4 <__subdf3>
   41550:	1025883a 	mov	r18,r2
   41554:	008ffe74 	movhi	r2,16377
   41558:	10887ec4 	addi	r2,r2,8699
   4155c:	1823883a 	mov	r17,r3
   41560:	b8808426 	beq	r23,r2,41774 <__ieee754_rem_pio2+0x294>
   41564:	018698b4 	movhi	r6,6754
   41568:	01cf7474 	movhi	r7,15825
   4156c:	3198cc44 	addi	r6,r6,25393
   41570:	39ed1844 	addi	r7,r7,-19359
   41574:	9009883a 	mov	r4,r18
   41578:	180b883a 	mov	r5,r3
   4157c:	0045ce40 	call	45ce4 <__subdf3>
   41580:	100d883a 	mov	r6,r2
   41584:	180f883a 	mov	r7,r3
   41588:	9009883a 	mov	r4,r18
   4158c:	880b883a 	mov	r5,r17
   41590:	80800015 	stw	r2,0(r16)
   41594:	80c00115 	stw	r3,4(r16)
   41598:	0045ce40 	call	45ce4 <__subdf3>
   4159c:	018698b4 	movhi	r6,6754
   415a0:	01cf7474 	movhi	r7,15825
   415a4:	3198cc44 	addi	r6,r6,25393
   415a8:	39ed1844 	addi	r7,r7,-19359
   415ac:	1009883a 	mov	r4,r2
   415b0:	180b883a 	mov	r5,r3
   415b4:	0045ce40 	call	45ce4 <__subdf3>
   415b8:	80800215 	stw	r2,8(r16)
   415bc:	80c00315 	stw	r3,12(r16)
   415c0:	00800044 	movi	r2,1
   415c4:	00005606 	br	41720 <__ieee754_rem_pio2+0x240>
   415c8:	00904e74 	movhi	r2,16697
   415cc:	10887ec4 	addi	r2,r2,8699
   415d0:	15c0830e 	bge	r2,r23,417e0 <__ieee754_rem_pio2+0x300>
   415d4:	009ffc34 	movhi	r2,32752
   415d8:	10bfffc4 	addi	r2,r2,-1
   415dc:	15c05c16 	blt	r2,r23,41750 <__ieee754_rem_pio2+0x270>
   415e0:	b829d53a 	srai	r20,r23,20
   415e4:	a53efa84 	addi	r20,r20,-1046
   415e8:	a024953a 	slli	r18,r20,20
   415ec:	bca5c83a 	sub	r18,r23,r18
   415f0:	900b883a 	mov	r5,r18
   415f4:	00465e00 	call	465e0 <__fixdfsi>
   415f8:	1009883a 	mov	r4,r2
   415fc:	00466600 	call	46660 <__floatsidf>
   41600:	9809883a 	mov	r4,r19
   41604:	900b883a 	mov	r5,r18
   41608:	100d883a 	mov	r6,r2
   4160c:	180f883a 	mov	r7,r3
   41610:	d8800215 	stw	r2,8(sp)
   41614:	d8c00315 	stw	r3,12(sp)
   41618:	0045ce40 	call	45ce4 <__subdf3>
   4161c:	000d883a 	mov	r6,zero
   41620:	01d05c34 	movhi	r7,16752
   41624:	1009883a 	mov	r4,r2
   41628:	180b883a 	mov	r5,r3
   4162c:	00454780 	call	45478 <__muldf3>
   41630:	180b883a 	mov	r5,r3
   41634:	1009883a 	mov	r4,r2
   41638:	182b883a 	mov	r21,r3
   4163c:	102d883a 	mov	r22,r2
   41640:	00465e00 	call	465e0 <__fixdfsi>
   41644:	1009883a 	mov	r4,r2
   41648:	00466600 	call	46660 <__floatsidf>
   4164c:	100d883a 	mov	r6,r2
   41650:	180f883a 	mov	r7,r3
   41654:	b009883a 	mov	r4,r22
   41658:	a80b883a 	mov	r5,r21
   4165c:	1027883a 	mov	r19,r2
   41660:	1825883a 	mov	r18,r3
   41664:	d8800415 	stw	r2,16(sp)
   41668:	d8c00515 	stw	r3,20(sp)
   4166c:	0045ce40 	call	45ce4 <__subdf3>
   41670:	000d883a 	mov	r6,zero
   41674:	01d05c34 	movhi	r7,16752
   41678:	1009883a 	mov	r4,r2
   4167c:	180b883a 	mov	r5,r3
   41680:	00454780 	call	45478 <__muldf3>
   41684:	000d883a 	mov	r6,zero
   41688:	000f883a 	mov	r7,zero
   4168c:	1009883a 	mov	r4,r2
   41690:	180b883a 	mov	r5,r3
   41694:	d8800615 	stw	r2,24(sp)
   41698:	d8c00715 	stw	r3,28(sp)
   4169c:	00452200 	call	45220 <__eqdf2>
   416a0:	1001431e 	bne	r2,zero,41bb0 <__ieee754_rem_pio2+0x6d0>
   416a4:	000f883a 	mov	r7,zero
   416a8:	000d883a 	mov	r6,zero
   416ac:	9809883a 	mov	r4,r19
   416b0:	900b883a 	mov	r5,r18
   416b4:	00452200 	call	45220 <__eqdf2>
   416b8:	100f003a 	cmpeq	r7,r2,zero
   416bc:	00800084 	movi	r2,2
   416c0:	11cfc83a 	sub	r7,r2,r7
   416c4:	00800084 	movi	r2,2
   416c8:	d8800015 	stw	r2,0(sp)
   416cc:	00820034 	movhi	r2,2048
   416d0:	10803304 	addi	r2,r2,204
   416d4:	d8800115 	stw	r2,4(sp)
   416d8:	a00d883a 	mov	r6,r20
   416dc:	800b883a 	mov	r5,r16
   416e0:	d9000204 	addi	r4,sp,8
   416e4:	00420f00 	call	420f0 <__kernel_rem_pio2>
   416e8:	88000d0e 	bge	r17,zero,41720 <__ieee754_rem_pio2+0x240>
   416ec:	81000117 	ldw	r4,4(r16)
   416f0:	80c00317 	ldw	r3,12(r16)
   416f4:	0085c83a 	sub	r2,zero,r2
   416f8:	2120003c 	xorhi	r4,r4,32768
   416fc:	18e0003c 	xorhi	r3,r3,32768
   41700:	81000115 	stw	r4,4(r16)
   41704:	80c00315 	stw	r3,12(r16)
   41708:	00000506 	br	41720 <__ieee754_rem_pio2+0x240>
   4170c:	31000015 	stw	r4,0(r6)
   41710:	31400115 	stw	r5,4(r6)
   41714:	30000215 	stw	zero,8(r6)
   41718:	30000315 	stw	zero,12(r6)
   4171c:	0005883a 	mov	r2,zero
   41720:	dfc01517 	ldw	ra,84(sp)
   41724:	df001417 	ldw	fp,80(sp)
   41728:	ddc01317 	ldw	r23,76(sp)
   4172c:	dd801217 	ldw	r22,72(sp)
   41730:	dd401117 	ldw	r21,68(sp)
   41734:	dd001017 	ldw	r20,64(sp)
   41738:	dcc00f17 	ldw	r19,60(sp)
   4173c:	dc800e17 	ldw	r18,56(sp)
   41740:	dc400d17 	ldw	r17,52(sp)
   41744:	dc000c17 	ldw	r16,48(sp)
   41748:	dec01604 	addi	sp,sp,88
   4174c:	f800283a 	ret
   41750:	200d883a 	mov	r6,r4
   41754:	280f883a 	mov	r7,r5
   41758:	0045ce40 	call	45ce4 <__subdf3>
   4175c:	80800215 	stw	r2,8(r16)
   41760:	80800015 	stw	r2,0(r16)
   41764:	80c00315 	stw	r3,12(r16)
   41768:	80c00115 	stw	r3,4(r16)
   4176c:	0005883a 	mov	r2,zero
   41770:	003feb06 	br	41720 <__alt_data_end+0xf4041720>
   41774:	01cf7474 	movhi	r7,15825
   41778:	9009883a 	mov	r4,r18
   4177c:	39ed1844 	addi	r7,r7,-19359
   41780:	01869834 	movhi	r6,6752
   41784:	180b883a 	mov	r5,r3
   41788:	0045ce40 	call	45ce4 <__subdf3>
   4178c:	018b80f4 	movhi	r6,11779
   41790:	01cee8f4 	movhi	r7,15267
   41794:	319c1cc4 	addi	r6,r6,28787
   41798:	39c66284 	addi	r7,r7,6538
   4179c:	1009883a 	mov	r4,r2
   417a0:	180b883a 	mov	r5,r3
   417a4:	1025883a 	mov	r18,r2
   417a8:	1823883a 	mov	r17,r3
   417ac:	0045ce40 	call	45ce4 <__subdf3>
   417b0:	100d883a 	mov	r6,r2
   417b4:	180f883a 	mov	r7,r3
   417b8:	9009883a 	mov	r4,r18
   417bc:	880b883a 	mov	r5,r17
   417c0:	80800015 	stw	r2,0(r16)
   417c4:	80c00115 	stw	r3,4(r16)
   417c8:	0045ce40 	call	45ce4 <__subdf3>
   417cc:	018b80f4 	movhi	r6,11779
   417d0:	01cee8f4 	movhi	r7,15267
   417d4:	319c1cc4 	addi	r6,r6,28787
   417d8:	39c66284 	addi	r7,r7,6538
   417dc:	003f7306 	br	415ac <__alt_data_end+0xf40415ac>
   417e0:	00431540 	call	43154 <fabs>
   417e4:	019b72b4 	movhi	r6,28106
   417e8:	01cff934 	movhi	r7,16356
   417ec:	31b220c4 	addi	r6,r6,-14205
   417f0:	39d7cc04 	addi	r7,r7,24368
   417f4:	1009883a 	mov	r4,r2
   417f8:	180b883a 	mov	r5,r3
   417fc:	102d883a 	mov	r22,r2
   41800:	182b883a 	mov	r21,r3
   41804:	00454780 	call	45478 <__muldf3>
   41808:	000d883a 	mov	r6,zero
   4180c:	01cff834 	movhi	r7,16352
   41810:	1009883a 	mov	r4,r2
   41814:	180b883a 	mov	r5,r3
   41818:	0043fa40 	call	43fa4 <__adddf3>
   4181c:	180b883a 	mov	r5,r3
   41820:	1009883a 	mov	r4,r2
   41824:	00465e00 	call	465e0 <__fixdfsi>
   41828:	1009883a 	mov	r4,r2
   4182c:	1025883a 	mov	r18,r2
   41830:	00466600 	call	46660 <__floatsidf>
   41834:	01cffe74 	movhi	r7,16377
   41838:	39c87ec4 	addi	r7,r7,8699
   4183c:	01951034 	movhi	r6,21568
   41840:	1009883a 	mov	r4,r2
   41844:	180b883a 	mov	r5,r3
   41848:	1029883a 	mov	r20,r2
   4184c:	1827883a 	mov	r19,r3
   41850:	00454780 	call	45478 <__muldf3>
   41854:	b009883a 	mov	r4,r22
   41858:	a80b883a 	mov	r5,r21
   4185c:	100d883a 	mov	r6,r2
   41860:	180f883a 	mov	r7,r3
   41864:	0045ce40 	call	45ce4 <__subdf3>
   41868:	018698b4 	movhi	r6,6754
   4186c:	01cf7474 	movhi	r7,15825
   41870:	a009883a 	mov	r4,r20
   41874:	3198cc44 	addi	r6,r6,25393
   41878:	39ed1844 	addi	r7,r7,-19359
   4187c:	980b883a 	mov	r5,r19
   41880:	1039883a 	mov	fp,r2
   41884:	d8c00815 	stw	r3,32(sp)
   41888:	00454780 	call	45478 <__muldf3>
   4188c:	010007c4 	movi	r4,31
   41890:	e017883a 	mov	r11,fp
   41894:	da800817 	ldw	r10,32(sp)
   41898:	102d883a 	mov	r22,r2
   4189c:	182b883a 	mov	r21,r3
   418a0:	24802816 	blt	r4,r18,41944 <__ieee754_rem_pio2+0x464>
   418a4:	913fffc4 	addi	r4,r18,-1
   418a8:	2109883a 	add	r4,r4,r4
   418ac:	01420034 	movhi	r5,2048
   418b0:	2109883a 	add	r4,r4,r4
   418b4:	29401304 	addi	r5,r5,76
   418b8:	2909883a 	add	r4,r5,r4
   418bc:	21000017 	ldw	r4,0(r4)
   418c0:	b9002026 	beq	r23,r4,41944 <__ieee754_rem_pio2+0x464>
   418c4:	100d883a 	mov	r6,r2
   418c8:	180f883a 	mov	r7,r3
   418cc:	e009883a 	mov	r4,fp
   418d0:	500b883a 	mov	r5,r10
   418d4:	da800b15 	stw	r10,44(sp)
   418d8:	df000a15 	stw	fp,40(sp)
   418dc:	0045ce40 	call	45ce4 <__subdf3>
   418e0:	da800b17 	ldw	r10,44(sp)
   418e4:	dac00a17 	ldw	r11,40(sp)
   418e8:	1019883a 	mov	r12,r2
   418ec:	1813883a 	mov	r9,r3
   418f0:	80800015 	stw	r2,0(r16)
   418f4:	80c00115 	stw	r3,4(r16)
   418f8:	600d883a 	mov	r6,r12
   418fc:	480f883a 	mov	r7,r9
   41900:	5809883a 	mov	r4,r11
   41904:	500b883a 	mov	r5,r10
   41908:	da400b15 	stw	r9,44(sp)
   4190c:	db000a15 	stw	r12,40(sp)
   41910:	0045ce40 	call	45ce4 <__subdf3>
   41914:	b00d883a 	mov	r6,r22
   41918:	a80f883a 	mov	r7,r21
   4191c:	1009883a 	mov	r4,r2
   41920:	180b883a 	mov	r5,r3
   41924:	0045ce40 	call	45ce4 <__subdf3>
   41928:	80800215 	stw	r2,8(r16)
   4192c:	80c00315 	stw	r3,12(r16)
   41930:	da400b17 	ldw	r9,44(sp)
   41934:	db000a17 	ldw	r12,40(sp)
   41938:	88009f16 	blt	r17,zero,41bb8 <__ieee754_rem_pio2+0x6d8>
   4193c:	9005883a 	mov	r2,r18
   41940:	003f7706 	br	41720 <__alt_data_end+0xf4041720>
   41944:	d9400817 	ldw	r5,32(sp)
   41948:	100d883a 	mov	r6,r2
   4194c:	180f883a 	mov	r7,r3
   41950:	e009883a 	mov	r4,fp
   41954:	da800b15 	stw	r10,44(sp)
   41958:	dac00a15 	stw	r11,40(sp)
   4195c:	0045ce40 	call	45ce4 <__subdf3>
   41960:	1019883a 	mov	r12,r2
   41964:	1804d53a 	srli	r2,r3,20
   41968:	b811d53a 	srai	r8,r23,20
   4196c:	1813883a 	mov	r9,r3
   41970:	1081ffcc 	andi	r2,r2,2047
   41974:	80c00115 	stw	r3,4(r16)
   41978:	83000015 	stw	r12,0(r16)
   4197c:	4085c83a 	sub	r2,r8,r2
   41980:	00c00404 	movi	r3,16
   41984:	da800b17 	ldw	r10,44(sp)
   41988:	dac00a17 	ldw	r11,40(sp)
   4198c:	18bfda0e 	bge	r3,r2,418f8 <__alt_data_end+0xf40418f8>
   41990:	01cf7474 	movhi	r7,15825
   41994:	39ed1844 	addi	r7,r7,-19359
   41998:	01869834 	movhi	r6,6752
   4199c:	a009883a 	mov	r4,r20
   419a0:	980b883a 	mov	r5,r19
   419a4:	da000a15 	stw	r8,40(sp)
   419a8:	00454780 	call	45478 <__muldf3>
   419ac:	d9400817 	ldw	r5,32(sp)
   419b0:	100d883a 	mov	r6,r2
   419b4:	180f883a 	mov	r7,r3
   419b8:	e009883a 	mov	r4,fp
   419bc:	102d883a 	mov	r22,r2
   419c0:	182b883a 	mov	r21,r3
   419c4:	0045ce40 	call	45ce4 <__subdf3>
   419c8:	d9400817 	ldw	r5,32(sp)
   419cc:	100d883a 	mov	r6,r2
   419d0:	180f883a 	mov	r7,r3
   419d4:	e009883a 	mov	r4,fp
   419d8:	182f883a 	mov	r23,r3
   419dc:	d8800915 	stw	r2,36(sp)
   419e0:	0045ce40 	call	45ce4 <__subdf3>
   419e4:	b00d883a 	mov	r6,r22
   419e8:	a80f883a 	mov	r7,r21
   419ec:	1009883a 	mov	r4,r2
   419f0:	180b883a 	mov	r5,r3
   419f4:	0045ce40 	call	45ce4 <__subdf3>
   419f8:	018b80f4 	movhi	r6,11779
   419fc:	01cee8f4 	movhi	r7,15267
   41a00:	319c1cc4 	addi	r6,r6,28787
   41a04:	39c66284 	addi	r7,r7,6538
   41a08:	a009883a 	mov	r4,r20
   41a0c:	980b883a 	mov	r5,r19
   41a10:	102d883a 	mov	r22,r2
   41a14:	182b883a 	mov	r21,r3
   41a18:	00454780 	call	45478 <__muldf3>
   41a1c:	b00d883a 	mov	r6,r22
   41a20:	a80f883a 	mov	r7,r21
   41a24:	1009883a 	mov	r4,r2
   41a28:	180b883a 	mov	r5,r3
   41a2c:	0045ce40 	call	45ce4 <__subdf3>
   41a30:	d9000917 	ldw	r4,36(sp)
   41a34:	100d883a 	mov	r6,r2
   41a38:	180f883a 	mov	r7,r3
   41a3c:	b80b883a 	mov	r5,r23
   41a40:	102d883a 	mov	r22,r2
   41a44:	182b883a 	mov	r21,r3
   41a48:	0045ce40 	call	45ce4 <__subdf3>
   41a4c:	1019883a 	mov	r12,r2
   41a50:	1804d53a 	srli	r2,r3,20
   41a54:	da000a17 	ldw	r8,40(sp)
   41a58:	83000015 	stw	r12,0(r16)
   41a5c:	1081ffcc 	andi	r2,r2,2047
   41a60:	4091c83a 	sub	r8,r8,r2
   41a64:	80c00115 	stw	r3,4(r16)
   41a68:	00800c44 	movi	r2,49
   41a6c:	1813883a 	mov	r9,r3
   41a70:	1200730e 	bge	r2,r8,41c40 <__ieee754_rem_pio2+0x760>
   41a74:	01cee8f4 	movhi	r7,15267
   41a78:	39c66284 	addi	r7,r7,6538
   41a7c:	018b8034 	movhi	r6,11776
   41a80:	a009883a 	mov	r4,r20
   41a84:	980b883a 	mov	r5,r19
   41a88:	00454780 	call	45478 <__muldf3>
   41a8c:	d9000917 	ldw	r4,36(sp)
   41a90:	100d883a 	mov	r6,r2
   41a94:	180f883a 	mov	r7,r3
   41a98:	b80b883a 	mov	r5,r23
   41a9c:	102d883a 	mov	r22,r2
   41aa0:	182b883a 	mov	r21,r3
   41aa4:	0045ce40 	call	45ce4 <__subdf3>
   41aa8:	d9000917 	ldw	r4,36(sp)
   41aac:	100d883a 	mov	r6,r2
   41ab0:	180f883a 	mov	r7,r3
   41ab4:	b80b883a 	mov	r5,r23
   41ab8:	d8c00b15 	stw	r3,44(sp)
   41abc:	d8800a15 	stw	r2,40(sp)
   41ac0:	0045ce40 	call	45ce4 <__subdf3>
   41ac4:	b00d883a 	mov	r6,r22
   41ac8:	a80f883a 	mov	r7,r21
   41acc:	1009883a 	mov	r4,r2
   41ad0:	180b883a 	mov	r5,r3
   41ad4:	0045ce40 	call	45ce4 <__subdf3>
   41ad8:	01894834 	movhi	r6,9504
   41adc:	01ce5f34 	movhi	r7,14716
   41ae0:	31927044 	addi	r6,r6,18881
   41ae4:	39e0e684 	addi	r7,r7,-31846
   41ae8:	a009883a 	mov	r4,r20
   41aec:	980b883a 	mov	r5,r19
   41af0:	102d883a 	mov	r22,r2
   41af4:	182b883a 	mov	r21,r3
   41af8:	00454780 	call	45478 <__muldf3>
   41afc:	b00d883a 	mov	r6,r22
   41b00:	a80f883a 	mov	r7,r21
   41b04:	1009883a 	mov	r4,r2
   41b08:	180b883a 	mov	r5,r3
   41b0c:	0045ce40 	call	45ce4 <__subdf3>
   41b10:	dac00a17 	ldw	r11,40(sp)
   41b14:	da800b17 	ldw	r10,44(sp)
   41b18:	102d883a 	mov	r22,r2
   41b1c:	182b883a 	mov	r21,r3
   41b20:	100d883a 	mov	r6,r2
   41b24:	180f883a 	mov	r7,r3
   41b28:	5809883a 	mov	r4,r11
   41b2c:	500b883a 	mov	r5,r10
   41b30:	003f6a06 	br	418dc <__alt_data_end+0xf40418dc>
   41b34:	0043fa40 	call	43fa4 <__adddf3>
   41b38:	1025883a 	mov	r18,r2
   41b3c:	008ffe74 	movhi	r2,16377
   41b40:	10887ec4 	addi	r2,r2,8699
   41b44:	1823883a 	mov	r17,r3
   41b48:	b8802226 	beq	r23,r2,41bd4 <__ieee754_rem_pio2+0x6f4>
   41b4c:	018698b4 	movhi	r6,6754
   41b50:	01cf7474 	movhi	r7,15825
   41b54:	3198cc44 	addi	r6,r6,25393
   41b58:	39ed1844 	addi	r7,r7,-19359
   41b5c:	9009883a 	mov	r4,r18
   41b60:	180b883a 	mov	r5,r3
   41b64:	0043fa40 	call	43fa4 <__adddf3>
   41b68:	100d883a 	mov	r6,r2
   41b6c:	180f883a 	mov	r7,r3
   41b70:	9009883a 	mov	r4,r18
   41b74:	880b883a 	mov	r5,r17
   41b78:	80800015 	stw	r2,0(r16)
   41b7c:	80c00115 	stw	r3,4(r16)
   41b80:	0045ce40 	call	45ce4 <__subdf3>
   41b84:	018698b4 	movhi	r6,6754
   41b88:	01cf7474 	movhi	r7,15825
   41b8c:	3198cc44 	addi	r6,r6,25393
   41b90:	39ed1844 	addi	r7,r7,-19359
   41b94:	1009883a 	mov	r4,r2
   41b98:	180b883a 	mov	r5,r3
   41b9c:	0043fa40 	call	43fa4 <__adddf3>
   41ba0:	80800215 	stw	r2,8(r16)
   41ba4:	80c00315 	stw	r3,12(r16)
   41ba8:	00bfffc4 	movi	r2,-1
   41bac:	003edc06 	br	41720 <__alt_data_end+0xf4041720>
   41bb0:	01c000c4 	movi	r7,3
   41bb4:	003ec306 	br	416c4 <__alt_data_end+0xf40416c4>
   41bb8:	4a60003c 	xorhi	r9,r9,32768
   41bbc:	18e0003c 	xorhi	r3,r3,32768
   41bc0:	83000015 	stw	r12,0(r16)
   41bc4:	82400115 	stw	r9,4(r16)
   41bc8:	80c00315 	stw	r3,12(r16)
   41bcc:	0485c83a 	sub	r2,zero,r18
   41bd0:	003ed306 	br	41720 <__alt_data_end+0xf4041720>
   41bd4:	01cf7474 	movhi	r7,15825
   41bd8:	9009883a 	mov	r4,r18
   41bdc:	39ed1844 	addi	r7,r7,-19359
   41be0:	01869834 	movhi	r6,6752
   41be4:	180b883a 	mov	r5,r3
   41be8:	0043fa40 	call	43fa4 <__adddf3>
   41bec:	018b80f4 	movhi	r6,11779
   41bf0:	01cee8f4 	movhi	r7,15267
   41bf4:	319c1cc4 	addi	r6,r6,28787
   41bf8:	39c66284 	addi	r7,r7,6538
   41bfc:	1009883a 	mov	r4,r2
   41c00:	180b883a 	mov	r5,r3
   41c04:	1025883a 	mov	r18,r2
   41c08:	1823883a 	mov	r17,r3
   41c0c:	0043fa40 	call	43fa4 <__adddf3>
   41c10:	100d883a 	mov	r6,r2
   41c14:	180f883a 	mov	r7,r3
   41c18:	9009883a 	mov	r4,r18
   41c1c:	880b883a 	mov	r5,r17
   41c20:	80800015 	stw	r2,0(r16)
   41c24:	80c00115 	stw	r3,4(r16)
   41c28:	0045ce40 	call	45ce4 <__subdf3>
   41c2c:	018b80f4 	movhi	r6,11779
   41c30:	01cee8f4 	movhi	r7,15267
   41c34:	319c1cc4 	addi	r6,r6,28787
   41c38:	39c66284 	addi	r7,r7,6538
   41c3c:	003fd506 	br	41b94 <__alt_data_end+0xf4041b94>
   41c40:	dac00917 	ldw	r11,36(sp)
   41c44:	b815883a 	mov	r10,r23
   41c48:	003f2b06 	br	418f8 <__alt_data_end+0xf40418f8>

00041c4c <__kernel_cos>:
   41c4c:	defff304 	addi	sp,sp,-52
   41c50:	dc000315 	stw	r16,12(sp)
   41c54:	04200034 	movhi	r16,32768
   41c58:	843fffc4 	addi	r16,r16,-1
   41c5c:	008f9034 	movhi	r2,15936
   41c60:	df000b15 	stw	fp,44(sp)
   41c64:	ddc00a15 	stw	r23,40(sp)
   41c68:	dd800915 	stw	r22,36(sp)
   41c6c:	dcc00615 	stw	r19,24(sp)
   41c70:	dfc00c15 	stw	ra,48(sp)
   41c74:	dd400815 	stw	r21,32(sp)
   41c78:	dd000715 	stw	r20,28(sp)
   41c7c:	dc800515 	stw	r18,20(sp)
   41c80:	dc400415 	stw	r17,16(sp)
   41c84:	2c20703a 	and	r16,r5,r16
   41c88:	10bfffc4 	addi	r2,r2,-1
   41c8c:	2827883a 	mov	r19,r5
   41c90:	202d883a 	mov	r22,r4
   41c94:	302f883a 	mov	r23,r6
   41c98:	3839883a 	mov	fp,r7
   41c9c:	14007516 	blt	r2,r16,41e74 <__kernel_cos+0x228>
   41ca0:	00465e00 	call	465e0 <__fixdfsi>
   41ca4:	10010f26 	beq	r2,zero,420e4 <__kernel_cos+0x498>
   41ca8:	b00d883a 	mov	r6,r22
   41cac:	980f883a 	mov	r7,r19
   41cb0:	b009883a 	mov	r4,r22
   41cb4:	980b883a 	mov	r5,r19
   41cb8:	00454780 	call	45478 <__muldf3>
   41cbc:	01afa234 	movhi	r6,48776
   41cc0:	01ef6a74 	movhi	r7,48553
   41cc4:	318e3504 	addi	r6,r6,14548
   41cc8:	39feba44 	addi	r7,r7,-1303
   41ccc:	1009883a 	mov	r4,r2
   41cd0:	180b883a 	mov	r5,r3
   41cd4:	102b883a 	mov	r21,r2
   41cd8:	1829883a 	mov	r20,r3
   41cdc:	00454780 	call	45478 <__muldf3>
   41ce0:	01af6d74 	movhi	r6,48565
   41ce4:	01cf88b4 	movhi	r7,15906
   41ce8:	31ac7104 	addi	r6,r6,-20028
   41cec:	39fba784 	addi	r7,r7,-4450
   41cf0:	1009883a 	mov	r4,r2
   41cf4:	180b883a 	mov	r5,r3
   41cf8:	0043fa40 	call	43fa4 <__adddf3>
   41cfc:	a80d883a 	mov	r6,r21
   41d00:	a00f883a 	mov	r7,r20
   41d04:	1009883a 	mov	r4,r2
   41d08:	180b883a 	mov	r5,r3
   41d0c:	00454780 	call	45478 <__muldf3>
   41d10:	01a02734 	movhi	r6,32924
   41d14:	01cfa4b4 	movhi	r7,16018
   41d18:	3194ab44 	addi	r6,r6,21165
   41d1c:	39df93c4 	addi	r7,r7,32335
   41d20:	1009883a 	mov	r4,r2
   41d24:	180b883a 	mov	r5,r3
   41d28:	0045ce40 	call	45ce4 <__subdf3>
   41d2c:	a80d883a 	mov	r6,r21
   41d30:	a00f883a 	mov	r7,r20
   41d34:	1009883a 	mov	r4,r2
   41d38:	180b883a 	mov	r5,r3
   41d3c:	00454780 	call	45478 <__muldf3>
   41d40:	018672f4 	movhi	r6,6603
   41d44:	01cfbeb4 	movhi	r7,16122
   41d48:	31856404 	addi	r6,r6,5520
   41d4c:	39c06804 	addi	r7,r7,416
   41d50:	1009883a 	mov	r4,r2
   41d54:	180b883a 	mov	r5,r3
   41d58:	0043fa40 	call	43fa4 <__adddf3>
   41d5c:	a80d883a 	mov	r6,r21
   41d60:	a00f883a 	mov	r7,r20
   41d64:	1009883a 	mov	r4,r2
   41d68:	180b883a 	mov	r5,r3
   41d6c:	00454780 	call	45478 <__muldf3>
   41d70:	0185b074 	movhi	r6,5825
   41d74:	01cfd5f4 	movhi	r7,16215
   41d78:	31945dc4 	addi	r6,r6,20855
   41d7c:	39f05b04 	addi	r7,r7,-16020
   41d80:	1009883a 	mov	r4,r2
   41d84:	180b883a 	mov	r5,r3
   41d88:	0045ce40 	call	45ce4 <__subdf3>
   41d8c:	a80d883a 	mov	r6,r21
   41d90:	a00f883a 	mov	r7,r20
   41d94:	1009883a 	mov	r4,r2
   41d98:	180b883a 	mov	r5,r3
   41d9c:	00454780 	call	45478 <__muldf3>
   41da0:	01955574 	movhi	r6,21845
   41da4:	01cfe974 	movhi	r7,16293
   41da8:	31955304 	addi	r6,r6,21836
   41dac:	39d55544 	addi	r7,r7,21845
   41db0:	1009883a 	mov	r4,r2
   41db4:	180b883a 	mov	r5,r3
   41db8:	0043fa40 	call	43fa4 <__adddf3>
   41dbc:	a80d883a 	mov	r6,r21
   41dc0:	a00f883a 	mov	r7,r20
   41dc4:	1009883a 	mov	r4,r2
   41dc8:	180b883a 	mov	r5,r3
   41dcc:	00454780 	call	45478 <__muldf3>
   41dd0:	1017883a 	mov	r11,r2
   41dd4:	1815883a 	mov	r10,r3
   41dd8:	a809883a 	mov	r4,r21
   41ddc:	a00b883a 	mov	r5,r20
   41de0:	000d883a 	mov	r6,zero
   41de4:	01cff834 	movhi	r7,16352
   41de8:	da800215 	stw	r10,8(sp)
   41dec:	dac00115 	stw	r11,4(sp)
   41df0:	00454780 	call	45478 <__muldf3>
   41df4:	dac00117 	ldw	r11,4(sp)
   41df8:	da800217 	ldw	r10,8(sp)
   41dfc:	a809883a 	mov	r4,r21
   41e00:	580d883a 	mov	r6,r11
   41e04:	500f883a 	mov	r7,r10
   41e08:	a00b883a 	mov	r5,r20
   41e0c:	1023883a 	mov	r17,r2
   41e10:	1821883a 	mov	r16,r3
   41e14:	00454780 	call	45478 <__muldf3>
   41e18:	b80d883a 	mov	r6,r23
   41e1c:	e00f883a 	mov	r7,fp
   41e20:	b009883a 	mov	r4,r22
   41e24:	980b883a 	mov	r5,r19
   41e28:	1029883a 	mov	r20,r2
   41e2c:	1825883a 	mov	r18,r3
   41e30:	00454780 	call	45478 <__muldf3>
   41e34:	a009883a 	mov	r4,r20
   41e38:	900b883a 	mov	r5,r18
   41e3c:	100d883a 	mov	r6,r2
   41e40:	180f883a 	mov	r7,r3
   41e44:	0045ce40 	call	45ce4 <__subdf3>
   41e48:	8809883a 	mov	r4,r17
   41e4c:	800b883a 	mov	r5,r16
   41e50:	100d883a 	mov	r6,r2
   41e54:	180f883a 	mov	r7,r3
   41e58:	0045ce40 	call	45ce4 <__subdf3>
   41e5c:	100d883a 	mov	r6,r2
   41e60:	180f883a 	mov	r7,r3
   41e64:	0009883a 	mov	r4,zero
   41e68:	014ffc34 	movhi	r5,16368
   41e6c:	0045ce40 	call	45ce4 <__subdf3>
   41e70:	00008b06 	br	420a0 <__kernel_cos+0x454>
   41e74:	200d883a 	mov	r6,r4
   41e78:	280f883a 	mov	r7,r5
   41e7c:	00454780 	call	45478 <__muldf3>
   41e80:	01afa234 	movhi	r6,48776
   41e84:	01ef6a74 	movhi	r7,48553
   41e88:	318e3504 	addi	r6,r6,14548
   41e8c:	39feba44 	addi	r7,r7,-1303
   41e90:	1009883a 	mov	r4,r2
   41e94:	180b883a 	mov	r5,r3
   41e98:	1025883a 	mov	r18,r2
   41e9c:	1823883a 	mov	r17,r3
   41ea0:	00454780 	call	45478 <__muldf3>
   41ea4:	01af6d74 	movhi	r6,48565
   41ea8:	01cf88b4 	movhi	r7,15906
   41eac:	31ac7104 	addi	r6,r6,-20028
   41eb0:	39fba784 	addi	r7,r7,-4450
   41eb4:	1009883a 	mov	r4,r2
   41eb8:	180b883a 	mov	r5,r3
   41ebc:	0043fa40 	call	43fa4 <__adddf3>
   41ec0:	900d883a 	mov	r6,r18
   41ec4:	880f883a 	mov	r7,r17
   41ec8:	1009883a 	mov	r4,r2
   41ecc:	180b883a 	mov	r5,r3
   41ed0:	00454780 	call	45478 <__muldf3>
   41ed4:	01a02734 	movhi	r6,32924
   41ed8:	01cfa4b4 	movhi	r7,16018
   41edc:	3194ab44 	addi	r6,r6,21165
   41ee0:	39df93c4 	addi	r7,r7,32335
   41ee4:	1009883a 	mov	r4,r2
   41ee8:	180b883a 	mov	r5,r3
   41eec:	0045ce40 	call	45ce4 <__subdf3>
   41ef0:	900d883a 	mov	r6,r18
   41ef4:	880f883a 	mov	r7,r17
   41ef8:	1009883a 	mov	r4,r2
   41efc:	180b883a 	mov	r5,r3
   41f00:	00454780 	call	45478 <__muldf3>
   41f04:	018672f4 	movhi	r6,6603
   41f08:	01cfbeb4 	movhi	r7,16122
   41f0c:	31856404 	addi	r6,r6,5520
   41f10:	39c06804 	addi	r7,r7,416
   41f14:	1009883a 	mov	r4,r2
   41f18:	180b883a 	mov	r5,r3
   41f1c:	0043fa40 	call	43fa4 <__adddf3>
   41f20:	900d883a 	mov	r6,r18
   41f24:	880f883a 	mov	r7,r17
   41f28:	1009883a 	mov	r4,r2
   41f2c:	180b883a 	mov	r5,r3
   41f30:	00454780 	call	45478 <__muldf3>
   41f34:	0185b074 	movhi	r6,5825
   41f38:	01cfd5f4 	movhi	r7,16215
   41f3c:	31945dc4 	addi	r6,r6,20855
   41f40:	39f05b04 	addi	r7,r7,-16020
   41f44:	1009883a 	mov	r4,r2
   41f48:	180b883a 	mov	r5,r3
   41f4c:	0045ce40 	call	45ce4 <__subdf3>
   41f50:	900d883a 	mov	r6,r18
   41f54:	880f883a 	mov	r7,r17
   41f58:	1009883a 	mov	r4,r2
   41f5c:	180b883a 	mov	r5,r3
   41f60:	00454780 	call	45478 <__muldf3>
   41f64:	01955574 	movhi	r6,21845
   41f68:	01cfe974 	movhi	r7,16293
   41f6c:	31955304 	addi	r6,r6,21836
   41f70:	39d55544 	addi	r7,r7,21845
   41f74:	1009883a 	mov	r4,r2
   41f78:	180b883a 	mov	r5,r3
   41f7c:	0043fa40 	call	43fa4 <__adddf3>
   41f80:	900d883a 	mov	r6,r18
   41f84:	880f883a 	mov	r7,r17
   41f88:	1009883a 	mov	r4,r2
   41f8c:	180b883a 	mov	r5,r3
   41f90:	00454780 	call	45478 <__muldf3>
   41f94:	1013883a 	mov	r9,r2
   41f98:	1017883a 	mov	r11,r2
   41f9c:	008ff4f4 	movhi	r2,16339
   41fa0:	108ccc84 	addi	r2,r2,13106
   41fa4:	1811883a 	mov	r8,r3
   41fa8:	902b883a 	mov	r21,r18
   41fac:	8829883a 	mov	r20,r17
   41fb0:	1815883a 	mov	r10,r3
   41fb4:	143f880e 	bge	r2,r16,41dd8 <__alt_data_end+0xf4041dd8>
   41fb8:	008ffa74 	movhi	r2,16361
   41fbc:	14004416 	blt	r2,r16,420d0 <__kernel_cos+0x484>
   41fc0:	00bff834 	movhi	r2,65504
   41fc4:	80a1883a 	add	r16,r16,r2
   41fc8:	000d883a 	mov	r6,zero
   41fcc:	800f883a 	mov	r7,r16
   41fd0:	0009883a 	mov	r4,zero
   41fd4:	014ffc34 	movhi	r5,16368
   41fd8:	da400115 	stw	r9,4(sp)
   41fdc:	d8c00215 	stw	r3,8(sp)
   41fe0:	0045ce40 	call	45ce4 <__subdf3>
   41fe4:	da000217 	ldw	r8,8(sp)
   41fe8:	da400117 	ldw	r9,4(sp)
   41fec:	102b883a 	mov	r21,r2
   41ff0:	d8c00015 	stw	r3,0(sp)
   41ff4:	9009883a 	mov	r4,r18
   41ff8:	880b883a 	mov	r5,r17
   41ffc:	000d883a 	mov	r6,zero
   42000:	01cff834 	movhi	r7,16352
   42004:	da000215 	stw	r8,8(sp)
   42008:	da400115 	stw	r9,4(sp)
   4200c:	00454780 	call	45478 <__muldf3>
   42010:	800f883a 	mov	r7,r16
   42014:	000d883a 	mov	r6,zero
   42018:	1009883a 	mov	r4,r2
   4201c:	180b883a 	mov	r5,r3
   42020:	0045ce40 	call	45ce4 <__subdf3>
   42024:	da400117 	ldw	r9,4(sp)
   42028:	da000217 	ldw	r8,8(sp)
   4202c:	9009883a 	mov	r4,r18
   42030:	480d883a 	mov	r6,r9
   42034:	400f883a 	mov	r7,r8
   42038:	880b883a 	mov	r5,r17
   4203c:	1029883a 	mov	r20,r2
   42040:	1821883a 	mov	r16,r3
   42044:	00454780 	call	45478 <__muldf3>
   42048:	b80d883a 	mov	r6,r23
   4204c:	e00f883a 	mov	r7,fp
   42050:	b009883a 	mov	r4,r22
   42054:	980b883a 	mov	r5,r19
   42058:	1025883a 	mov	r18,r2
   4205c:	1823883a 	mov	r17,r3
   42060:	00454780 	call	45478 <__muldf3>
   42064:	100d883a 	mov	r6,r2
   42068:	180f883a 	mov	r7,r3
   4206c:	9009883a 	mov	r4,r18
   42070:	880b883a 	mov	r5,r17
   42074:	0045ce40 	call	45ce4 <__subdf3>
   42078:	100d883a 	mov	r6,r2
   4207c:	180f883a 	mov	r7,r3
   42080:	a009883a 	mov	r4,r20
   42084:	800b883a 	mov	r5,r16
   42088:	0045ce40 	call	45ce4 <__subdf3>
   4208c:	d9400017 	ldw	r5,0(sp)
   42090:	100d883a 	mov	r6,r2
   42094:	180f883a 	mov	r7,r3
   42098:	a809883a 	mov	r4,r21
   4209c:	0045ce40 	call	45ce4 <__subdf3>
   420a0:	dfc00c17 	ldw	ra,48(sp)
   420a4:	df000b17 	ldw	fp,44(sp)
   420a8:	ddc00a17 	ldw	r23,40(sp)
   420ac:	dd800917 	ldw	r22,36(sp)
   420b0:	dd400817 	ldw	r21,32(sp)
   420b4:	dd000717 	ldw	r20,28(sp)
   420b8:	dcc00617 	ldw	r19,24(sp)
   420bc:	dc800517 	ldw	r18,20(sp)
   420c0:	dc400417 	ldw	r17,16(sp)
   420c4:	dc000317 	ldw	r16,12(sp)
   420c8:	dec00d04 	addi	sp,sp,52
   420cc:	f800283a 	ret
   420d0:	008ff9f4 	movhi	r2,16359
   420d4:	002b883a 	mov	r21,zero
   420d8:	d8800015 	stw	r2,0(sp)
   420dc:	040ff4b4 	movhi	r16,16338
   420e0:	003fc406 	br	41ff4 <__alt_data_end+0xf4041ff4>
   420e4:	0005883a 	mov	r2,zero
   420e8:	00cffc34 	movhi	r3,16368
   420ec:	003fec06 	br	420a0 <__alt_data_end+0xf40420a0>

000420f0 <__kernel_rem_pio2>:
   420f0:	deff5a04 	addi	sp,sp,-664
   420f4:	da00a617 	ldw	r8,664(sp)
   420f8:	00c20034 	movhi	r3,2048
   420fc:	18c08504 	addi	r3,r3,532
   42100:	4205883a 	add	r2,r8,r8
   42104:	1085883a 	add	r2,r2,r2
   42108:	1885883a 	add	r2,r3,r2
   4210c:	d9008e15 	stw	r4,568(sp)
   42110:	d9408f15 	stw	r5,572(sp)
   42114:	313fff44 	addi	r4,r6,-3
   42118:	01400604 	movi	r5,24
   4211c:	dd80a215 	stw	r22,648(sp)
   42120:	dc009c15 	stw	r16,624(sp)
   42124:	dfc0a515 	stw	ra,660(sp)
   42128:	df00a415 	stw	fp,656(sp)
   4212c:	ddc0a315 	stw	r23,652(sp)
   42130:	dd40a115 	stw	r21,644(sp)
   42134:	dd00a015 	stw	r20,640(sp)
   42138:	dcc09f15 	stw	r19,636(sp)
   4213c:	dc809e15 	stw	r18,632(sp)
   42140:	dc409d15 	stw	r17,628(sp)
   42144:	3021883a 	mov	r16,r6
   42148:	d9c09315 	stw	r7,588(sp)
   4214c:	15800017 	ldw	r22,0(r2)
   42150:	0043dc80 	call	43dc8 <__divsi3>
   42154:	da009317 	ldw	r8,588(sp)
   42158:	d8809215 	stw	r2,584(sp)
   4215c:	423fffc4 	addi	r8,r8,-1
   42160:	da008d15 	stw	r8,564(sp)
   42164:	10033d16 	blt	r2,zero,42e5c <__kernel_rem_pio2+0xd6c>
   42168:	da009217 	ldw	r8,584(sp)
   4216c:	017ffa04 	movi	r5,-24
   42170:	42000044 	addi	r8,r8,1
   42174:	4009883a 	mov	r4,r8
   42178:	da009515 	stw	r8,596(sp)
   4217c:	0043f7c0 	call	43f7c <__mulsi3>
   42180:	da008d17 	ldw	r8,564(sp)
   42184:	1421883a 	add	r16,r2,r16
   42188:	d8809217 	ldw	r2,584(sp)
   4218c:	b207883a 	add	r3,r22,r8
   42190:	dc009015 	stw	r16,576(sp)
   42194:	1223c83a 	sub	r17,r2,r8
   42198:	18001016 	blt	r3,zero,421dc <__kernel_rem_pio2+0xec>
   4219c:	da00a717 	ldw	r8,668(sp)
   421a0:	8c65883a 	add	r18,r17,r17
   421a4:	94a5883a 	add	r18,r18,r18
   421a8:	1c47883a 	add	r3,r3,r17
   421ac:	dcc05004 	addi	r19,sp,320
   421b0:	44a5883a 	add	r18,r8,r18
   421b4:	1c000044 	addi	r16,r3,1
   421b8:	88015316 	blt	r17,zero,42708 <__kernel_rem_pio2+0x618>
   421bc:	91000017 	ldw	r4,0(r18)
   421c0:	00466600 	call	46660 <__floatsidf>
   421c4:	98800015 	stw	r2,0(r19)
   421c8:	98c00115 	stw	r3,4(r19)
   421cc:	8c400044 	addi	r17,r17,1
   421d0:	9cc00204 	addi	r19,r19,8
   421d4:	94800104 	addi	r18,r18,4
   421d8:	8c3ff71e 	bne	r17,r16,421b8 <__alt_data_end+0xf40421b8>
   421dc:	b0002816 	blt	r22,zero,42280 <__kernel_rem_pio2+0x190>
   421e0:	da008d17 	ldw	r8,564(sp)
   421e4:	b4c00044 	addi	r19,r22,1
   421e8:	982690fa 	slli	r19,r19,3
   421ec:	402490fa 	slli	r18,r8,3
   421f0:	da008e17 	ldw	r8,568(sp)
   421f4:	d8805004 	addi	r2,sp,320
   421f8:	94000204 	addi	r16,r18,8
   421fc:	d823883a 	mov	r17,sp
   42200:	14a5883a 	add	r18,r2,r18
   42204:	dcef883a 	add	r23,sp,r19
   42208:	4421883a 	add	r16,r8,r16
   4220c:	dd809115 	stw	r22,580(sp)
   42210:	4039883a 	mov	fp,r8
   42214:	da008d17 	ldw	r8,564(sp)
   42218:	40016016 	blt	r8,zero,4279c <__kernel_rem_pio2+0x6ac>
   4221c:	e027883a 	mov	r19,fp
   42220:	9029883a 	mov	r20,r18
   42224:	002d883a 	mov	r22,zero
   42228:	002b883a 	mov	r21,zero
   4222c:	a1800017 	ldw	r6,0(r20)
   42230:	a1c00117 	ldw	r7,4(r20)
   42234:	99000017 	ldw	r4,0(r19)
   42238:	99400117 	ldw	r5,4(r19)
   4223c:	9cc00204 	addi	r19,r19,8
   42240:	a53ffe04 	addi	r20,r20,-8
   42244:	00454780 	call	45478 <__muldf3>
   42248:	b009883a 	mov	r4,r22
   4224c:	a80b883a 	mov	r5,r21
   42250:	100d883a 	mov	r6,r2
   42254:	180f883a 	mov	r7,r3
   42258:	0043fa40 	call	43fa4 <__adddf3>
   4225c:	102d883a 	mov	r22,r2
   42260:	182b883a 	mov	r21,r3
   42264:	9c3ff11e 	bne	r19,r16,4222c <__alt_data_end+0xf404222c>
   42268:	8d800015 	stw	r22,0(r17)
   4226c:	8d400115 	stw	r21,4(r17)
   42270:	8c400204 	addi	r17,r17,8
   42274:	94800204 	addi	r18,r18,8
   42278:	8dffe61e 	bne	r17,r23,42214 <__alt_data_end+0xf4042214>
   4227c:	dd809117 	ldw	r22,580(sp)
   42280:	00d00034 	movhi	r3,16384
   42284:	da009317 	ldw	r8,588(sp)
   42288:	18ffff84 	addi	r3,r3,-2
   4228c:	b0c7883a 	add	r3,r22,r3
   42290:	18c7883a 	add	r3,r3,r3
   42294:	402090fa 	slli	r16,r8,3
   42298:	18c7883a 	add	r3,r3,r3
   4229c:	da007804 	addi	r8,sp,480
   422a0:	40d1883a 	add	r8,r8,r3
   422a4:	b0bfffc4 	addi	r2,r22,-1
   422a8:	da009615 	stw	r8,600(sp)
   422ac:	da008e17 	ldw	r8,568(sp)
   422b0:	1085883a 	add	r2,r2,r2
   422b4:	1085883a 	add	r2,r2,r2
   422b8:	19000104 	addi	r4,r3,4
   422bc:	d885883a 	add	r2,sp,r2
   422c0:	4421883a 	add	r16,r8,r16
   422c4:	da007804 	addi	r8,sp,480
   422c8:	4111883a 	add	r8,r8,r4
   422cc:	10807804 	addi	r2,r2,480
   422d0:	da009715 	stw	r8,604(sp)
   422d4:	b025883a 	mov	r18,r22
   422d8:	d8809815 	stw	r2,608(sp)
   422dc:	dd809415 	stw	r22,592(sp)
   422e0:	900490fa 	slli	r2,r18,3
   422e4:	d885883a 	add	r2,sp,r2
   422e8:	17000017 	ldw	fp,0(r2)
   422ec:	15400117 	ldw	r21,4(r2)
   422f0:	04802b0e 	bge	zero,r18,423a0 <__kernel_rem_pio2+0x2b0>
   422f4:	00880034 	movhi	r2,8192
   422f8:	10bfffc4 	addi	r2,r2,-1
   422fc:	90a9883a 	add	r20,r18,r2
   42300:	a02890fa 	slli	r20,r20,3
   42304:	dc407804 	addi	r17,sp,480
   42308:	dcfffe04 	addi	r19,sp,-8
   4230c:	dd29883a 	add	r20,sp,r20
   42310:	000d883a 	mov	r6,zero
   42314:	01cf9c34 	movhi	r7,15984
   42318:	e009883a 	mov	r4,fp
   4231c:	a80b883a 	mov	r5,r21
   42320:	00454780 	call	45478 <__muldf3>
   42324:	180b883a 	mov	r5,r3
   42328:	1009883a 	mov	r4,r2
   4232c:	00465e00 	call	465e0 <__fixdfsi>
   42330:	1009883a 	mov	r4,r2
   42334:	00466600 	call	46660 <__floatsidf>
   42338:	000d883a 	mov	r6,zero
   4233c:	01d05c34 	movhi	r7,16752
   42340:	1009883a 	mov	r4,r2
   42344:	180b883a 	mov	r5,r3
   42348:	102f883a 	mov	r23,r2
   4234c:	182d883a 	mov	r22,r3
   42350:	00454780 	call	45478 <__muldf3>
   42354:	100d883a 	mov	r6,r2
   42358:	180f883a 	mov	r7,r3
   4235c:	e009883a 	mov	r4,fp
   42360:	a80b883a 	mov	r5,r21
   42364:	0045ce40 	call	45ce4 <__subdf3>
   42368:	180b883a 	mov	r5,r3
   4236c:	1009883a 	mov	r4,r2
   42370:	00465e00 	call	465e0 <__fixdfsi>
   42374:	a1800017 	ldw	r6,0(r20)
   42378:	a1c00117 	ldw	r7,4(r20)
   4237c:	88800015 	stw	r2,0(r17)
   42380:	b809883a 	mov	r4,r23
   42384:	b00b883a 	mov	r5,r22
   42388:	0043fa40 	call	43fa4 <__adddf3>
   4238c:	a53ffe04 	addi	r20,r20,-8
   42390:	1039883a 	mov	fp,r2
   42394:	182b883a 	mov	r21,r3
   42398:	8c400104 	addi	r17,r17,4
   4239c:	a4ffdc1e 	bne	r20,r19,42310 <__alt_data_end+0xf4042310>
   423a0:	d9809017 	ldw	r6,576(sp)
   423a4:	a80b883a 	mov	r5,r21
   423a8:	e009883a 	mov	r4,fp
   423ac:	00433780 	call	43378 <scalbn>
   423b0:	000d883a 	mov	r6,zero
   423b4:	01cff034 	movhi	r7,16320
   423b8:	1009883a 	mov	r4,r2
   423bc:	180b883a 	mov	r5,r3
   423c0:	1027883a 	mov	r19,r2
   423c4:	1823883a 	mov	r17,r3
   423c8:	00454780 	call	45478 <__muldf3>
   423cc:	1009883a 	mov	r4,r2
   423d0:	180b883a 	mov	r5,r3
   423d4:	00431840 	call	43184 <floor>
   423d8:	000d883a 	mov	r6,zero
   423dc:	01d00834 	movhi	r7,16416
   423e0:	1009883a 	mov	r4,r2
   423e4:	180b883a 	mov	r5,r3
   423e8:	00454780 	call	45478 <__muldf3>
   423ec:	100d883a 	mov	r6,r2
   423f0:	180f883a 	mov	r7,r3
   423f4:	9809883a 	mov	r4,r19
   423f8:	880b883a 	mov	r5,r17
   423fc:	0045ce40 	call	45ce4 <__subdf3>
   42400:	180b883a 	mov	r5,r3
   42404:	1009883a 	mov	r4,r2
   42408:	1827883a 	mov	r19,r3
   4240c:	1029883a 	mov	r20,r2
   42410:	00465e00 	call	465e0 <__fixdfsi>
   42414:	1009883a 	mov	r4,r2
   42418:	1023883a 	mov	r17,r2
   4241c:	00466600 	call	46660 <__floatsidf>
   42420:	a009883a 	mov	r4,r20
   42424:	100d883a 	mov	r6,r2
   42428:	180f883a 	mov	r7,r3
   4242c:	980b883a 	mov	r5,r19
   42430:	0045ce40 	call	45ce4 <__subdf3>
   42434:	d9009017 	ldw	r4,576(sp)
   42438:	1013883a 	mov	r9,r2
   4243c:	102b883a 	mov	r21,r2
   42440:	1811883a 	mov	r8,r3
   42444:	0100b30e 	bge	zero,r4,42714 <__kernel_rem_pio2+0x624>
   42448:	90bfffc4 	addi	r2,r18,-1
   4244c:	1085883a 	add	r2,r2,r2
   42450:	1085883a 	add	r2,r2,r2
   42454:	d885883a 	add	r2,sp,r2
   42458:	10807804 	addi	r2,r2,480
   4245c:	d9809017 	ldw	r6,576(sp)
   42460:	11400017 	ldw	r5,0(r2)
   42464:	01000604 	movi	r4,24
   42468:	2189c83a 	sub	r4,r4,r6
   4246c:	290dd83a 	sra	r6,r5,r4
   42470:	d9c09017 	ldw	r7,576(sp)
   42474:	04c005c4 	movi	r19,23
   42478:	3108983a 	sll	r4,r6,r4
   4247c:	99e7c83a 	sub	r19,r19,r7
   42480:	89a3883a 	add	r17,r17,r6
   42484:	2909c83a 	sub	r4,r5,r4
   42488:	24e7d83a 	sra	r19,r4,r19
   4248c:	11000015 	stw	r4,0(r2)
   42490:	04c02a0e 	bge	zero,r19,4253c <__kernel_rem_pio2+0x44c>
   42494:	8c400044 	addi	r17,r17,1
   42498:	0481570e 	bge	zero,r18,429f8 <__kernel_rem_pio2+0x908>
   4249c:	02804034 	movhi	r10,256
   424a0:	52bfffc4 	addi	r10,r10,-1
   424a4:	d8807804 	addi	r2,sp,480
   424a8:	000b883a 	mov	r5,zero
   424ac:	0029883a 	mov	r20,zero
   424b0:	01c04034 	movhi	r7,256
   424b4:	00000706 	br	424d4 <__kernel_rem_pio2+0x3e4>
   424b8:	390dc83a 	sub	r6,r7,r4
   424bc:	20000226 	beq	r4,zero,424c8 <__kernel_rem_pio2+0x3d8>
   424c0:	11800015 	stw	r6,0(r2)
   424c4:	05000044 	movi	r20,1
   424c8:	29400044 	addi	r5,r5,1
   424cc:	10800104 	addi	r2,r2,4
   424d0:	2c80080e 	bge	r5,r18,424f4 <__kernel_rem_pio2+0x404>
   424d4:	11000017 	ldw	r4,0(r2)
   424d8:	a03ff726 	beq	r20,zero,424b8 <__alt_data_end+0xf40424b8>
   424dc:	5109c83a 	sub	r4,r10,r4
   424e0:	11000015 	stw	r4,0(r2)
   424e4:	29400044 	addi	r5,r5,1
   424e8:	05000044 	movi	r20,1
   424ec:	10800104 	addi	r2,r2,4
   424f0:	2cbff816 	blt	r5,r18,424d4 <__alt_data_end+0xf40424d4>
   424f4:	d9009017 	ldw	r4,576(sp)
   424f8:	01000e0e 	bge	zero,r4,42534 <__kernel_rem_pio2+0x444>
   424fc:	00800044 	movi	r2,1
   42500:	20808d26 	beq	r4,r2,42738 <__kernel_rem_pio2+0x648>
   42504:	00800084 	movi	r2,2
   42508:	20800a1e 	bne	r4,r2,42534 <__kernel_rem_pio2+0x444>
   4250c:	90bfffc4 	addi	r2,r18,-1
   42510:	1085883a 	add	r2,r2,r2
   42514:	1085883a 	add	r2,r2,r2
   42518:	d885883a 	add	r2,sp,r2
   4251c:	10807804 	addi	r2,r2,480
   42520:	11400017 	ldw	r5,0(r2)
   42524:	01001034 	movhi	r4,64
   42528:	213fffc4 	addi	r4,r4,-1
   4252c:	2908703a 	and	r4,r5,r4
   42530:	11000015 	stw	r4,0(r2)
   42534:	00800084 	movi	r2,2
   42538:	98805d26 	beq	r19,r2,426b0 <__kernel_rem_pio2+0x5c0>
   4253c:	400b883a 	mov	r5,r8
   42540:	000d883a 	mov	r6,zero
   42544:	000f883a 	mov	r7,zero
   42548:	a809883a 	mov	r4,r21
   4254c:	da009b15 	stw	r8,620(sp)
   42550:	00452200 	call	45220 <__eqdf2>
   42554:	da009b17 	ldw	r8,620(sp)
   42558:	10012b1e 	bne	r2,zero,42a08 <__kernel_rem_pio2+0x918>
   4255c:	da009417 	ldw	r8,592(sp)
   42560:	917fffc4 	addi	r5,r18,-1
   42564:	2a000e16 	blt	r5,r8,425a0 <__kernel_rem_pio2+0x4b0>
   42568:	00900034 	movhi	r2,16384
   4256c:	10bfffc4 	addi	r2,r2,-1
   42570:	9085883a 	add	r2,r18,r2
   42574:	1085883a 	add	r2,r2,r2
   42578:	d9809717 	ldw	r6,604(sp)
   4257c:	1085883a 	add	r2,r2,r2
   42580:	d9007804 	addi	r4,sp,480
   42584:	0007883a 	mov	r3,zero
   42588:	2085883a 	add	r2,r4,r2
   4258c:	11000017 	ldw	r4,0(r2)
   42590:	10bfff04 	addi	r2,r2,-4
   42594:	1906b03a 	or	r3,r3,r4
   42598:	11bffc1e 	bne	r2,r6,4258c <__alt_data_end+0xf404258c>
   4259c:	1800821e 	bne	r3,zero,427a8 <__kernel_rem_pio2+0x6b8>
   425a0:	da009817 	ldw	r8,608(sp)
   425a4:	40800017 	ldw	r2,0(r8)
   425a8:	1001151e 	bne	r2,zero,42a00 <__kernel_rem_pio2+0x910>
   425ac:	d8809617 	ldw	r2,600(sp)
   425b0:	05000044 	movi	r20,1
   425b4:	10bfff04 	addi	r2,r2,-4
   425b8:	10c00117 	ldw	r3,4(r2)
   425bc:	a5000044 	addi	r20,r20,1
   425c0:	183ffc26 	beq	r3,zero,425b4 <__alt_data_end+0xf40425b4>
   425c4:	9529883a 	add	r20,r18,r20
   425c8:	90800044 	addi	r2,r18,1
   425cc:	dd009115 	stw	r20,580(sp)
   425d0:	a0803216 	blt	r20,r2,4269c <__kernel_rem_pio2+0x5ac>
   425d4:	da009317 	ldw	r8,588(sp)
   425d8:	d8c09117 	ldw	r3,580(sp)
   425dc:	44a3883a 	add	r17,r8,r18
   425e0:	da009217 	ldw	r8,584(sp)
   425e4:	882290fa 	slli	r17,r17,3
   425e8:	40a5883a 	add	r18,r8,r2
   425ec:	da009517 	ldw	r8,596(sp)
   425f0:	100490fa 	slli	r2,r2,3
   425f4:	94a5883a 	add	r18,r18,r18
   425f8:	40eb883a 	add	r21,r8,r3
   425fc:	da00a717 	ldw	r8,668(sp)
   42600:	ad6b883a 	add	r21,r21,r21
   42604:	94a5883a 	add	r18,r18,r18
   42608:	ad6b883a 	add	r21,r21,r21
   4260c:	d8c05004 	addi	r3,sp,320
   42610:	44a5883a 	add	r18,r8,r18
   42614:	1c63883a 	add	r17,r3,r17
   42618:	d8a7883a 	add	r19,sp,r2
   4261c:	456b883a 	add	r21,r8,r21
   42620:	91000017 	ldw	r4,0(r18)
   42624:	00466600 	call	46660 <__floatsidf>
   42628:	da008d17 	ldw	r8,564(sp)
   4262c:	88800015 	stw	r2,0(r17)
   42630:	88c00115 	stw	r3,4(r17)
   42634:	40001b16 	blt	r8,zero,426a4 <__kernel_rem_pio2+0x5b4>
   42638:	dd008e17 	ldw	r20,568(sp)
   4263c:	882d883a 	mov	r22,r17
   42640:	002f883a 	mov	r23,zero
   42644:	0039883a 	mov	fp,zero
   42648:	b1800017 	ldw	r6,0(r22)
   4264c:	b1c00117 	ldw	r7,4(r22)
   42650:	a1000017 	ldw	r4,0(r20)
   42654:	a1400117 	ldw	r5,4(r20)
   42658:	a5000204 	addi	r20,r20,8
   4265c:	b5bffe04 	addi	r22,r22,-8
   42660:	00454780 	call	45478 <__muldf3>
   42664:	b809883a 	mov	r4,r23
   42668:	e00b883a 	mov	r5,fp
   4266c:	100d883a 	mov	r6,r2
   42670:	180f883a 	mov	r7,r3
   42674:	0043fa40 	call	43fa4 <__adddf3>
   42678:	102f883a 	mov	r23,r2
   4267c:	1839883a 	mov	fp,r3
   42680:	a43ff11e 	bne	r20,r16,42648 <__alt_data_end+0xf4042648>
   42684:	9dc00015 	stw	r23,0(r19)
   42688:	9f000115 	stw	fp,4(r19)
   4268c:	94800104 	addi	r18,r18,4
   42690:	8c400204 	addi	r17,r17,8
   42694:	9cc00204 	addi	r19,r19,8
   42698:	957fe11e 	bne	r18,r21,42620 <__alt_data_end+0xf4042620>
   4269c:	dc809117 	ldw	r18,580(sp)
   426a0:	003f0f06 	br	422e0 <__alt_data_end+0xf40422e0>
   426a4:	002f883a 	mov	r23,zero
   426a8:	0039883a 	mov	fp,zero
   426ac:	003ff506 	br	42684 <__alt_data_end+0xf4042684>
   426b0:	480d883a 	mov	r6,r9
   426b4:	180f883a 	mov	r7,r3
   426b8:	0009883a 	mov	r4,zero
   426bc:	014ffc34 	movhi	r5,16368
   426c0:	0045ce40 	call	45ce4 <__subdf3>
   426c4:	102b883a 	mov	r21,r2
   426c8:	1811883a 	mov	r8,r3
   426cc:	a03f9b26 	beq	r20,zero,4253c <__alt_data_end+0xf404253c>
   426d0:	d9809017 	ldw	r6,576(sp)
   426d4:	0009883a 	mov	r4,zero
   426d8:	014ffc34 	movhi	r5,16368
   426dc:	d8c09b15 	stw	r3,620(sp)
   426e0:	00433780 	call	43378 <scalbn>
   426e4:	da009b17 	ldw	r8,620(sp)
   426e8:	a809883a 	mov	r4,r21
   426ec:	100d883a 	mov	r6,r2
   426f0:	400b883a 	mov	r5,r8
   426f4:	180f883a 	mov	r7,r3
   426f8:	0045ce40 	call	45ce4 <__subdf3>
   426fc:	102b883a 	mov	r21,r2
   42700:	1811883a 	mov	r8,r3
   42704:	003f8d06 	br	4253c <__alt_data_end+0xf404253c>
   42708:	0005883a 	mov	r2,zero
   4270c:	0007883a 	mov	r3,zero
   42710:	003eac06 	br	421c4 <__alt_data_end+0xf40421c4>
   42714:	d8809017 	ldw	r2,576(sp)
   42718:	1000121e 	bne	r2,zero,42764 <__kernel_rem_pio2+0x674>
   4271c:	90bfffc4 	addi	r2,r18,-1
   42720:	1085883a 	add	r2,r2,r2
   42724:	1085883a 	add	r2,r2,r2
   42728:	d885883a 	add	r2,sp,r2
   4272c:	14c07817 	ldw	r19,480(r2)
   42730:	9827d5fa 	srai	r19,r19,23
   42734:	003f5606 	br	42490 <__alt_data_end+0xf4042490>
   42738:	90bfffc4 	addi	r2,r18,-1
   4273c:	1085883a 	add	r2,r2,r2
   42740:	1085883a 	add	r2,r2,r2
   42744:	d885883a 	add	r2,sp,r2
   42748:	10807804 	addi	r2,r2,480
   4274c:	11000017 	ldw	r4,0(r2)
   42750:	01402034 	movhi	r5,128
   42754:	297fffc4 	addi	r5,r5,-1
   42758:	2148703a 	and	r4,r4,r5
   4275c:	11000015 	stw	r4,0(r2)
   42760:	003f7406 	br	42534 <__alt_data_end+0xf4042534>
   42764:	4809883a 	mov	r4,r9
   42768:	180b883a 	mov	r5,r3
   4276c:	000d883a 	mov	r6,zero
   42770:	01cff834 	movhi	r7,16352
   42774:	d8c09a15 	stw	r3,616(sp)
   42778:	d8c09b15 	stw	r3,620(sp)
   4277c:	da409915 	stw	r9,612(sp)
   42780:	00452a80 	call	452a8 <__gedf2>
   42784:	d8c09a17 	ldw	r3,616(sp)
   42788:	da009b17 	ldw	r8,620(sp)
   4278c:	da409917 	ldw	r9,612(sp)
   42790:	1000920e 	bge	r2,zero,429dc <__kernel_rem_pio2+0x8ec>
   42794:	0027883a 	mov	r19,zero
   42798:	003f6806 	br	4253c <__alt_data_end+0xf404253c>
   4279c:	002d883a 	mov	r22,zero
   427a0:	002b883a 	mov	r21,zero
   427a4:	003eb006 	br	42268 <__alt_data_end+0xf4042268>
   427a8:	2945883a 	add	r2,r5,r5
   427ac:	da009017 	ldw	r8,576(sp)
   427b0:	1085883a 	add	r2,r2,r2
   427b4:	d885883a 	add	r2,sp,r2
   427b8:	10807817 	ldw	r2,480(r2)
   427bc:	423ffa04 	addi	r8,r8,-24
   427c0:	dc409115 	stw	r17,580(sp)
   427c4:	dcc08d15 	stw	r19,564(sp)
   427c8:	da009015 	stw	r8,576(sp)
   427cc:	dd809417 	ldw	r22,592(sp)
   427d0:	2823883a 	mov	r17,r5
   427d4:	10000e1e 	bne	r2,zero,42810 <__kernel_rem_pio2+0x720>
   427d8:	00900034 	movhi	r2,16384
   427dc:	10bfffc4 	addi	r2,r2,-1
   427e0:	2885883a 	add	r2,r5,r2
   427e4:	1085883a 	add	r2,r2,r2
   427e8:	d8c07804 	addi	r3,sp,480
   427ec:	1085883a 	add	r2,r2,r2
   427f0:	1885883a 	add	r2,r3,r2
   427f4:	4007883a 	mov	r3,r8
   427f8:	10bfff04 	addi	r2,r2,-4
   427fc:	11000117 	ldw	r4,4(r2)
   42800:	8c7fffc4 	addi	r17,r17,-1
   42804:	18fffa04 	addi	r3,r3,-24
   42808:	203ffb26 	beq	r4,zero,427f8 <__alt_data_end+0xf40427f8>
   4280c:	d8c09015 	stw	r3,576(sp)
   42810:	d9809017 	ldw	r6,576(sp)
   42814:	0009883a 	mov	r4,zero
   42818:	014ffc34 	movhi	r5,16368
   4281c:	00433780 	call	43378 <scalbn>
   42820:	1029883a 	mov	r20,r2
   42824:	182b883a 	mov	r21,r3
   42828:	88018416 	blt	r17,zero,42e3c <__kernel_rem_pio2+0xd4c>
   4282c:	881090fa 	slli	r8,r17,3
   42830:	d8c07804 	addi	r3,sp,480
   42834:	da008e15 	stw	r8,568(sp)
   42838:	d8808e17 	ldw	r2,568(sp)
   4283c:	8c51883a 	add	r8,r17,r17
   42840:	4211883a 	add	r8,r8,r8
   42844:	d8a1883a 	add	r16,sp,r2
   42848:	1a25883a 	add	r18,r3,r8
   4284c:	da3ffe04 	addi	r8,sp,-8
   42850:	da008c15 	stw	r8,560(sp)
   42854:	8039883a 	mov	fp,r16
   42858:	91000017 	ldw	r4,0(r18)
   4285c:	e73ffe04 	addi	fp,fp,-8
   42860:	94bfff04 	addi	r18,r18,-4
   42864:	00466600 	call	46660 <__floatsidf>
   42868:	a00d883a 	mov	r6,r20
   4286c:	a80f883a 	mov	r7,r21
   42870:	1009883a 	mov	r4,r2
   42874:	180b883a 	mov	r5,r3
   42878:	00454780 	call	45478 <__muldf3>
   4287c:	a009883a 	mov	r4,r20
   42880:	a80b883a 	mov	r5,r21
   42884:	e0800215 	stw	r2,8(fp)
   42888:	e0c00315 	stw	r3,12(fp)
   4288c:	000d883a 	mov	r6,zero
   42890:	01cf9c34 	movhi	r7,15984
   42894:	00454780 	call	45478 <__muldf3>
   42898:	da008c17 	ldw	r8,560(sp)
   4289c:	1029883a 	mov	r20,r2
   428a0:	182b883a 	mov	r21,r3
   428a4:	e23fec1e 	bne	fp,r8,42858 <__alt_data_end+0xf4042858>
   428a8:	0029883a 	mov	r20,zero
   428ac:	b0004f16 	blt	r22,zero,429ec <__kernel_rem_pio2+0x8fc>
   428b0:	05420034 	movhi	r21,2048
   428b4:	014ffe74 	movhi	r5,16377
   428b8:	ad407704 	addi	r21,r21,476
   428bc:	8027883a 	mov	r19,r16
   428c0:	01100034 	movhi	r4,16384
   428c4:	29487ec4 	addi	r5,r5,8699
   428c8:	0039883a 	mov	fp,zero
   428cc:	002f883a 	mov	r23,zero
   428d0:	0025883a 	mov	r18,zero
   428d4:	00000506 	br	428ec <__kernel_rem_pio2+0x7fc>
   428d8:	9cc00204 	addi	r19,r19,8
   428dc:	a4800f16 	blt	r20,r18,4291c <__kernel_rem_pio2+0x82c>
   428e0:	a9000017 	ldw	r4,0(r21)
   428e4:	a9400117 	ldw	r5,4(r21)
   428e8:	ad400204 	addi	r21,r21,8
   428ec:	99800017 	ldw	r6,0(r19)
   428f0:	99c00117 	ldw	r7,4(r19)
   428f4:	94800044 	addi	r18,r18,1
   428f8:	00454780 	call	45478 <__muldf3>
   428fc:	e009883a 	mov	r4,fp
   42900:	b80b883a 	mov	r5,r23
   42904:	100d883a 	mov	r6,r2
   42908:	180f883a 	mov	r7,r3
   4290c:	0043fa40 	call	43fa4 <__adddf3>
   42910:	1039883a 	mov	fp,r2
   42914:	182f883a 	mov	r23,r3
   42918:	b4bfef0e 	bge	r22,r18,428d8 <__alt_data_end+0xf40428d8>
   4291c:	a00490fa 	slli	r2,r20,3
   42920:	da008c17 	ldw	r8,560(sp)
   42924:	843ffe04 	addi	r16,r16,-8
   42928:	d885883a 	add	r2,sp,r2
   4292c:	10802804 	addi	r2,r2,160
   42930:	17000015 	stw	fp,0(r2)
   42934:	15c00115 	stw	r23,4(r2)
   42938:	a5000044 	addi	r20,r20,1
   4293c:	823fdb1e 	bne	r16,r8,428ac <__alt_data_end+0xf40428ac>
   42940:	da00a617 	ldw	r8,664(sp)
   42944:	00800084 	movi	r2,2
   42948:	12006616 	blt	r2,r8,42ae4 <__kernel_rem_pio2+0x9f4>
   4294c:	0200de16 	blt	zero,r8,42cc8 <__kernel_rem_pio2+0xbd8>
   42950:	4000141e 	bne	r8,zero,429a4 <__kernel_rem_pio2+0x8b4>
   42954:	da008e17 	ldw	r8,568(sp)
   42958:	d8802804 	addi	r2,sp,160
   4295c:	0007883a 	mov	r3,zero
   42960:	1225883a 	add	r18,r2,r8
   42964:	043fffc4 	movi	r16,-1
   42968:	0005883a 	mov	r2,zero
   4296c:	91800017 	ldw	r6,0(r18)
   42970:	91c00117 	ldw	r7,4(r18)
   42974:	1009883a 	mov	r4,r2
   42978:	180b883a 	mov	r5,r3
   4297c:	8c7fffc4 	addi	r17,r17,-1
   42980:	0043fa40 	call	43fa4 <__adddf3>
   42984:	94bffe04 	addi	r18,r18,-8
   42988:	8c3ff81e 	bne	r17,r16,4296c <__alt_data_end+0xf404296c>
   4298c:	da008d17 	ldw	r8,564(sp)
   42990:	40000126 	beq	r8,zero,42998 <__kernel_rem_pio2+0x8a8>
   42994:	18e0003c 	xorhi	r3,r3,32768
   42998:	da008f17 	ldw	r8,572(sp)
   4299c:	40800015 	stw	r2,0(r8)
   429a0:	40c00115 	stw	r3,4(r8)
   429a4:	da009117 	ldw	r8,580(sp)
   429a8:	408001cc 	andi	r2,r8,7
   429ac:	dfc0a517 	ldw	ra,660(sp)
   429b0:	df00a417 	ldw	fp,656(sp)
   429b4:	ddc0a317 	ldw	r23,652(sp)
   429b8:	dd80a217 	ldw	r22,648(sp)
   429bc:	dd40a117 	ldw	r21,644(sp)
   429c0:	dd00a017 	ldw	r20,640(sp)
   429c4:	dcc09f17 	ldw	r19,636(sp)
   429c8:	dc809e17 	ldw	r18,632(sp)
   429cc:	dc409d17 	ldw	r17,628(sp)
   429d0:	dc009c17 	ldw	r16,624(sp)
   429d4:	dec0a604 	addi	sp,sp,664
   429d8:	f800283a 	ret
   429dc:	8c400044 	addi	r17,r17,1
   429e0:	04810d0e 	bge	zero,r18,42e18 <__kernel_rem_pio2+0xd28>
   429e4:	04c00084 	movi	r19,2
   429e8:	003eac06 	br	4249c <__alt_data_end+0xf404249c>
   429ec:	0039883a 	mov	fp,zero
   429f0:	002f883a 	mov	r23,zero
   429f4:	003fc906 	br	4291c <__alt_data_end+0xf404291c>
   429f8:	0029883a 	mov	r20,zero
   429fc:	003ebd06 	br	424f4 <__alt_data_end+0xf40424f4>
   42a00:	05000044 	movi	r20,1
   42a04:	003eef06 	br	425c4 <__alt_data_end+0xf40425c4>
   42a08:	4029883a 	mov	r20,r8
   42a0c:	da009017 	ldw	r8,576(sp)
   42a10:	a809883a 	mov	r4,r21
   42a14:	a00b883a 	mov	r5,r20
   42a18:	020dc83a 	sub	r6,zero,r8
   42a1c:	dc409115 	stw	r17,580(sp)
   42a20:	dd809417 	ldw	r22,592(sp)
   42a24:	dcc08d15 	stw	r19,564(sp)
   42a28:	00433780 	call	43378 <scalbn>
   42a2c:	000d883a 	mov	r6,zero
   42a30:	01d05c34 	movhi	r7,16752
   42a34:	1009883a 	mov	r4,r2
   42a38:	180b883a 	mov	r5,r3
   42a3c:	102b883a 	mov	r21,r2
   42a40:	1823883a 	mov	r17,r3
   42a44:	00452a80 	call	452a8 <__gedf2>
   42a48:	1000e916 	blt	r2,zero,42df0 <__kernel_rem_pio2+0xd00>
   42a4c:	000d883a 	mov	r6,zero
   42a50:	01cf9c34 	movhi	r7,15984
   42a54:	880b883a 	mov	r5,r17
   42a58:	a809883a 	mov	r4,r21
   42a5c:	00454780 	call	45478 <__muldf3>
   42a60:	180b883a 	mov	r5,r3
   42a64:	1009883a 	mov	r4,r2
   42a68:	00465e00 	call	465e0 <__fixdfsi>
   42a6c:	1029883a 	mov	r20,r2
   42a70:	9485883a 	add	r2,r18,r18
   42a74:	1085883a 	add	r2,r2,r2
   42a78:	a009883a 	mov	r4,r20
   42a7c:	d8a1883a 	add	r16,sp,r2
   42a80:	00466600 	call	46660 <__floatsidf>
   42a84:	000d883a 	mov	r6,zero
   42a88:	01d05c34 	movhi	r7,16752
   42a8c:	1009883a 	mov	r4,r2
   42a90:	180b883a 	mov	r5,r3
   42a94:	00454780 	call	45478 <__muldf3>
   42a98:	880b883a 	mov	r5,r17
   42a9c:	100d883a 	mov	r6,r2
   42aa0:	180f883a 	mov	r7,r3
   42aa4:	a809883a 	mov	r4,r21
   42aa8:	0045ce40 	call	45ce4 <__subdf3>
   42aac:	180b883a 	mov	r5,r3
   42ab0:	1009883a 	mov	r4,r2
   42ab4:	00465e00 	call	465e0 <__fixdfsi>
   42ab8:	da009017 	ldw	r8,576(sp)
   42abc:	94400044 	addi	r17,r18,1
   42ac0:	8c47883a 	add	r3,r17,r17
   42ac4:	84007804 	addi	r16,r16,480
   42ac8:	18c7883a 	add	r3,r3,r3
   42acc:	80800015 	stw	r2,0(r16)
   42ad0:	d8c7883a 	add	r3,sp,r3
   42ad4:	42000604 	addi	r8,r8,24
   42ad8:	da009015 	stw	r8,576(sp)
   42adc:	1d007815 	stw	r20,480(r3)
   42ae0:	003f4b06 	br	42810 <__alt_data_end+0xf4042810>
   42ae4:	da00a617 	ldw	r8,664(sp)
   42ae8:	008000c4 	movi	r2,3
   42aec:	40bfad1e 	bne	r8,r2,429a4 <__alt_data_end+0xf40429a4>
   42af0:	0440bc0e 	bge	zero,r17,42de4 <__kernel_rem_pio2+0xcf4>
   42af4:	da008e17 	ldw	r8,568(sp)
   42af8:	882090fa 	slli	r16,r17,3
   42afc:	dd402804 	addi	r21,sp,160
   42b00:	da05883a 	add	r2,sp,r8
   42b04:	10802804 	addi	r2,r2,160
   42b08:	15c00017 	ldw	r23,0(r2)
   42b0c:	15800117 	ldw	r22,4(r2)
   42b10:	8029883a 	mov	r20,r16
   42b14:	843ffe04 	addi	r16,r16,-8
   42b18:	ac21883a 	add	r16,r21,r16
   42b1c:	ad29883a 	add	r20,r21,r20
   42b20:	dac02604 	addi	r11,sp,152
   42b24:	8811883a 	mov	r8,r17
   42b28:	84400017 	ldw	r17,0(r16)
   42b2c:	87000117 	ldw	fp,4(r16)
   42b30:	b80d883a 	mov	r6,r23
   42b34:	b00f883a 	mov	r7,r22
   42b38:	8809883a 	mov	r4,r17
   42b3c:	e00b883a 	mov	r5,fp
   42b40:	da009b15 	stw	r8,620(sp)
   42b44:	dac09915 	stw	r11,612(sp)
   42b48:	0043fa40 	call	43fa4 <__adddf3>
   42b4c:	100d883a 	mov	r6,r2
   42b50:	180f883a 	mov	r7,r3
   42b54:	8809883a 	mov	r4,r17
   42b58:	e00b883a 	mov	r5,fp
   42b5c:	1027883a 	mov	r19,r2
   42b60:	1825883a 	mov	r18,r3
   42b64:	0045ce40 	call	45ce4 <__subdf3>
   42b68:	b80d883a 	mov	r6,r23
   42b6c:	b00f883a 	mov	r7,r22
   42b70:	1009883a 	mov	r4,r2
   42b74:	180b883a 	mov	r5,r3
   42b78:	0043fa40 	call	43fa4 <__adddf3>
   42b7c:	dac09917 	ldw	r11,612(sp)
   42b80:	a0800015 	stw	r2,0(r20)
   42b84:	a0c00115 	stw	r3,4(r20)
   42b88:	84c00015 	stw	r19,0(r16)
   42b8c:	84800115 	stw	r18,4(r16)
   42b90:	843ffe04 	addi	r16,r16,-8
   42b94:	a53ffe04 	addi	r20,r20,-8
   42b98:	982f883a 	mov	r23,r19
   42b9c:	902d883a 	mov	r22,r18
   42ba0:	da009b17 	ldw	r8,620(sp)
   42ba4:	5c3fe01e 	bne	r11,r16,42b28 <__alt_data_end+0xf4042b28>
   42ba8:	00800044 	movi	r2,1
   42bac:	12008d0e 	bge	r2,r8,42de4 <__kernel_rem_pio2+0xcf4>
   42bb0:	402090fa 	slli	r16,r8,3
   42bb4:	da008e17 	ldw	r8,568(sp)
   42bb8:	8023883a 	mov	r17,r16
   42bbc:	da05883a 	add	r2,sp,r8
   42bc0:	10802804 	addi	r2,r2,160
   42bc4:	15800017 	ldw	r22,0(r2)
   42bc8:	15000117 	ldw	r20,4(r2)
   42bcc:	ac63883a 	add	r17,r21,r17
   42bd0:	843ffe04 	addi	r16,r16,-8
   42bd4:	ac21883a 	add	r16,r21,r16
   42bd8:	8825883a 	mov	r18,r17
   42bdc:	8811883a 	mov	r8,r17
   42be0:	84400017 	ldw	r17,0(r16)
   42be4:	87000117 	ldw	fp,4(r16)
   42be8:	b009883a 	mov	r4,r22
   42bec:	a00b883a 	mov	r5,r20
   42bf0:	880d883a 	mov	r6,r17
   42bf4:	e00f883a 	mov	r7,fp
   42bf8:	da009b15 	stw	r8,620(sp)
   42bfc:	0043fa40 	call	43fa4 <__adddf3>
   42c00:	100d883a 	mov	r6,r2
   42c04:	180f883a 	mov	r7,r3
   42c08:	8809883a 	mov	r4,r17
   42c0c:	e00b883a 	mov	r5,fp
   42c10:	102f883a 	mov	r23,r2
   42c14:	1827883a 	mov	r19,r3
   42c18:	0045ce40 	call	45ce4 <__subdf3>
   42c1c:	b00d883a 	mov	r6,r22
   42c20:	a00f883a 	mov	r7,r20
   42c24:	1009883a 	mov	r4,r2
   42c28:	180b883a 	mov	r5,r3
   42c2c:	0043fa40 	call	43fa4 <__adddf3>
   42c30:	90800015 	stw	r2,0(r18)
   42c34:	90c00115 	stw	r3,4(r18)
   42c38:	85c00015 	stw	r23,0(r16)
   42c3c:	84c00115 	stw	r19,4(r16)
   42c40:	843ffe04 	addi	r16,r16,-8
   42c44:	94bffe04 	addi	r18,r18,-8
   42c48:	b82d883a 	mov	r22,r23
   42c4c:	9829883a 	mov	r20,r19
   42c50:	da009b17 	ldw	r8,620(sp)
   42c54:	ac3fe21e 	bne	r21,r16,42be0 <__alt_data_end+0xf4042be0>
   42c58:	4023883a 	mov	r17,r8
   42c5c:	dc002a04 	addi	r16,sp,168
   42c60:	0005883a 	mov	r2,zero
   42c64:	0007883a 	mov	r3,zero
   42c68:	89800017 	ldw	r6,0(r17)
   42c6c:	89c00117 	ldw	r7,4(r17)
   42c70:	1009883a 	mov	r4,r2
   42c74:	8c7ffe04 	addi	r17,r17,-8
   42c78:	180b883a 	mov	r5,r3
   42c7c:	0043fa40 	call	43fa4 <__adddf3>
   42c80:	847ff91e 	bne	r16,r17,42c68 <__alt_data_end+0xf4042c68>
   42c84:	da008d17 	ldw	r8,564(sp)
   42c88:	40004726 	beq	r8,zero,42da8 <__kernel_rem_pio2+0xcb8>
   42c8c:	d9002b17 	ldw	r4,172(sp)
   42c90:	d9402917 	ldw	r5,164(sp)
   42c94:	d9802a17 	ldw	r6,168(sp)
   42c98:	da008f17 	ldw	r8,572(sp)
   42c9c:	d9c02817 	ldw	r7,160(sp)
   42ca0:	2960003c 	xorhi	r5,r5,32768
   42ca4:	2120003c 	xorhi	r4,r4,32768
   42ca8:	18e0003c 	xorhi	r3,r3,32768
   42cac:	41c00015 	stw	r7,0(r8)
   42cb0:	41400115 	stw	r5,4(r8)
   42cb4:	41800215 	stw	r6,8(r8)
   42cb8:	41000315 	stw	r4,12(r8)
   42cbc:	40800415 	stw	r2,16(r8)
   42cc0:	40c00515 	stw	r3,20(r8)
   42cc4:	003f3706 	br	429a4 <__alt_data_end+0xf40429a4>
   42cc8:	da008e17 	ldw	r8,568(sp)
   42ccc:	d8802804 	addi	r2,sp,160
   42cd0:	dc002604 	addi	r16,sp,152
   42cd4:	1225883a 	add	r18,r2,r8
   42cd8:	0007883a 	mov	r3,zero
   42cdc:	0005883a 	mov	r2,zero
   42ce0:	91800017 	ldw	r6,0(r18)
   42ce4:	91c00117 	ldw	r7,4(r18)
   42ce8:	1009883a 	mov	r4,r2
   42cec:	94bffe04 	addi	r18,r18,-8
   42cf0:	180b883a 	mov	r5,r3
   42cf4:	0043fa40 	call	43fa4 <__adddf3>
   42cf8:	943ff91e 	bne	r18,r16,42ce0 <__alt_data_end+0xf4042ce0>
   42cfc:	da008d17 	ldw	r8,564(sp)
   42d00:	d9002817 	ldw	r4,160(sp)
   42d04:	d9402917 	ldw	r5,164(sp)
   42d08:	40001a26 	beq	r8,zero,42d74 <__kernel_rem_pio2+0xc84>
   42d0c:	da008f17 	ldw	r8,572(sp)
   42d10:	19a0003c 	xorhi	r6,r3,32768
   42d14:	180f883a 	mov	r7,r3
   42d18:	41800115 	stw	r6,4(r8)
   42d1c:	40800015 	stw	r2,0(r8)
   42d20:	100d883a 	mov	r6,r2
   42d24:	0045ce40 	call	45ce4 <__subdf3>
   42d28:	04400c0e 	bge	zero,r17,42d5c <__kernel_rem_pio2+0xc6c>
   42d2c:	dc002a04 	addi	r16,sp,168
   42d30:	04800044 	movi	r18,1
   42d34:	81800017 	ldw	r6,0(r16)
   42d38:	81c00117 	ldw	r7,4(r16)
   42d3c:	1009883a 	mov	r4,r2
   42d40:	180b883a 	mov	r5,r3
   42d44:	94800044 	addi	r18,r18,1
   42d48:	0043fa40 	call	43fa4 <__adddf3>
   42d4c:	84000204 	addi	r16,r16,8
   42d50:	8cbff80e 	bge	r17,r18,42d34 <__alt_data_end+0xf4042d34>
   42d54:	da008d17 	ldw	r8,564(sp)
   42d58:	40004226 	beq	r8,zero,42e64 <__kernel_rem_pio2+0xd74>
   42d5c:	da008f17 	ldw	r8,572(sp)
   42d60:	1009883a 	mov	r4,r2
   42d64:	18a0003c 	xorhi	r2,r3,32768
   42d68:	41000215 	stw	r4,8(r8)
   42d6c:	40800315 	stw	r2,12(r8)
   42d70:	003f0c06 	br	429a4 <__alt_data_end+0xf40429a4>
   42d74:	da008f17 	ldw	r8,572(sp)
   42d78:	100d883a 	mov	r6,r2
   42d7c:	180f883a 	mov	r7,r3
   42d80:	40800015 	stw	r2,0(r8)
   42d84:	40c00115 	stw	r3,4(r8)
   42d88:	0045ce40 	call	45ce4 <__subdf3>
   42d8c:	047fe716 	blt	zero,r17,42d2c <__alt_data_end+0xf4042d2c>
   42d90:	da008f17 	ldw	r8,572(sp)
   42d94:	1009883a 	mov	r4,r2
   42d98:	1805883a 	mov	r2,r3
   42d9c:	41000215 	stw	r4,8(r8)
   42da0:	40800315 	stw	r2,12(r8)
   42da4:	003eff06 	br	429a4 <__alt_data_end+0xf40429a4>
   42da8:	da008f17 	ldw	r8,572(sp)
   42dac:	d9802817 	ldw	r6,160(sp)
   42db0:	d9402a17 	ldw	r5,168(sp)
   42db4:	d9002b17 	ldw	r4,172(sp)
   42db8:	41800015 	stw	r6,0(r8)
   42dbc:	d9802917 	ldw	r6,164(sp)
   42dc0:	41400215 	stw	r5,8(r8)
   42dc4:	41000315 	stw	r4,12(r8)
   42dc8:	41800115 	stw	r6,4(r8)
   42dcc:	40800415 	stw	r2,16(r8)
   42dd0:	40c00515 	stw	r3,20(r8)
   42dd4:	003ef306 	br	429a4 <__alt_data_end+0xf40429a4>
   42dd8:	da00a617 	ldw	r8,664(sp)
   42ddc:	008000c4 	movi	r2,3
   42de0:	40bef01e 	bne	r8,r2,429a4 <__alt_data_end+0xf40429a4>
   42de4:	0005883a 	mov	r2,zero
   42de8:	0007883a 	mov	r3,zero
   42dec:	003fa506 	br	42c84 <__alt_data_end+0xf4042c84>
   42df0:	9485883a 	add	r2,r18,r18
   42df4:	1085883a 	add	r2,r2,r2
   42df8:	d8a1883a 	add	r16,sp,r2
   42dfc:	880b883a 	mov	r5,r17
   42e00:	a809883a 	mov	r4,r21
   42e04:	84007804 	addi	r16,r16,480
   42e08:	00465e00 	call	465e0 <__fixdfsi>
   42e0c:	80800015 	stw	r2,0(r16)
   42e10:	9023883a 	mov	r17,r18
   42e14:	003e7e06 	br	42810 <__alt_data_end+0xf4042810>
   42e18:	a80d883a 	mov	r6,r21
   42e1c:	400f883a 	mov	r7,r8
   42e20:	0009883a 	mov	r4,zero
   42e24:	014ffc34 	movhi	r5,16368
   42e28:	0045ce40 	call	45ce4 <__subdf3>
   42e2c:	102b883a 	mov	r21,r2
   42e30:	1811883a 	mov	r8,r3
   42e34:	04c00084 	movi	r19,2
   42e38:	003dc006 	br	4253c <__alt_data_end+0xf404253c>
   42e3c:	da00a617 	ldw	r8,664(sp)
   42e40:	00800084 	movi	r2,2
   42e44:	123fe416 	blt	r2,r8,42dd8 <__alt_data_end+0xf4042dd8>
   42e48:	02000c16 	blt	zero,r8,42e7c <__kernel_rem_pio2+0xd8c>
   42e4c:	403ed51e 	bne	r8,zero,429a4 <__alt_data_end+0xf40429a4>
   42e50:	0005883a 	mov	r2,zero
   42e54:	0007883a 	mov	r3,zero
   42e58:	003ecc06 	br	4298c <__alt_data_end+0xf404298c>
   42e5c:	d8009215 	stw	zero,584(sp)
   42e60:	003cc106 	br	42168 <__alt_data_end+0xf4042168>
   42e64:	da008f17 	ldw	r8,572(sp)
   42e68:	1009883a 	mov	r4,r2
   42e6c:	1805883a 	mov	r2,r3
   42e70:	41000215 	stw	r4,8(r8)
   42e74:	40800315 	stw	r2,12(r8)
   42e78:	003eca06 	br	429a4 <__alt_data_end+0xf40429a4>
   42e7c:	0005883a 	mov	r2,zero
   42e80:	0007883a 	mov	r3,zero
   42e84:	003f9d06 	br	42cfc <__alt_data_end+0xf4042cfc>

00042e88 <__kernel_sin>:
   42e88:	00a00034 	movhi	r2,32768
   42e8c:	defff404 	addi	sp,sp,-48
   42e90:	10bfffc4 	addi	r2,r2,-1
   42e94:	00cf9034 	movhi	r3,15936
   42e98:	ddc00915 	stw	r23,36(sp)
   42e9c:	dd800815 	stw	r22,32(sp)
   42ea0:	dc400315 	stw	r17,12(sp)
   42ea4:	dc000215 	stw	r16,8(sp)
   42ea8:	dfc00b15 	stw	ra,44(sp)
   42eac:	df000a15 	stw	fp,40(sp)
   42eb0:	dd400715 	stw	r21,28(sp)
   42eb4:	dd000615 	stw	r20,24(sp)
   42eb8:	dcc00515 	stw	r19,20(sp)
   42ebc:	dc800415 	stw	r18,16(sp)
   42ec0:	2884703a 	and	r2,r5,r2
   42ec4:	18ffffc4 	addi	r3,r3,-1
   42ec8:	2821883a 	mov	r16,r5
   42ecc:	2023883a 	mov	r17,r4
   42ed0:	302f883a 	mov	r23,r6
   42ed4:	382d883a 	mov	r22,r7
   42ed8:	18800216 	blt	r3,r2,42ee4 <__kernel_sin+0x5c>
   42edc:	00465e00 	call	465e0 <__fixdfsi>
   42ee0:	10009926 	beq	r2,zero,43148 <__kernel_sin+0x2c0>
   42ee4:	880d883a 	mov	r6,r17
   42ee8:	800f883a 	mov	r7,r16
   42eec:	8809883a 	mov	r4,r17
   42ef0:	800b883a 	mov	r5,r16
   42ef4:	00454780 	call	45478 <__muldf3>
   42ef8:	100d883a 	mov	r6,r2
   42efc:	180f883a 	mov	r7,r3
   42f00:	8809883a 	mov	r4,r17
   42f04:	800b883a 	mov	r5,r16
   42f08:	1027883a 	mov	r19,r2
   42f0c:	1825883a 	mov	r18,r3
   42f10:	00454780 	call	45478 <__muldf3>
   42f14:	0196b434 	movhi	r6,23248
   42f18:	01cf79b4 	movhi	r7,15846
   42f1c:	31b55f04 	addi	r6,r6,-10884
   42f20:	39f64e84 	addi	r7,r7,-9926
   42f24:	9809883a 	mov	r4,r19
   42f28:	900b883a 	mov	r5,r18
   42f2c:	102b883a 	mov	r21,r2
   42f30:	1829883a 	mov	r20,r3
   42f34:	00454780 	call	45478 <__muldf3>
   42f38:	01a28b34 	movhi	r6,35372
   42f3c:	01cf96f4 	movhi	r7,15963
   42f40:	31a73ac4 	addi	r6,r6,-25365
   42f44:	39f97984 	addi	r7,r7,-6682
   42f48:	1009883a 	mov	r4,r2
   42f4c:	180b883a 	mov	r5,r3
   42f50:	0045ce40 	call	45ce4 <__subdf3>
   42f54:	980d883a 	mov	r6,r19
   42f58:	900f883a 	mov	r7,r18
   42f5c:	1009883a 	mov	r4,r2
   42f60:	180b883a 	mov	r5,r3
   42f64:	00454780 	call	45478 <__muldf3>
   42f68:	0195ecb4 	movhi	r6,22450
   42f6c:	01cfb1f4 	movhi	r7,16071
   42f70:	31bf9f44 	addi	r6,r6,-387
   42f74:	39c778c4 	addi	r7,r7,7651
   42f78:	1009883a 	mov	r4,r2
   42f7c:	180b883a 	mov	r5,r3
   42f80:	0043fa40 	call	43fa4 <__adddf3>
   42f84:	980d883a 	mov	r6,r19
   42f88:	900f883a 	mov	r7,r18
   42f8c:	1009883a 	mov	r4,r2
   42f90:	180b883a 	mov	r5,r3
   42f94:	00454780 	call	45478 <__muldf3>
   42f98:	01867074 	movhi	r6,6593
   42f9c:	01cfcab4 	movhi	r7,16170
   42fa0:	31987544 	addi	r6,r6,25045
   42fa4:	39c06804 	addi	r7,r7,416
   42fa8:	1009883a 	mov	r4,r2
   42fac:	180b883a 	mov	r5,r3
   42fb0:	0045ce40 	call	45ce4 <__subdf3>
   42fb4:	980d883a 	mov	r6,r19
   42fb8:	900f883a 	mov	r7,r18
   42fbc:	1009883a 	mov	r4,r2
   42fc0:	180b883a 	mov	r5,r3
   42fc4:	00454780 	call	45478 <__muldf3>
   42fc8:	01844474 	movhi	r6,4369
   42fcc:	01cfe074 	movhi	r7,16257
   42fd0:	31be2984 	addi	r6,r6,-1882
   42fd4:	39c44444 	addi	r7,r7,4369
   42fd8:	1009883a 	mov	r4,r2
   42fdc:	180b883a 	mov	r5,r3
   42fe0:	0043fa40 	call	43fa4 <__adddf3>
   42fe4:	1011883a 	mov	r8,r2
   42fe8:	d8800c17 	ldw	r2,48(sp)
   42fec:	1839883a 	mov	fp,r3
   42ff0:	10003e26 	beq	r2,zero,430ec <__kernel_sin+0x264>
   42ff4:	000d883a 	mov	r6,zero
   42ff8:	01cff834 	movhi	r7,16352
   42ffc:	b809883a 	mov	r4,r23
   43000:	b00b883a 	mov	r5,r22
   43004:	da000015 	stw	r8,0(sp)
   43008:	00454780 	call	45478 <__muldf3>
   4300c:	da000017 	ldw	r8,0(sp)
   43010:	e00f883a 	mov	r7,fp
   43014:	a809883a 	mov	r4,r21
   43018:	400d883a 	mov	r6,r8
   4301c:	a00b883a 	mov	r5,r20
   43020:	d8c00115 	stw	r3,4(sp)
   43024:	d8800015 	stw	r2,0(sp)
   43028:	00454780 	call	45478 <__muldf3>
   4302c:	da800017 	ldw	r10,0(sp)
   43030:	da400117 	ldw	r9,4(sp)
   43034:	100d883a 	mov	r6,r2
   43038:	5009883a 	mov	r4,r10
   4303c:	480b883a 	mov	r5,r9
   43040:	180f883a 	mov	r7,r3
   43044:	0045ce40 	call	45ce4 <__subdf3>
   43048:	980d883a 	mov	r6,r19
   4304c:	900f883a 	mov	r7,r18
   43050:	1009883a 	mov	r4,r2
   43054:	180b883a 	mov	r5,r3
   43058:	00454780 	call	45478 <__muldf3>
   4305c:	b80d883a 	mov	r6,r23
   43060:	b00f883a 	mov	r7,r22
   43064:	1009883a 	mov	r4,r2
   43068:	180b883a 	mov	r5,r3
   4306c:	0045ce40 	call	45ce4 <__subdf3>
   43070:	01955574 	movhi	r6,21845
   43074:	01cff174 	movhi	r7,16325
   43078:	31955244 	addi	r6,r6,21833
   4307c:	39d55544 	addi	r7,r7,21845
   43080:	a809883a 	mov	r4,r21
   43084:	a00b883a 	mov	r5,r20
   43088:	1027883a 	mov	r19,r2
   4308c:	1825883a 	mov	r18,r3
   43090:	00454780 	call	45478 <__muldf3>
   43094:	100d883a 	mov	r6,r2
   43098:	180f883a 	mov	r7,r3
   4309c:	9809883a 	mov	r4,r19
   430a0:	900b883a 	mov	r5,r18
   430a4:	0043fa40 	call	43fa4 <__adddf3>
   430a8:	100d883a 	mov	r6,r2
   430ac:	180f883a 	mov	r7,r3
   430b0:	8809883a 	mov	r4,r17
   430b4:	800b883a 	mov	r5,r16
   430b8:	0045ce40 	call	45ce4 <__subdf3>
   430bc:	dfc00b17 	ldw	ra,44(sp)
   430c0:	df000a17 	ldw	fp,40(sp)
   430c4:	ddc00917 	ldw	r23,36(sp)
   430c8:	dd800817 	ldw	r22,32(sp)
   430cc:	dd400717 	ldw	r21,28(sp)
   430d0:	dd000617 	ldw	r20,24(sp)
   430d4:	dcc00517 	ldw	r19,20(sp)
   430d8:	dc800417 	ldw	r18,16(sp)
   430dc:	dc400317 	ldw	r17,12(sp)
   430e0:	dc000217 	ldw	r16,8(sp)
   430e4:	dec00c04 	addi	sp,sp,48
   430e8:	f800283a 	ret
   430ec:	400d883a 	mov	r6,r8
   430f0:	9809883a 	mov	r4,r19
   430f4:	900b883a 	mov	r5,r18
   430f8:	180f883a 	mov	r7,r3
   430fc:	00454780 	call	45478 <__muldf3>
   43100:	01955574 	movhi	r6,21845
   43104:	01cff174 	movhi	r7,16325
   43108:	31955244 	addi	r6,r6,21833
   4310c:	39d55544 	addi	r7,r7,21845
   43110:	1009883a 	mov	r4,r2
   43114:	180b883a 	mov	r5,r3
   43118:	0045ce40 	call	45ce4 <__subdf3>
   4311c:	a80d883a 	mov	r6,r21
   43120:	a00f883a 	mov	r7,r20
   43124:	1009883a 	mov	r4,r2
   43128:	180b883a 	mov	r5,r3
   4312c:	00454780 	call	45478 <__muldf3>
   43130:	880d883a 	mov	r6,r17
   43134:	800f883a 	mov	r7,r16
   43138:	1009883a 	mov	r4,r2
   4313c:	180b883a 	mov	r5,r3
   43140:	0043fa40 	call	43fa4 <__adddf3>
   43144:	003fdd06 	br	430bc <__alt_data_end+0xf40430bc>
   43148:	8805883a 	mov	r2,r17
   4314c:	8007883a 	mov	r3,r16
   43150:	003fda06 	br	430bc <__alt_data_end+0xf40430bc>

00043154 <fabs>:
   43154:	00e00034 	movhi	r3,32768
   43158:	18ffffc4 	addi	r3,r3,-1
   4315c:	2005883a 	mov	r2,r4
   43160:	28c6703a 	and	r3,r5,r3
   43164:	f800283a 	ret

00043168 <finite>:
   43168:	00a00034 	movhi	r2,32768
   4316c:	10bfffc4 	addi	r2,r2,-1
   43170:	288a703a 	and	r5,r5,r2
   43174:	00e00434 	movhi	r3,32784
   43178:	28c5883a 	add	r2,r5,r3
   4317c:	1004d7fa 	srli	r2,r2,31
   43180:	f800283a 	ret

00043184 <floor>:
   43184:	2811d53a 	srai	r8,r5,20
   43188:	defffa04 	addi	sp,sp,-24
   4318c:	dcc00315 	stw	r19,12(sp)
   43190:	4201ffcc 	andi	r8,r8,2047
   43194:	dc800215 	stw	r18,8(sp)
   43198:	dc400115 	stw	r17,4(sp)
   4319c:	dc000015 	stw	r16,0(sp)
   431a0:	dfc00515 	stw	ra,20(sp)
   431a4:	dd000415 	stw	r20,16(sp)
   431a8:	44bf0044 	addi	r18,r8,-1023
   431ac:	018004c4 	movi	r6,19
   431b0:	2821883a 	mov	r16,r5
   431b4:	2005883a 	mov	r2,r4
   431b8:	280f883a 	mov	r7,r5
   431bc:	2827883a 	mov	r19,r5
   431c0:	2023883a 	mov	r17,r4
   431c4:	34801916 	blt	r6,r18,4322c <floor+0xa8>
   431c8:	90003c16 	blt	r18,zero,432bc <floor+0x138>
   431cc:	05000434 	movhi	r20,16
   431d0:	a53fffc4 	addi	r20,r20,-1
   431d4:	a4a9d83a 	sra	r20,r20,r18
   431d8:	2d0c703a 	and	r6,r5,r20
   431dc:	310cb03a 	or	r6,r6,r4
   431e0:	30001626 	beq	r6,zero,4323c <floor+0xb8>
   431e4:	01a20034 	movhi	r6,34816
   431e8:	01df8e34 	movhi	r7,32312
   431ec:	319d6704 	addi	r6,r6,30108
   431f0:	39f90f04 	addi	r7,r7,-7108
   431f4:	0043fa40 	call	43fa4 <__adddf3>
   431f8:	000d883a 	mov	r6,zero
   431fc:	000f883a 	mov	r7,zero
   43200:	1009883a 	mov	r4,r2
   43204:	180b883a 	mov	r5,r3
   43208:	00452a80 	call	452a8 <__gedf2>
   4320c:	0080040e 	bge	zero,r2,43220 <floor+0x9c>
   43210:	80003c16 	blt	r16,zero,43304 <floor+0x180>
   43214:	0520303a 	nor	r16,zero,r20
   43218:	84e0703a 	and	r16,r16,r19
   4321c:	0023883a 	mov	r17,zero
   43220:	8805883a 	mov	r2,r17
   43224:	8007883a 	mov	r3,r16
   43228:	00000506 	br	43240 <floor+0xbc>
   4322c:	01800cc4 	movi	r6,51
   43230:	34800b0e 	bge	r6,r18,43260 <floor+0xdc>
   43234:	01810004 	movi	r6,1024
   43238:	91802f26 	beq	r18,r6,432f8 <floor+0x174>
   4323c:	3807883a 	mov	r3,r7
   43240:	dfc00517 	ldw	ra,20(sp)
   43244:	dd000417 	ldw	r20,16(sp)
   43248:	dcc00317 	ldw	r19,12(sp)
   4324c:	dc800217 	ldw	r18,8(sp)
   43250:	dc400117 	ldw	r17,4(sp)
   43254:	dc000017 	ldw	r16,0(sp)
   43258:	dec00604 	addi	sp,sp,24
   4325c:	f800283a 	ret
   43260:	423efb44 	addi	r8,r8,-1043
   43264:	053fffc4 	movi	r20,-1
   43268:	a228d83a 	srl	r20,r20,r8
   4326c:	250c703a 	and	r6,r4,r20
   43270:	303ff226 	beq	r6,zero,4323c <__alt_data_end+0xf404323c>
   43274:	01a20034 	movhi	r6,34816
   43278:	01df8e34 	movhi	r7,32312
   4327c:	319d6704 	addi	r6,r6,30108
   43280:	39f90f04 	addi	r7,r7,-7108
   43284:	0043fa40 	call	43fa4 <__adddf3>
   43288:	000d883a 	mov	r6,zero
   4328c:	000f883a 	mov	r7,zero
   43290:	1009883a 	mov	r4,r2
   43294:	180b883a 	mov	r5,r3
   43298:	00452a80 	call	452a8 <__gedf2>
   4329c:	00bfe00e 	bge	zero,r2,43220 <__alt_data_end+0xf4043220>
   432a0:	80001c16 	blt	r16,zero,43314 <floor+0x190>
   432a4:	0510303a 	nor	r8,zero,r20
   432a8:	9821883a 	mov	r16,r19
   432ac:	8a22703a 	and	r17,r17,r8
   432b0:	8805883a 	mov	r2,r17
   432b4:	8007883a 	mov	r3,r16
   432b8:	003fe106 	br	43240 <__alt_data_end+0xf4043240>
   432bc:	01a20034 	movhi	r6,34816
   432c0:	01df8e34 	movhi	r7,32312
   432c4:	319d6704 	addi	r6,r6,30108
   432c8:	39f90f04 	addi	r7,r7,-7108
   432cc:	0043fa40 	call	43fa4 <__adddf3>
   432d0:	000d883a 	mov	r6,zero
   432d4:	000f883a 	mov	r7,zero
   432d8:	1009883a 	mov	r4,r2
   432dc:	180b883a 	mov	r5,r3
   432e0:	00452a80 	call	452a8 <__gedf2>
   432e4:	00bfce0e 	bge	zero,r2,43220 <__alt_data_end+0xf4043220>
   432e8:	80001516 	blt	r16,zero,43340 <floor+0x1bc>
   432ec:	0023883a 	mov	r17,zero
   432f0:	0021883a 	mov	r16,zero
   432f4:	003fca06 	br	43220 <__alt_data_end+0xf4043220>
   432f8:	200d883a 	mov	r6,r4
   432fc:	0043fa40 	call	43fa4 <__adddf3>
   43300:	003fcf06 	br	43240 <__alt_data_end+0xf4043240>
   43304:	00800434 	movhi	r2,16
   43308:	14a5d83a 	sra	r18,r2,r18
   4330c:	84a7883a 	add	r19,r16,r18
   43310:	003fc006 	br	43214 <__alt_data_end+0xf4043214>
   43314:	00800504 	movi	r2,20
   43318:	90801326 	beq	r18,r2,43368 <floor+0x1e4>
   4331c:	00800d04 	movi	r2,52
   43320:	14a5c83a 	sub	r18,r2,r18
   43324:	00800044 	movi	r2,1
   43328:	1484983a 	sll	r2,r2,r18
   4332c:	1445883a 	add	r2,r2,r17
   43330:	14400b2e 	bgeu	r2,r17,43360 <floor+0x1dc>
   43334:	84c00044 	addi	r19,r16,1
   43338:	1023883a 	mov	r17,r2
   4333c:	003fd906 	br	432a4 <__alt_data_end+0xf40432a4>
   43340:	00a00034 	movhi	r2,32768
   43344:	10bfffc4 	addi	r2,r2,-1
   43348:	8084703a 	and	r2,r16,r2
   4334c:	1462b03a 	or	r17,r2,r17
   43350:	883fb326 	beq	r17,zero,43220 <__alt_data_end+0xf4043220>
   43354:	0023883a 	mov	r17,zero
   43358:	042ffc34 	movhi	r16,49136
   4335c:	003fb006 	br	43220 <__alt_data_end+0xf4043220>
   43360:	1023883a 	mov	r17,r2
   43364:	003fcf06 	br	432a4 <__alt_data_end+0xf40432a4>
   43368:	84c00044 	addi	r19,r16,1
   4336c:	003fcd06 	br	432a4 <__alt_data_end+0xf40432a4>

00043370 <matherr>:
   43370:	0005883a 	mov	r2,zero
   43374:	f800283a 	ret

00043378 <scalbn>:
   43378:	2a1ffc2c 	andhi	r8,r5,32752
   4337c:	4011d53a 	srai	r8,r8,20
   43380:	defffe04 	addi	sp,sp,-8
   43384:	dc000015 	stw	r16,0(sp)
   43388:	dfc00115 	stw	ra,4(sp)
   4338c:	280f883a 	mov	r7,r5
   43390:	2015883a 	mov	r10,r4
   43394:	3021883a 	mov	r16,r6
   43398:	40001e1e 	bne	r8,zero,43414 <scalbn+0x9c>
   4339c:	00a00034 	movhi	r2,32768
   433a0:	10bfffc4 	addi	r2,r2,-1
   433a4:	2884703a 	and	r2,r5,r2
   433a8:	1104b03a 	or	r2,r2,r4
   433ac:	10002226 	beq	r2,zero,43438 <scalbn+0xc0>
   433b0:	01d0d434 	movhi	r7,17232
   433b4:	000d883a 	mov	r6,zero
   433b8:	00454780 	call	45478 <__muldf3>
   433bc:	013ffff4 	movhi	r4,65535
   433c0:	210f2c04 	addi	r4,r4,15536
   433c4:	1015883a 	mov	r10,r2
   433c8:	180f883a 	mov	r7,r3
   433cc:	81002a16 	blt	r16,r4,43478 <scalbn+0x100>
   433d0:	191ffc2c 	andhi	r4,r3,32752
   433d4:	2009d53a 	srai	r4,r4,20
   433d8:	223ff284 	addi	r8,r4,-54
   433dc:	8211883a 	add	r8,r16,r8
   433e0:	0081ff84 	movi	r2,2046
   433e4:	12002f16 	blt	r2,r8,434a4 <scalbn+0x12c>
   433e8:	0200190e 	bge	zero,r8,43450 <scalbn+0xd8>
   433ec:	4010953a 	slli	r8,r8,20
   433f0:	01600434 	movhi	r5,32784
   433f4:	297fffc4 	addi	r5,r5,-1
   433f8:	194e703a 	and	r7,r3,r5
   433fc:	5005883a 	mov	r2,r10
   43400:	3a06b03a 	or	r3,r7,r8
   43404:	dfc00117 	ldw	ra,4(sp)
   43408:	dc000017 	ldw	r16,0(sp)
   4340c:	dec00204 	addi	sp,sp,8
   43410:	f800283a 	ret
   43414:	0081ffc4 	movi	r2,2047
   43418:	2807883a 	mov	r3,r5
   4341c:	40bfef1e 	bne	r8,r2,433dc <__alt_data_end+0xf40433dc>
   43420:	200d883a 	mov	r6,r4
   43424:	0043fa40 	call	43fa4 <__adddf3>
   43428:	dfc00117 	ldw	ra,4(sp)
   4342c:	dc000017 	ldw	r16,0(sp)
   43430:	dec00204 	addi	sp,sp,8
   43434:	f800283a 	ret
   43438:	2005883a 	mov	r2,r4
   4343c:	2807883a 	mov	r3,r5
   43440:	dfc00117 	ldw	ra,4(sp)
   43444:	dc000017 	ldw	r16,0(sp)
   43448:	dec00204 	addi	sp,sp,8
   4344c:	f800283a 	ret
   43450:	00bff2c4 	movi	r2,-53
   43454:	4080240e 	bge	r8,r2,434e8 <scalbn+0x170>
   43458:	00b0d414 	movui	r2,50000
   4345c:	14001116 	blt	r2,r16,434a4 <scalbn+0x12c>
   43460:	0130be74 	movhi	r4,49913
   43464:	01406974 	movhi	r5,421
   43468:	213cd644 	addi	r4,r4,-3239
   4346c:	295b87c4 	addi	r5,r5,28191
   43470:	500d883a 	mov	r6,r10
   43474:	00435140 	call	43514 <copysign>
   43478:	01b0be74 	movhi	r6,49913
   4347c:	01c06974 	movhi	r7,421
   43480:	31bcd644 	addi	r6,r6,-3239
   43484:	39db87c4 	addi	r7,r7,28191
   43488:	1009883a 	mov	r4,r2
   4348c:	180b883a 	mov	r5,r3
   43490:	00454780 	call	45478 <__muldf3>
   43494:	dfc00117 	ldw	ra,4(sp)
   43498:	dc000017 	ldw	r16,0(sp)
   4349c:	dec00204 	addi	sp,sp,8
   434a0:	f800283a 	ret
   434a4:	01220034 	movhi	r4,34816
   434a8:	015f8e34 	movhi	r5,32312
   434ac:	500d883a 	mov	r6,r10
   434b0:	211d6704 	addi	r4,r4,30108
   434b4:	29790f04 	addi	r5,r5,-7108
   434b8:	00435140 	call	43514 <copysign>
   434bc:	01a20034 	movhi	r6,34816
   434c0:	01df8e34 	movhi	r7,32312
   434c4:	319d6704 	addi	r6,r6,30108
   434c8:	39f90f04 	addi	r7,r7,-7108
   434cc:	1009883a 	mov	r4,r2
   434d0:	180b883a 	mov	r5,r3
   434d4:	00454780 	call	45478 <__muldf3>
   434d8:	dfc00117 	ldw	ra,4(sp)
   434dc:	dc000017 	ldw	r16,0(sp)
   434e0:	dec00204 	addi	sp,sp,8
   434e4:	f800283a 	ret
   434e8:	42000d84 	addi	r8,r8,54
   434ec:	4012953a 	slli	r9,r8,20
   434f0:	01e00434 	movhi	r7,32784
   434f4:	39ffffc4 	addi	r7,r7,-1
   434f8:	19ca703a 	and	r5,r3,r7
   434fc:	000d883a 	mov	r6,zero
   43500:	01cf2434 	movhi	r7,15504
   43504:	5009883a 	mov	r4,r10
   43508:	494ab03a 	or	r5,r9,r5
   4350c:	00454780 	call	45478 <__muldf3>
   43510:	003fbc06 	br	43404 <__alt_data_end+0xf4043404>

00043514 <copysign>:
   43514:	2005883a 	mov	r2,r4
   43518:	01200034 	movhi	r4,32768
   4351c:	213fffc4 	addi	r4,r4,-1
   43520:	38e0002c 	andhi	r3,r7,32768
   43524:	290a703a 	and	r5,r5,r4
   43528:	28c6b03a 	or	r3,r5,r3
   4352c:	f800283a 	ret

00043530 <__muldc3>:
   43530:	deffdd04 	addi	sp,sp,-140
   43534:	ddc01f15 	stw	r23,124(sp)
   43538:	dc801a15 	stw	r18,104(sp)
   4353c:	ddc02417 	ldw	r23,144(sp)
   43540:	dc802517 	ldw	r18,148(sp)
   43544:	dd801e15 	stw	r22,120(sp)
   43548:	dcc01b15 	stw	r19,108(sp)
   4354c:	282d883a 	mov	r22,r5
   43550:	3027883a 	mov	r19,r6
   43554:	2011883a 	mov	r8,r4
   43558:	d9c00815 	stw	r7,32(sp)
   4355c:	d9c02215 	stw	r7,136(sp)
   43560:	b80d883a 	mov	r6,r23
   43564:	900f883a 	mov	r7,r18
   43568:	980b883a 	mov	r5,r19
   4356c:	b009883a 	mov	r4,r22
   43570:	da001715 	stw	r8,92(sp)
   43574:	dfc02115 	stw	ra,132(sp)
   43578:	df002015 	stw	fp,128(sp)
   4357c:	dd401d15 	stw	r21,116(sp)
   43580:	df002617 	ldw	fp,152(sp)
   43584:	dd402717 	ldw	r21,156(sp)
   43588:	dd001c15 	stw	r20,112(sp)
   4358c:	dc401915 	stw	r17,100(sp)
   43590:	dd002317 	ldw	r20,140(sp)
   43594:	dc001815 	stw	r16,96(sp)
   43598:	00454780 	call	45478 <__muldf3>
   4359c:	d9000817 	ldw	r4,32(sp)
   435a0:	e00d883a 	mov	r6,fp
   435a4:	a80f883a 	mov	r7,r21
   435a8:	a00b883a 	mov	r5,r20
   435ac:	d8800615 	stw	r2,24(sp)
   435b0:	d8c00715 	stw	r3,28(sp)
   435b4:	00454780 	call	45478 <__muldf3>
   435b8:	e00d883a 	mov	r6,fp
   435bc:	a80f883a 	mov	r7,r21
   435c0:	b009883a 	mov	r4,r22
   435c4:	980b883a 	mov	r5,r19
   435c8:	d8800415 	stw	r2,16(sp)
   435cc:	d8c00515 	stw	r3,20(sp)
   435d0:	00454780 	call	45478 <__muldf3>
   435d4:	d9800817 	ldw	r6,32(sp)
   435d8:	a00f883a 	mov	r7,r20
   435dc:	b809883a 	mov	r4,r23
   435e0:	900b883a 	mov	r5,r18
   435e4:	d8800215 	stw	r2,8(sp)
   435e8:	d8c00315 	stw	r3,12(sp)
   435ec:	00454780 	call	45478 <__muldf3>
   435f0:	d9000617 	ldw	r4,24(sp)
   435f4:	d8800015 	stw	r2,0(sp)
   435f8:	d9000b15 	stw	r4,44(sp)
   435fc:	d9000717 	ldw	r4,28(sp)
   43600:	d8c00115 	stw	r3,4(sp)
   43604:	d9000c15 	stw	r4,48(sp)
   43608:	d9000417 	ldw	r4,16(sp)
   4360c:	d9400c17 	ldw	r5,48(sp)
   43610:	d9000d15 	stw	r4,52(sp)
   43614:	d9000517 	ldw	r4,20(sp)
   43618:	d9800d17 	ldw	r6,52(sp)
   4361c:	d9000e15 	stw	r4,56(sp)
   43620:	d9c00e17 	ldw	r7,56(sp)
   43624:	d9000b17 	ldw	r4,44(sp)
   43628:	0045ce40 	call	45ce4 <__subdf3>
   4362c:	d9000317 	ldw	r4,12(sp)
   43630:	1021883a 	mov	r16,r2
   43634:	d8800217 	ldw	r2,8(sp)
   43638:	d9001015 	stw	r4,64(sp)
   4363c:	d9000117 	ldw	r4,4(sp)
   43640:	d8800f15 	stw	r2,60(sp)
   43644:	d8800017 	ldw	r2,0(sp)
   43648:	d9001215 	stw	r4,72(sp)
   4364c:	d9c01217 	ldw	r7,72(sp)
   43650:	d9000f17 	ldw	r4,60(sp)
   43654:	d9401017 	ldw	r5,64(sp)
   43658:	100d883a 	mov	r6,r2
   4365c:	1823883a 	mov	r17,r3
   43660:	d8801115 	stw	r2,68(sp)
   43664:	0043fa40 	call	43fa4 <__adddf3>
   43668:	800d883a 	mov	r6,r16
   4366c:	880f883a 	mov	r7,r17
   43670:	8009883a 	mov	r4,r16
   43674:	880b883a 	mov	r5,r17
   43678:	d8800915 	stw	r2,36(sp)
   4367c:	d8c00a15 	stw	r3,40(sp)
   43680:	00452200 	call	45220 <__eqdf2>
   43684:	da001717 	ldw	r8,92(sp)
   43688:	1000131e 	bne	r2,zero,436d8 <__muldc3+0x1a8>
   4368c:	d8800917 	ldw	r2,36(sp)
   43690:	44000015 	stw	r16,0(r8)
   43694:	44400115 	stw	r17,4(r8)
   43698:	40800215 	stw	r2,8(r8)
   4369c:	d9000a17 	ldw	r4,40(sp)
   436a0:	4005883a 	mov	r2,r8
   436a4:	41000315 	stw	r4,12(r8)
   436a8:	dfc02117 	ldw	ra,132(sp)
   436ac:	df002017 	ldw	fp,128(sp)
   436b0:	ddc01f17 	ldw	r23,124(sp)
   436b4:	dd801e17 	ldw	r22,120(sp)
   436b8:	dd401d17 	ldw	r21,116(sp)
   436bc:	dd001c17 	ldw	r20,112(sp)
   436c0:	dcc01b17 	ldw	r19,108(sp)
   436c4:	dc801a17 	ldw	r18,104(sp)
   436c8:	dc401917 	ldw	r17,100(sp)
   436cc:	dc001817 	ldw	r16,96(sp)
   436d0:	dec02304 	addi	sp,sp,140
   436d4:	f800283a 	ret
   436d8:	d9800917 	ldw	r6,36(sp)
   436dc:	d9c00a17 	ldw	r7,40(sp)
   436e0:	3009883a 	mov	r4,r6
   436e4:	380b883a 	mov	r5,r7
   436e8:	00452200 	call	45220 <__eqdf2>
   436ec:	da001717 	ldw	r8,92(sp)
   436f0:	103fe626 	beq	r2,zero,4368c <__alt_data_end+0xf404368c>
   436f4:	b00d883a 	mov	r6,r22
   436f8:	980f883a 	mov	r7,r19
   436fc:	b009883a 	mov	r4,r22
   43700:	980b883a 	mov	r5,r19
   43704:	0045ce40 	call	45ce4 <__subdf3>
   43708:	b00d883a 	mov	r6,r22
   4370c:	980f883a 	mov	r7,r19
   43710:	b009883a 	mov	r4,r22
   43714:	980b883a 	mov	r5,r19
   43718:	d8c01615 	stw	r3,88(sp)
   4371c:	d8801315 	stw	r2,76(sp)
   43720:	00452200 	call	45220 <__eqdf2>
   43724:	d8c01617 	ldw	r3,88(sp)
   43728:	da001717 	ldw	r8,92(sp)
   4372c:	1000d11e 	bne	r2,zero,43a74 <__muldc3+0x544>
   43730:	d9801317 	ldw	r6,76(sp)
   43734:	180f883a 	mov	r7,r3
   43738:	180b883a 	mov	r5,r3
   4373c:	3009883a 	mov	r4,r6
   43740:	00452200 	call	45220 <__eqdf2>
   43744:	da001717 	ldw	r8,92(sp)
   43748:	1000ca26 	beq	r2,zero,43a74 <__muldc3+0x544>
   4374c:	008ffc34 	movhi	r2,16368
   43750:	9800010e 	bge	r19,zero,43758 <__muldc3+0x228>
   43754:	00affc34 	movhi	r2,49136
   43758:	d9800817 	ldw	r6,32(sp)
   4375c:	a00f883a 	mov	r7,r20
   43760:	a00b883a 	mov	r5,r20
   43764:	3009883a 	mov	r4,r6
   43768:	da001715 	stw	r8,92(sp)
   4376c:	1027883a 	mov	r19,r2
   43770:	0045ce40 	call	45ce4 <__subdf3>
   43774:	d9800817 	ldw	r6,32(sp)
   43778:	a00f883a 	mov	r7,r20
   4377c:	a00b883a 	mov	r5,r20
   43780:	3009883a 	mov	r4,r6
   43784:	d8c01615 	stw	r3,88(sp)
   43788:	d8801515 	stw	r2,84(sp)
   4378c:	00452200 	call	45220 <__eqdf2>
   43790:	002d883a 	mov	r22,zero
   43794:	d8c01617 	ldw	r3,88(sp)
   43798:	da001717 	ldw	r8,92(sp)
   4379c:	da401517 	ldw	r9,84(sp)
   437a0:	1001591e 	bne	r2,zero,43d08 <__muldc3+0x7d8>
   437a4:	480d883a 	mov	r6,r9
   437a8:	180f883a 	mov	r7,r3
   437ac:	4809883a 	mov	r4,r9
   437b0:	180b883a 	mov	r5,r3
   437b4:	00452200 	call	45220 <__eqdf2>
   437b8:	da001717 	ldw	r8,92(sp)
   437bc:	10015226 	beq	r2,zero,43d08 <__muldc3+0x7d8>
   437c0:	008ffc34 	movhi	r2,16368
   437c4:	a520002c 	andhi	r20,r20,32768
   437c8:	b80d883a 	mov	r6,r23
   437cc:	900f883a 	mov	r7,r18
   437d0:	b809883a 	mov	r4,r23
   437d4:	900b883a 	mov	r5,r18
   437d8:	da001715 	stw	r8,92(sp)
   437dc:	d8000815 	stw	zero,32(sp)
   437e0:	1528b03a 	or	r20,r2,r20
   437e4:	00452200 	call	45220 <__eqdf2>
   437e8:	da001717 	ldw	r8,92(sp)
   437ec:	1001701e 	bne	r2,zero,43db0 <__muldc3+0x880>
   437f0:	e00d883a 	mov	r6,fp
   437f4:	a80f883a 	mov	r7,r21
   437f8:	e009883a 	mov	r4,fp
   437fc:	a80b883a 	mov	r5,r21
   43800:	da001715 	stw	r8,92(sp)
   43804:	00452200 	call	45220 <__eqdf2>
   43808:	da001717 	ldw	r8,92(sp)
   4380c:	1001601e 	bne	r2,zero,43d90 <__muldc3+0x860>
   43810:	01000044 	movi	r4,1
   43814:	d9001305 	stb	r4,76(sp)
   43818:	b80d883a 	mov	r6,r23
   4381c:	900f883a 	mov	r7,r18
   43820:	b809883a 	mov	r4,r23
   43824:	900b883a 	mov	r5,r18
   43828:	da001715 	stw	r8,92(sp)
   4382c:	0045ce40 	call	45ce4 <__subdf3>
   43830:	b80d883a 	mov	r6,r23
   43834:	900f883a 	mov	r7,r18
   43838:	b809883a 	mov	r4,r23
   4383c:	900b883a 	mov	r5,r18
   43840:	d8c01615 	stw	r3,88(sp)
   43844:	d8801415 	stw	r2,80(sp)
   43848:	00452200 	call	45220 <__eqdf2>
   4384c:	d8c01617 	ldw	r3,88(sp)
   43850:	da001717 	ldw	r8,92(sp)
   43854:	1000691e 	bne	r2,zero,439fc <__muldc3+0x4cc>
   43858:	d9801417 	ldw	r6,80(sp)
   4385c:	180f883a 	mov	r7,r3
   43860:	180b883a 	mov	r5,r3
   43864:	3009883a 	mov	r4,r6
   43868:	00452200 	call	45220 <__eqdf2>
   4386c:	da001717 	ldw	r8,92(sp)
   43870:	10006226 	beq	r2,zero,439fc <__muldc3+0x4cc>
   43874:	008ffc34 	movhi	r2,16368
   43878:	9000010e 	bge	r18,zero,43880 <__muldc3+0x350>
   4387c:	00affc34 	movhi	r2,49136
   43880:	e00d883a 	mov	r6,fp
   43884:	a80f883a 	mov	r7,r21
   43888:	e009883a 	mov	r4,fp
   4388c:	a80b883a 	mov	r5,r21
   43890:	da001715 	stw	r8,92(sp)
   43894:	1025883a 	mov	r18,r2
   43898:	0045ce40 	call	45ce4 <__subdf3>
   4389c:	e00d883a 	mov	r6,fp
   438a0:	a80f883a 	mov	r7,r21
   438a4:	e009883a 	mov	r4,fp
   438a8:	a80b883a 	mov	r5,r21
   438ac:	1023883a 	mov	r17,r2
   438b0:	1821883a 	mov	r16,r3
   438b4:	00452200 	call	45220 <__eqdf2>
   438b8:	002f883a 	mov	r23,zero
   438bc:	da001717 	ldw	r8,92(sp)
   438c0:	1001131e 	bne	r2,zero,43d10 <__muldc3+0x7e0>
   438c4:	880d883a 	mov	r6,r17
   438c8:	800f883a 	mov	r7,r16
   438cc:	8809883a 	mov	r4,r17
   438d0:	800b883a 	mov	r5,r16
   438d4:	00452200 	call	45220 <__eqdf2>
   438d8:	da001717 	ldw	r8,92(sp)
   438dc:	10010c26 	beq	r2,zero,43d10 <__muldc3+0x7e0>
   438e0:	008ffc34 	movhi	r2,16368
   438e4:	ad60002c 	andhi	r21,r21,32768
   438e8:	b00d883a 	mov	r6,r22
   438ec:	980f883a 	mov	r7,r19
   438f0:	b009883a 	mov	r4,r22
   438f4:	980b883a 	mov	r5,r19
   438f8:	da001715 	stw	r8,92(sp)
   438fc:	156ab03a 	or	r21,r2,r21
   43900:	00452200 	call	45220 <__eqdf2>
   43904:	0039883a 	mov	fp,zero
   43908:	da001717 	ldw	r8,92(sp)
   4390c:	1001021e 	bne	r2,zero,43d18 <__muldc3+0x7e8>
   43910:	d9800817 	ldw	r6,32(sp)
   43914:	a00f883a 	mov	r7,r20
   43918:	a00b883a 	mov	r5,r20
   4391c:	3009883a 	mov	r4,r6
   43920:	da001715 	stw	r8,92(sp)
   43924:	00452200 	call	45220 <__eqdf2>
   43928:	da001717 	ldw	r8,92(sp)
   4392c:	1001061e 	bne	r2,zero,43d48 <__muldc3+0x818>
   43930:	980b883a 	mov	r5,r19
   43934:	b80d883a 	mov	r6,r23
   43938:	900f883a 	mov	r7,r18
   4393c:	b009883a 	mov	r4,r22
   43940:	da001715 	stw	r8,92(sp)
   43944:	00454780 	call	45478 <__muldf3>
   43948:	d9000817 	ldw	r4,32(sp)
   4394c:	a80f883a 	mov	r7,r21
   43950:	e00d883a 	mov	r6,fp
   43954:	a00b883a 	mov	r5,r20
   43958:	1023883a 	mov	r17,r2
   4395c:	1821883a 	mov	r16,r3
   43960:	00454780 	call	45478 <__muldf3>
   43964:	8809883a 	mov	r4,r17
   43968:	800b883a 	mov	r5,r16
   4396c:	100d883a 	mov	r6,r2
   43970:	180f883a 	mov	r7,r3
   43974:	0045ce40 	call	45ce4 <__subdf3>
   43978:	000d883a 	mov	r6,zero
   4397c:	01dffc34 	movhi	r7,32752
   43980:	1009883a 	mov	r4,r2
   43984:	180b883a 	mov	r5,r3
   43988:	00454780 	call	45478 <__muldf3>
   4398c:	a80f883a 	mov	r7,r21
   43990:	980b883a 	mov	r5,r19
   43994:	e00d883a 	mov	r6,fp
   43998:	b009883a 	mov	r4,r22
   4399c:	1021883a 	mov	r16,r2
   439a0:	1823883a 	mov	r17,r3
   439a4:	00454780 	call	45478 <__muldf3>
   439a8:	d9000817 	ldw	r4,32(sp)
   439ac:	b80d883a 	mov	r6,r23
   439b0:	900f883a 	mov	r7,r18
   439b4:	a00b883a 	mov	r5,r20
   439b8:	102b883a 	mov	r21,r2
   439bc:	1827883a 	mov	r19,r3
   439c0:	00454780 	call	45478 <__muldf3>
   439c4:	100d883a 	mov	r6,r2
   439c8:	180f883a 	mov	r7,r3
   439cc:	a809883a 	mov	r4,r21
   439d0:	980b883a 	mov	r5,r19
   439d4:	0043fa40 	call	43fa4 <__adddf3>
   439d8:	000d883a 	mov	r6,zero
   439dc:	01dffc34 	movhi	r7,32752
   439e0:	1009883a 	mov	r4,r2
   439e4:	180b883a 	mov	r5,r3
   439e8:	00454780 	call	45478 <__muldf3>
   439ec:	d8800915 	stw	r2,36(sp)
   439f0:	d8c00a15 	stw	r3,40(sp)
   439f4:	da001717 	ldw	r8,92(sp)
   439f8:	003f2406 	br	4368c <__alt_data_end+0xf404368c>
   439fc:	e00d883a 	mov	r6,fp
   43a00:	a80f883a 	mov	r7,r21
   43a04:	e009883a 	mov	r4,fp
   43a08:	a80b883a 	mov	r5,r21
   43a0c:	da001715 	stw	r8,92(sp)
   43a10:	0045ce40 	call	45ce4 <__subdf3>
   43a14:	e00d883a 	mov	r6,fp
   43a18:	a80f883a 	mov	r7,r21
   43a1c:	e009883a 	mov	r4,fp
   43a20:	a80b883a 	mov	r5,r21
   43a24:	d8c01615 	stw	r3,88(sp)
   43a28:	d8801415 	stw	r2,80(sp)
   43a2c:	00452200 	call	45220 <__eqdf2>
   43a30:	d8c01617 	ldw	r3,88(sp)
   43a34:	da001717 	ldw	r8,92(sp)
   43a38:	10002e1e 	bne	r2,zero,43af4 <__muldc3+0x5c4>
   43a3c:	d9801417 	ldw	r6,80(sp)
   43a40:	180f883a 	mov	r7,r3
   43a44:	180b883a 	mov	r5,r3
   43a48:	3009883a 	mov	r4,r6
   43a4c:	00452200 	call	45220 <__eqdf2>
   43a50:	da001717 	ldw	r8,92(sp)
   43a54:	10002726 	beq	r2,zero,43af4 <__muldc3+0x5c4>
   43a58:	0005883a 	mov	r2,zero
   43a5c:	9000010e 	bge	r18,zero,43a64 <__muldc3+0x534>
   43a60:	00a00034 	movhi	r2,32768
   43a64:	1025883a 	mov	r18,r2
   43a68:	002f883a 	mov	r23,zero
   43a6c:	008ffc34 	movhi	r2,16368
   43a70:	003f9c06 	br	438e4 <__alt_data_end+0xf40438e4>
   43a74:	d9800817 	ldw	r6,32(sp)
   43a78:	a00f883a 	mov	r7,r20
   43a7c:	a00b883a 	mov	r5,r20
   43a80:	3009883a 	mov	r4,r6
   43a84:	da001715 	stw	r8,92(sp)
   43a88:	0045ce40 	call	45ce4 <__subdf3>
   43a8c:	d9800817 	ldw	r6,32(sp)
   43a90:	a00f883a 	mov	r7,r20
   43a94:	a00b883a 	mov	r5,r20
   43a98:	3009883a 	mov	r4,r6
   43a9c:	d8c01615 	stw	r3,88(sp)
   43aa0:	d8801315 	stw	r2,76(sp)
   43aa4:	00452200 	call	45220 <__eqdf2>
   43aa8:	d8c01617 	ldw	r3,88(sp)
   43aac:	da001717 	ldw	r8,92(sp)
   43ab0:	10000e1e 	bne	r2,zero,43aec <__muldc3+0x5bc>
   43ab4:	d9801317 	ldw	r6,76(sp)
   43ab8:	180f883a 	mov	r7,r3
   43abc:	180b883a 	mov	r5,r3
   43ac0:	3009883a 	mov	r4,r6
   43ac4:	00452200 	call	45220 <__eqdf2>
   43ac8:	da001717 	ldw	r8,92(sp)
   43acc:	10000726 	beq	r2,zero,43aec <__muldc3+0x5bc>
   43ad0:	0005883a 	mov	r2,zero
   43ad4:	9800010e 	bge	r19,zero,43adc <__muldc3+0x5ac>
   43ad8:	00a00034 	movhi	r2,32768
   43adc:	1027883a 	mov	r19,r2
   43ae0:	002d883a 	mov	r22,zero
   43ae4:	008ffc34 	movhi	r2,16368
   43ae8:	003f3606 	br	437c4 <__alt_data_end+0xf40437c4>
   43aec:	d8001305 	stb	zero,76(sp)
   43af0:	003f4906 	br	43818 <__alt_data_end+0xf4043818>
   43af4:	d8801303 	ldbu	r2,76(sp)
   43af8:	103f8d1e 	bne	r2,zero,43930 <__alt_data_end+0xf4043930>
   43afc:	d9800b17 	ldw	r6,44(sp)
   43b00:	d9c00c17 	ldw	r7,48(sp)
   43b04:	da001715 	stw	r8,92(sp)
   43b08:	3009883a 	mov	r4,r6
   43b0c:	380b883a 	mov	r5,r7
   43b10:	0045ce40 	call	45ce4 <__subdf3>
   43b14:	d9800b17 	ldw	r6,44(sp)
   43b18:	d9c00c17 	ldw	r7,48(sp)
   43b1c:	d8c01615 	stw	r3,88(sp)
   43b20:	3009883a 	mov	r4,r6
   43b24:	380b883a 	mov	r5,r7
   43b28:	d8801315 	stw	r2,76(sp)
   43b2c:	00452200 	call	45220 <__eqdf2>
   43b30:	d8c01617 	ldw	r3,88(sp)
   43b34:	da001717 	ldw	r8,92(sp)
   43b38:	10002d1e 	bne	r2,zero,43bf0 <__muldc3+0x6c0>
   43b3c:	d9801317 	ldw	r6,76(sp)
   43b40:	180f883a 	mov	r7,r3
   43b44:	180b883a 	mov	r5,r3
   43b48:	3009883a 	mov	r4,r6
   43b4c:	00452200 	call	45220 <__eqdf2>
   43b50:	da001717 	ldw	r8,92(sp)
   43b54:	10002626 	beq	r2,zero,43bf0 <__muldc3+0x6c0>
   43b58:	b00d883a 	mov	r6,r22
   43b5c:	980f883a 	mov	r7,r19
   43b60:	b009883a 	mov	r4,r22
   43b64:	980b883a 	mov	r5,r19
   43b68:	da001715 	stw	r8,92(sp)
   43b6c:	00452200 	call	45220 <__eqdf2>
   43b70:	da001717 	ldw	r8,92(sp)
   43b74:	10006e1e 	bne	r2,zero,43d30 <__muldc3+0x800>
   43b78:	d9800817 	ldw	r6,32(sp)
   43b7c:	a00f883a 	mov	r7,r20
   43b80:	a00b883a 	mov	r5,r20
   43b84:	3009883a 	mov	r4,r6
   43b88:	da001715 	stw	r8,92(sp)
   43b8c:	00452200 	call	45220 <__eqdf2>
   43b90:	da001717 	ldw	r8,92(sp)
   43b94:	1000781e 	bne	r2,zero,43d78 <__muldc3+0x848>
   43b98:	b80d883a 	mov	r6,r23
   43b9c:	900f883a 	mov	r7,r18
   43ba0:	b809883a 	mov	r4,r23
   43ba4:	900b883a 	mov	r5,r18
   43ba8:	da001715 	stw	r8,92(sp)
   43bac:	00452200 	call	45220 <__eqdf2>
   43bb0:	da001717 	ldw	r8,92(sp)
   43bb4:	10006a1e 	bne	r2,zero,43d60 <__muldc3+0x830>
   43bb8:	e00d883a 	mov	r6,fp
   43bbc:	a80f883a 	mov	r7,r21
   43bc0:	e009883a 	mov	r4,fp
   43bc4:	a80b883a 	mov	r5,r21
   43bc8:	da001715 	stw	r8,92(sp)
   43bcc:	00452200 	call	45220 <__eqdf2>
   43bd0:	da001717 	ldw	r8,92(sp)
   43bd4:	103f5626 	beq	r2,zero,43930 <__alt_data_end+0xf4043930>
   43bd8:	0005883a 	mov	r2,zero
   43bdc:	a800010e 	bge	r21,zero,43be4 <__muldc3+0x6b4>
   43be0:	00a00034 	movhi	r2,32768
   43be4:	0039883a 	mov	fp,zero
   43be8:	102b883a 	mov	r21,r2
   43bec:	003f5006 	br	43930 <__alt_data_end+0xf4043930>
   43bf0:	d9800d17 	ldw	r6,52(sp)
   43bf4:	d9c00e17 	ldw	r7,56(sp)
   43bf8:	da001715 	stw	r8,92(sp)
   43bfc:	3009883a 	mov	r4,r6
   43c00:	380b883a 	mov	r5,r7
   43c04:	0045ce40 	call	45ce4 <__subdf3>
   43c08:	d9800d17 	ldw	r6,52(sp)
   43c0c:	d9c00e17 	ldw	r7,56(sp)
   43c10:	d8c01615 	stw	r3,88(sp)
   43c14:	3009883a 	mov	r4,r6
   43c18:	380b883a 	mov	r5,r7
   43c1c:	d8800b15 	stw	r2,44(sp)
   43c20:	00452200 	call	45220 <__eqdf2>
   43c24:	d8c01617 	ldw	r3,88(sp)
   43c28:	da001717 	ldw	r8,92(sp)
   43c2c:	1000071e 	bne	r2,zero,43c4c <__muldc3+0x71c>
   43c30:	d9800b17 	ldw	r6,44(sp)
   43c34:	180f883a 	mov	r7,r3
   43c38:	180b883a 	mov	r5,r3
   43c3c:	3009883a 	mov	r4,r6
   43c40:	00452200 	call	45220 <__eqdf2>
   43c44:	da001717 	ldw	r8,92(sp)
   43c48:	103fc31e 	bne	r2,zero,43b58 <__alt_data_end+0xf4043b58>
   43c4c:	d9800f17 	ldw	r6,60(sp)
   43c50:	d9c01017 	ldw	r7,64(sp)
   43c54:	da001715 	stw	r8,92(sp)
   43c58:	3009883a 	mov	r4,r6
   43c5c:	380b883a 	mov	r5,r7
   43c60:	0045ce40 	call	45ce4 <__subdf3>
   43c64:	d9800f17 	ldw	r6,60(sp)
   43c68:	d9c01017 	ldw	r7,64(sp)
   43c6c:	d8c01615 	stw	r3,88(sp)
   43c70:	3009883a 	mov	r4,r6
   43c74:	380b883a 	mov	r5,r7
   43c78:	d8800b15 	stw	r2,44(sp)
   43c7c:	00452200 	call	45220 <__eqdf2>
   43c80:	d8c01617 	ldw	r3,88(sp)
   43c84:	da001717 	ldw	r8,92(sp)
   43c88:	1000071e 	bne	r2,zero,43ca8 <__muldc3+0x778>
   43c8c:	d9800b17 	ldw	r6,44(sp)
   43c90:	180f883a 	mov	r7,r3
   43c94:	180b883a 	mov	r5,r3
   43c98:	3009883a 	mov	r4,r6
   43c9c:	00452200 	call	45220 <__eqdf2>
   43ca0:	da001717 	ldw	r8,92(sp)
   43ca4:	103fac1e 	bne	r2,zero,43b58 <__alt_data_end+0xf4043b58>
   43ca8:	d9801117 	ldw	r6,68(sp)
   43cac:	d9c01217 	ldw	r7,72(sp)
   43cb0:	da001715 	stw	r8,92(sp)
   43cb4:	3009883a 	mov	r4,r6
   43cb8:	380b883a 	mov	r5,r7
   43cbc:	0045ce40 	call	45ce4 <__subdf3>
   43cc0:	d9801117 	ldw	r6,68(sp)
   43cc4:	d9c01217 	ldw	r7,72(sp)
   43cc8:	d8c01615 	stw	r3,88(sp)
   43ccc:	3009883a 	mov	r4,r6
   43cd0:	380b883a 	mov	r5,r7
   43cd4:	d8800b15 	stw	r2,44(sp)
   43cd8:	00452200 	call	45220 <__eqdf2>
   43cdc:	d8c01617 	ldw	r3,88(sp)
   43ce0:	da001717 	ldw	r8,92(sp)
   43ce4:	103e691e 	bne	r2,zero,4368c <__alt_data_end+0xf404368c>
   43ce8:	d9800b17 	ldw	r6,44(sp)
   43cec:	180f883a 	mov	r7,r3
   43cf0:	180b883a 	mov	r5,r3
   43cf4:	3009883a 	mov	r4,r6
   43cf8:	00452200 	call	45220 <__eqdf2>
   43cfc:	da001717 	ldw	r8,92(sp)
   43d00:	103e6226 	beq	r2,zero,4368c <__alt_data_end+0xf404368c>
   43d04:	003f9406 	br	43b58 <__alt_data_end+0xf4043b58>
   43d08:	0005883a 	mov	r2,zero
   43d0c:	003ead06 	br	437c4 <__alt_data_end+0xf40437c4>
   43d10:	0005883a 	mov	r2,zero
   43d14:	003ef306 	br	438e4 <__alt_data_end+0xf40438e4>
   43d18:	0005883a 	mov	r2,zero
   43d1c:	9800010e 	bge	r19,zero,43d24 <__muldc3+0x7f4>
   43d20:	00a00034 	movhi	r2,32768
   43d24:	002d883a 	mov	r22,zero
   43d28:	1027883a 	mov	r19,r2
   43d2c:	003ef806 	br	43910 <__alt_data_end+0xf4043910>
   43d30:	0005883a 	mov	r2,zero
   43d34:	9800010e 	bge	r19,zero,43d3c <__muldc3+0x80c>
   43d38:	00a00034 	movhi	r2,32768
   43d3c:	002d883a 	mov	r22,zero
   43d40:	1027883a 	mov	r19,r2
   43d44:	003f8c06 	br	43b78 <__alt_data_end+0xf4043b78>
   43d48:	0005883a 	mov	r2,zero
   43d4c:	a000010e 	bge	r20,zero,43d54 <__muldc3+0x824>
   43d50:	00a00034 	movhi	r2,32768
   43d54:	d8000815 	stw	zero,32(sp)
   43d58:	1029883a 	mov	r20,r2
   43d5c:	003ef406 	br	43930 <__alt_data_end+0xf4043930>
   43d60:	0005883a 	mov	r2,zero
   43d64:	9000010e 	bge	r18,zero,43d6c <__muldc3+0x83c>
   43d68:	00a00034 	movhi	r2,32768
   43d6c:	002f883a 	mov	r23,zero
   43d70:	1025883a 	mov	r18,r2
   43d74:	003f9006 	br	43bb8 <__alt_data_end+0xf4043bb8>
   43d78:	0005883a 	mov	r2,zero
   43d7c:	a000010e 	bge	r20,zero,43d84 <__muldc3+0x854>
   43d80:	00a00034 	movhi	r2,32768
   43d84:	d8000815 	stw	zero,32(sp)
   43d88:	1029883a 	mov	r20,r2
   43d8c:	003f8206 	br	43b98 <__alt_data_end+0xf4043b98>
   43d90:	0005883a 	mov	r2,zero
   43d94:	a800010e 	bge	r21,zero,43d9c <__muldc3+0x86c>
   43d98:	00a00034 	movhi	r2,32768
   43d9c:	102b883a 	mov	r21,r2
   43da0:	00800044 	movi	r2,1
   43da4:	0039883a 	mov	fp,zero
   43da8:	d8801305 	stb	r2,76(sp)
   43dac:	003e9a06 	br	43818 <__alt_data_end+0xf4043818>
   43db0:	0005883a 	mov	r2,zero
   43db4:	9000010e 	bge	r18,zero,43dbc <__muldc3+0x88c>
   43db8:	00a00034 	movhi	r2,32768
   43dbc:	002f883a 	mov	r23,zero
   43dc0:	1025883a 	mov	r18,r2
   43dc4:	003e8a06 	br	437f0 <__alt_data_end+0xf40437f0>

00043dc8 <__divsi3>:
   43dc8:	20001b16 	blt	r4,zero,43e38 <__divsi3+0x70>
   43dcc:	000f883a 	mov	r7,zero
   43dd0:	28001616 	blt	r5,zero,43e2c <__divsi3+0x64>
   43dd4:	200d883a 	mov	r6,r4
   43dd8:	29001a2e 	bgeu	r5,r4,43e44 <__divsi3+0x7c>
   43ddc:	00800804 	movi	r2,32
   43de0:	00c00044 	movi	r3,1
   43de4:	00000106 	br	43dec <__divsi3+0x24>
   43de8:	10000d26 	beq	r2,zero,43e20 <__divsi3+0x58>
   43dec:	294b883a 	add	r5,r5,r5
   43df0:	10bfffc4 	addi	r2,r2,-1
   43df4:	18c7883a 	add	r3,r3,r3
   43df8:	293ffb36 	bltu	r5,r4,43de8 <__alt_data_end+0xf4043de8>
   43dfc:	0005883a 	mov	r2,zero
   43e00:	18000726 	beq	r3,zero,43e20 <__divsi3+0x58>
   43e04:	0005883a 	mov	r2,zero
   43e08:	31400236 	bltu	r6,r5,43e14 <__divsi3+0x4c>
   43e0c:	314dc83a 	sub	r6,r6,r5
   43e10:	10c4b03a 	or	r2,r2,r3
   43e14:	1806d07a 	srli	r3,r3,1
   43e18:	280ad07a 	srli	r5,r5,1
   43e1c:	183ffa1e 	bne	r3,zero,43e08 <__alt_data_end+0xf4043e08>
   43e20:	38000126 	beq	r7,zero,43e28 <__divsi3+0x60>
   43e24:	0085c83a 	sub	r2,zero,r2
   43e28:	f800283a 	ret
   43e2c:	014bc83a 	sub	r5,zero,r5
   43e30:	39c0005c 	xori	r7,r7,1
   43e34:	003fe706 	br	43dd4 <__alt_data_end+0xf4043dd4>
   43e38:	0109c83a 	sub	r4,zero,r4
   43e3c:	01c00044 	movi	r7,1
   43e40:	003fe306 	br	43dd0 <__alt_data_end+0xf4043dd0>
   43e44:	00c00044 	movi	r3,1
   43e48:	003fee06 	br	43e04 <__alt_data_end+0xf4043e04>

00043e4c <__modsi3>:
   43e4c:	20001716 	blt	r4,zero,43eac <__modsi3+0x60>
   43e50:	000f883a 	mov	r7,zero
   43e54:	2005883a 	mov	r2,r4
   43e58:	28001216 	blt	r5,zero,43ea4 <__modsi3+0x58>
   43e5c:	2900162e 	bgeu	r5,r4,43eb8 <__modsi3+0x6c>
   43e60:	01800804 	movi	r6,32
   43e64:	00c00044 	movi	r3,1
   43e68:	00000106 	br	43e70 <__modsi3+0x24>
   43e6c:	30000a26 	beq	r6,zero,43e98 <__modsi3+0x4c>
   43e70:	294b883a 	add	r5,r5,r5
   43e74:	31bfffc4 	addi	r6,r6,-1
   43e78:	18c7883a 	add	r3,r3,r3
   43e7c:	293ffb36 	bltu	r5,r4,43e6c <__alt_data_end+0xf4043e6c>
   43e80:	18000526 	beq	r3,zero,43e98 <__modsi3+0x4c>
   43e84:	1806d07a 	srli	r3,r3,1
   43e88:	11400136 	bltu	r2,r5,43e90 <__modsi3+0x44>
   43e8c:	1145c83a 	sub	r2,r2,r5
   43e90:	280ad07a 	srli	r5,r5,1
   43e94:	183ffb1e 	bne	r3,zero,43e84 <__alt_data_end+0xf4043e84>
   43e98:	38000126 	beq	r7,zero,43ea0 <__modsi3+0x54>
   43e9c:	0085c83a 	sub	r2,zero,r2
   43ea0:	f800283a 	ret
   43ea4:	014bc83a 	sub	r5,zero,r5
   43ea8:	003fec06 	br	43e5c <__alt_data_end+0xf4043e5c>
   43eac:	0109c83a 	sub	r4,zero,r4
   43eb0:	01c00044 	movi	r7,1
   43eb4:	003fe706 	br	43e54 <__alt_data_end+0xf4043e54>
   43eb8:	00c00044 	movi	r3,1
   43ebc:	003ff106 	br	43e84 <__alt_data_end+0xf4043e84>

00043ec0 <__udivsi3>:
   43ec0:	200d883a 	mov	r6,r4
   43ec4:	2900152e 	bgeu	r5,r4,43f1c <__udivsi3+0x5c>
   43ec8:	28001416 	blt	r5,zero,43f1c <__udivsi3+0x5c>
   43ecc:	00800804 	movi	r2,32
   43ed0:	00c00044 	movi	r3,1
   43ed4:	00000206 	br	43ee0 <__udivsi3+0x20>
   43ed8:	10000e26 	beq	r2,zero,43f14 <__udivsi3+0x54>
   43edc:	28000516 	blt	r5,zero,43ef4 <__udivsi3+0x34>
   43ee0:	294b883a 	add	r5,r5,r5
   43ee4:	10bfffc4 	addi	r2,r2,-1
   43ee8:	18c7883a 	add	r3,r3,r3
   43eec:	293ffa36 	bltu	r5,r4,43ed8 <__alt_data_end+0xf4043ed8>
   43ef0:	18000826 	beq	r3,zero,43f14 <__udivsi3+0x54>
   43ef4:	0005883a 	mov	r2,zero
   43ef8:	31400236 	bltu	r6,r5,43f04 <__udivsi3+0x44>
   43efc:	314dc83a 	sub	r6,r6,r5
   43f00:	10c4b03a 	or	r2,r2,r3
   43f04:	1806d07a 	srli	r3,r3,1
   43f08:	280ad07a 	srli	r5,r5,1
   43f0c:	183ffa1e 	bne	r3,zero,43ef8 <__alt_data_end+0xf4043ef8>
   43f10:	f800283a 	ret
   43f14:	0005883a 	mov	r2,zero
   43f18:	f800283a 	ret
   43f1c:	00c00044 	movi	r3,1
   43f20:	003ff406 	br	43ef4 <__alt_data_end+0xf4043ef4>

00043f24 <__umodsi3>:
   43f24:	2005883a 	mov	r2,r4
   43f28:	2900122e 	bgeu	r5,r4,43f74 <__umodsi3+0x50>
   43f2c:	28001116 	blt	r5,zero,43f74 <__umodsi3+0x50>
   43f30:	01800804 	movi	r6,32
   43f34:	00c00044 	movi	r3,1
   43f38:	00000206 	br	43f44 <__umodsi3+0x20>
   43f3c:	30000c26 	beq	r6,zero,43f70 <__umodsi3+0x4c>
   43f40:	28000516 	blt	r5,zero,43f58 <__umodsi3+0x34>
   43f44:	294b883a 	add	r5,r5,r5
   43f48:	31bfffc4 	addi	r6,r6,-1
   43f4c:	18c7883a 	add	r3,r3,r3
   43f50:	293ffa36 	bltu	r5,r4,43f3c <__alt_data_end+0xf4043f3c>
   43f54:	18000626 	beq	r3,zero,43f70 <__umodsi3+0x4c>
   43f58:	1806d07a 	srli	r3,r3,1
   43f5c:	11400136 	bltu	r2,r5,43f64 <__umodsi3+0x40>
   43f60:	1145c83a 	sub	r2,r2,r5
   43f64:	280ad07a 	srli	r5,r5,1
   43f68:	183ffb1e 	bne	r3,zero,43f58 <__alt_data_end+0xf4043f58>
   43f6c:	f800283a 	ret
   43f70:	f800283a 	ret
   43f74:	00c00044 	movi	r3,1
   43f78:	003ff706 	br	43f58 <__alt_data_end+0xf4043f58>

00043f7c <__mulsi3>:
   43f7c:	0005883a 	mov	r2,zero
   43f80:	20000726 	beq	r4,zero,43fa0 <__mulsi3+0x24>
   43f84:	20c0004c 	andi	r3,r4,1
   43f88:	2008d07a 	srli	r4,r4,1
   43f8c:	18000126 	beq	r3,zero,43f94 <__mulsi3+0x18>
   43f90:	1145883a 	add	r2,r2,r5
   43f94:	294b883a 	add	r5,r5,r5
   43f98:	203ffa1e 	bne	r4,zero,43f84 <__alt_data_end+0xf4043f84>
   43f9c:	f800283a 	ret
   43fa0:	f800283a 	ret

00043fa4 <__adddf3>:
   43fa4:	02c00434 	movhi	r11,16
   43fa8:	5affffc4 	addi	r11,r11,-1
   43fac:	2806d7fa 	srli	r3,r5,31
   43fb0:	2ad4703a 	and	r10,r5,r11
   43fb4:	3ad2703a 	and	r9,r7,r11
   43fb8:	3804d53a 	srli	r2,r7,20
   43fbc:	3018d77a 	srli	r12,r6,29
   43fc0:	280ad53a 	srli	r5,r5,20
   43fc4:	501490fa 	slli	r10,r10,3
   43fc8:	2010d77a 	srli	r8,r4,29
   43fcc:	481290fa 	slli	r9,r9,3
   43fd0:	380ed7fa 	srli	r7,r7,31
   43fd4:	defffb04 	addi	sp,sp,-20
   43fd8:	dc800215 	stw	r18,8(sp)
   43fdc:	dc400115 	stw	r17,4(sp)
   43fe0:	dc000015 	stw	r16,0(sp)
   43fe4:	dfc00415 	stw	ra,16(sp)
   43fe8:	dcc00315 	stw	r19,12(sp)
   43fec:	1c803fcc 	andi	r18,r3,255
   43ff0:	2c01ffcc 	andi	r16,r5,2047
   43ff4:	5210b03a 	or	r8,r10,r8
   43ff8:	202290fa 	slli	r17,r4,3
   43ffc:	1081ffcc 	andi	r2,r2,2047
   44000:	4b12b03a 	or	r9,r9,r12
   44004:	300c90fa 	slli	r6,r6,3
   44008:	91c07526 	beq	r18,r7,441e0 <__adddf3+0x23c>
   4400c:	8087c83a 	sub	r3,r16,r2
   44010:	00c0ab0e 	bge	zero,r3,442c0 <__adddf3+0x31c>
   44014:	10002a1e 	bne	r2,zero,440c0 <__adddf3+0x11c>
   44018:	4984b03a 	or	r2,r9,r6
   4401c:	1000961e 	bne	r2,zero,44278 <__adddf3+0x2d4>
   44020:	888001cc 	andi	r2,r17,7
   44024:	10000726 	beq	r2,zero,44044 <__adddf3+0xa0>
   44028:	888003cc 	andi	r2,r17,15
   4402c:	00c00104 	movi	r3,4
   44030:	10c00426 	beq	r2,r3,44044 <__adddf3+0xa0>
   44034:	88c7883a 	add	r3,r17,r3
   44038:	1c63803a 	cmpltu	r17,r3,r17
   4403c:	4451883a 	add	r8,r8,r17
   44040:	1823883a 	mov	r17,r3
   44044:	4080202c 	andhi	r2,r8,128
   44048:	10005926 	beq	r2,zero,441b0 <__adddf3+0x20c>
   4404c:	84000044 	addi	r16,r16,1
   44050:	0081ffc4 	movi	r2,2047
   44054:	8080ba26 	beq	r16,r2,44340 <__adddf3+0x39c>
   44058:	00bfe034 	movhi	r2,65408
   4405c:	10bfffc4 	addi	r2,r2,-1
   44060:	4090703a 	and	r8,r8,r2
   44064:	4004977a 	slli	r2,r8,29
   44068:	4010927a 	slli	r8,r8,9
   4406c:	8822d0fa 	srli	r17,r17,3
   44070:	8401ffcc 	andi	r16,r16,2047
   44074:	4010d33a 	srli	r8,r8,12
   44078:	9007883a 	mov	r3,r18
   4407c:	1444b03a 	or	r2,r2,r17
   44080:	8401ffcc 	andi	r16,r16,2047
   44084:	8020953a 	slli	r16,r16,20
   44088:	18c03fcc 	andi	r3,r3,255
   4408c:	01000434 	movhi	r4,16
   44090:	213fffc4 	addi	r4,r4,-1
   44094:	180697fa 	slli	r3,r3,31
   44098:	4110703a 	and	r8,r8,r4
   4409c:	4410b03a 	or	r8,r8,r16
   440a0:	40c6b03a 	or	r3,r8,r3
   440a4:	dfc00417 	ldw	ra,16(sp)
   440a8:	dcc00317 	ldw	r19,12(sp)
   440ac:	dc800217 	ldw	r18,8(sp)
   440b0:	dc400117 	ldw	r17,4(sp)
   440b4:	dc000017 	ldw	r16,0(sp)
   440b8:	dec00504 	addi	sp,sp,20
   440bc:	f800283a 	ret
   440c0:	0081ffc4 	movi	r2,2047
   440c4:	80bfd626 	beq	r16,r2,44020 <__alt_data_end+0xf4044020>
   440c8:	4a402034 	orhi	r9,r9,128
   440cc:	00800e04 	movi	r2,56
   440d0:	10c09f16 	blt	r2,r3,44350 <__adddf3+0x3ac>
   440d4:	008007c4 	movi	r2,31
   440d8:	10c0c216 	blt	r2,r3,443e4 <__adddf3+0x440>
   440dc:	00800804 	movi	r2,32
   440e0:	10c5c83a 	sub	r2,r2,r3
   440e4:	488a983a 	sll	r5,r9,r2
   440e8:	30c8d83a 	srl	r4,r6,r3
   440ec:	3084983a 	sll	r2,r6,r2
   440f0:	48c6d83a 	srl	r3,r9,r3
   440f4:	290cb03a 	or	r6,r5,r4
   440f8:	1004c03a 	cmpne	r2,r2,zero
   440fc:	308cb03a 	or	r6,r6,r2
   44100:	898dc83a 	sub	r6,r17,r6
   44104:	89a3803a 	cmpltu	r17,r17,r6
   44108:	40d1c83a 	sub	r8,r8,r3
   4410c:	4451c83a 	sub	r8,r8,r17
   44110:	3023883a 	mov	r17,r6
   44114:	4080202c 	andhi	r2,r8,128
   44118:	10002326 	beq	r2,zero,441a8 <__adddf3+0x204>
   4411c:	04c02034 	movhi	r19,128
   44120:	9cffffc4 	addi	r19,r19,-1
   44124:	44e6703a 	and	r19,r8,r19
   44128:	98007626 	beq	r19,zero,44304 <__adddf3+0x360>
   4412c:	9809883a 	mov	r4,r19
   44130:	00467e40 	call	467e4 <__clzsi2>
   44134:	10fffe04 	addi	r3,r2,-8
   44138:	010007c4 	movi	r4,31
   4413c:	20c07716 	blt	r4,r3,4431c <__adddf3+0x378>
   44140:	00800804 	movi	r2,32
   44144:	10c5c83a 	sub	r2,r2,r3
   44148:	8884d83a 	srl	r2,r17,r2
   4414c:	98d0983a 	sll	r8,r19,r3
   44150:	88e2983a 	sll	r17,r17,r3
   44154:	1204b03a 	or	r2,r2,r8
   44158:	1c007416 	blt	r3,r16,4432c <__adddf3+0x388>
   4415c:	1c21c83a 	sub	r16,r3,r16
   44160:	82000044 	addi	r8,r16,1
   44164:	00c007c4 	movi	r3,31
   44168:	1a009116 	blt	r3,r8,443b0 <__adddf3+0x40c>
   4416c:	00c00804 	movi	r3,32
   44170:	1a07c83a 	sub	r3,r3,r8
   44174:	8a08d83a 	srl	r4,r17,r8
   44178:	88e2983a 	sll	r17,r17,r3
   4417c:	10c6983a 	sll	r3,r2,r3
   44180:	1210d83a 	srl	r8,r2,r8
   44184:	8804c03a 	cmpne	r2,r17,zero
   44188:	1906b03a 	or	r3,r3,r4
   4418c:	18a2b03a 	or	r17,r3,r2
   44190:	0021883a 	mov	r16,zero
   44194:	003fa206 	br	44020 <__alt_data_end+0xf4044020>
   44198:	1890b03a 	or	r8,r3,r2
   4419c:	40017d26 	beq	r8,zero,44794 <__adddf3+0x7f0>
   441a0:	1011883a 	mov	r8,r2
   441a4:	1823883a 	mov	r17,r3
   441a8:	888001cc 	andi	r2,r17,7
   441ac:	103f9e1e 	bne	r2,zero,44028 <__alt_data_end+0xf4044028>
   441b0:	4004977a 	slli	r2,r8,29
   441b4:	8822d0fa 	srli	r17,r17,3
   441b8:	4010d0fa 	srli	r8,r8,3
   441bc:	9007883a 	mov	r3,r18
   441c0:	1444b03a 	or	r2,r2,r17
   441c4:	0101ffc4 	movi	r4,2047
   441c8:	81002426 	beq	r16,r4,4425c <__adddf3+0x2b8>
   441cc:	8120703a 	and	r16,r16,r4
   441d0:	01000434 	movhi	r4,16
   441d4:	213fffc4 	addi	r4,r4,-1
   441d8:	4110703a 	and	r8,r8,r4
   441dc:	003fa806 	br	44080 <__alt_data_end+0xf4044080>
   441e0:	8089c83a 	sub	r4,r16,r2
   441e4:	01005e0e 	bge	zero,r4,44360 <__adddf3+0x3bc>
   441e8:	10002b26 	beq	r2,zero,44298 <__adddf3+0x2f4>
   441ec:	0081ffc4 	movi	r2,2047
   441f0:	80bf8b26 	beq	r16,r2,44020 <__alt_data_end+0xf4044020>
   441f4:	4a402034 	orhi	r9,r9,128
   441f8:	00800e04 	movi	r2,56
   441fc:	1100a40e 	bge	r2,r4,44490 <__adddf3+0x4ec>
   44200:	498cb03a 	or	r6,r9,r6
   44204:	300ac03a 	cmpne	r5,r6,zero
   44208:	0013883a 	mov	r9,zero
   4420c:	2c4b883a 	add	r5,r5,r17
   44210:	2c63803a 	cmpltu	r17,r5,r17
   44214:	4a11883a 	add	r8,r9,r8
   44218:	8a11883a 	add	r8,r17,r8
   4421c:	2823883a 	mov	r17,r5
   44220:	4080202c 	andhi	r2,r8,128
   44224:	103fe026 	beq	r2,zero,441a8 <__alt_data_end+0xf40441a8>
   44228:	84000044 	addi	r16,r16,1
   4422c:	0081ffc4 	movi	r2,2047
   44230:	8080d226 	beq	r16,r2,4457c <__adddf3+0x5d8>
   44234:	00bfe034 	movhi	r2,65408
   44238:	10bfffc4 	addi	r2,r2,-1
   4423c:	4090703a 	and	r8,r8,r2
   44240:	880ad07a 	srli	r5,r17,1
   44244:	400897fa 	slli	r4,r8,31
   44248:	88c0004c 	andi	r3,r17,1
   4424c:	28e2b03a 	or	r17,r5,r3
   44250:	4010d07a 	srli	r8,r8,1
   44254:	2462b03a 	or	r17,r4,r17
   44258:	003f7106 	br	44020 <__alt_data_end+0xf4044020>
   4425c:	4088b03a 	or	r4,r8,r2
   44260:	20014526 	beq	r4,zero,44778 <__adddf3+0x7d4>
   44264:	01000434 	movhi	r4,16
   44268:	42000234 	orhi	r8,r8,8
   4426c:	213fffc4 	addi	r4,r4,-1
   44270:	4110703a 	and	r8,r8,r4
   44274:	003f8206 	br	44080 <__alt_data_end+0xf4044080>
   44278:	18ffffc4 	addi	r3,r3,-1
   4427c:	1800491e 	bne	r3,zero,443a4 <__adddf3+0x400>
   44280:	898bc83a 	sub	r5,r17,r6
   44284:	8963803a 	cmpltu	r17,r17,r5
   44288:	4251c83a 	sub	r8,r8,r9
   4428c:	4451c83a 	sub	r8,r8,r17
   44290:	2823883a 	mov	r17,r5
   44294:	003f9f06 	br	44114 <__alt_data_end+0xf4044114>
   44298:	4984b03a 	or	r2,r9,r6
   4429c:	103f6026 	beq	r2,zero,44020 <__alt_data_end+0xf4044020>
   442a0:	213fffc4 	addi	r4,r4,-1
   442a4:	2000931e 	bne	r4,zero,444f4 <__adddf3+0x550>
   442a8:	898d883a 	add	r6,r17,r6
   442ac:	3463803a 	cmpltu	r17,r6,r17
   442b0:	4251883a 	add	r8,r8,r9
   442b4:	8a11883a 	add	r8,r17,r8
   442b8:	3023883a 	mov	r17,r6
   442bc:	003fd806 	br	44220 <__alt_data_end+0xf4044220>
   442c0:	1800541e 	bne	r3,zero,44414 <__adddf3+0x470>
   442c4:	80800044 	addi	r2,r16,1
   442c8:	1081ffcc 	andi	r2,r2,2047
   442cc:	00c00044 	movi	r3,1
   442d0:	1880a00e 	bge	r3,r2,44554 <__adddf3+0x5b0>
   442d4:	8989c83a 	sub	r4,r17,r6
   442d8:	8905803a 	cmpltu	r2,r17,r4
   442dc:	4267c83a 	sub	r19,r8,r9
   442e0:	98a7c83a 	sub	r19,r19,r2
   442e4:	9880202c 	andhi	r2,r19,128
   442e8:	10006326 	beq	r2,zero,44478 <__adddf3+0x4d4>
   442ec:	3463c83a 	sub	r17,r6,r17
   442f0:	4a07c83a 	sub	r3,r9,r8
   442f4:	344d803a 	cmpltu	r6,r6,r17
   442f8:	19a7c83a 	sub	r19,r3,r6
   442fc:	3825883a 	mov	r18,r7
   44300:	983f8a1e 	bne	r19,zero,4412c <__alt_data_end+0xf404412c>
   44304:	8809883a 	mov	r4,r17
   44308:	00467e40 	call	467e4 <__clzsi2>
   4430c:	10800804 	addi	r2,r2,32
   44310:	10fffe04 	addi	r3,r2,-8
   44314:	010007c4 	movi	r4,31
   44318:	20ff890e 	bge	r4,r3,44140 <__alt_data_end+0xf4044140>
   4431c:	10bff604 	addi	r2,r2,-40
   44320:	8884983a 	sll	r2,r17,r2
   44324:	0023883a 	mov	r17,zero
   44328:	1c3f8c0e 	bge	r3,r16,4415c <__alt_data_end+0xf404415c>
   4432c:	023fe034 	movhi	r8,65408
   44330:	423fffc4 	addi	r8,r8,-1
   44334:	80e1c83a 	sub	r16,r16,r3
   44338:	1210703a 	and	r8,r2,r8
   4433c:	003f3806 	br	44020 <__alt_data_end+0xf4044020>
   44340:	9007883a 	mov	r3,r18
   44344:	0011883a 	mov	r8,zero
   44348:	0005883a 	mov	r2,zero
   4434c:	003f4c06 	br	44080 <__alt_data_end+0xf4044080>
   44350:	498cb03a 	or	r6,r9,r6
   44354:	300cc03a 	cmpne	r6,r6,zero
   44358:	0007883a 	mov	r3,zero
   4435c:	003f6806 	br	44100 <__alt_data_end+0xf4044100>
   44360:	20009c1e 	bne	r4,zero,445d4 <__adddf3+0x630>
   44364:	80800044 	addi	r2,r16,1
   44368:	1141ffcc 	andi	r5,r2,2047
   4436c:	01000044 	movi	r4,1
   44370:	2140670e 	bge	r4,r5,44510 <__adddf3+0x56c>
   44374:	0101ffc4 	movi	r4,2047
   44378:	11007f26 	beq	r2,r4,44578 <__adddf3+0x5d4>
   4437c:	898d883a 	add	r6,r17,r6
   44380:	4247883a 	add	r3,r8,r9
   44384:	3451803a 	cmpltu	r8,r6,r17
   44388:	40d1883a 	add	r8,r8,r3
   4438c:	402297fa 	slli	r17,r8,31
   44390:	300cd07a 	srli	r6,r6,1
   44394:	4010d07a 	srli	r8,r8,1
   44398:	1021883a 	mov	r16,r2
   4439c:	89a2b03a 	or	r17,r17,r6
   443a0:	003f1f06 	br	44020 <__alt_data_end+0xf4044020>
   443a4:	0081ffc4 	movi	r2,2047
   443a8:	80bf481e 	bne	r16,r2,440cc <__alt_data_end+0xf40440cc>
   443ac:	003f1c06 	br	44020 <__alt_data_end+0xf4044020>
   443b0:	843ff844 	addi	r16,r16,-31
   443b4:	01000804 	movi	r4,32
   443b8:	1406d83a 	srl	r3,r2,r16
   443bc:	41005026 	beq	r8,r4,44500 <__adddf3+0x55c>
   443c0:	01001004 	movi	r4,64
   443c4:	2211c83a 	sub	r8,r4,r8
   443c8:	1204983a 	sll	r2,r2,r8
   443cc:	88a2b03a 	or	r17,r17,r2
   443d0:	8822c03a 	cmpne	r17,r17,zero
   443d4:	1c62b03a 	or	r17,r3,r17
   443d8:	0011883a 	mov	r8,zero
   443dc:	0021883a 	mov	r16,zero
   443e0:	003f7106 	br	441a8 <__alt_data_end+0xf40441a8>
   443e4:	193ff804 	addi	r4,r3,-32
   443e8:	00800804 	movi	r2,32
   443ec:	4908d83a 	srl	r4,r9,r4
   443f0:	18804526 	beq	r3,r2,44508 <__adddf3+0x564>
   443f4:	00801004 	movi	r2,64
   443f8:	10c5c83a 	sub	r2,r2,r3
   443fc:	4886983a 	sll	r3,r9,r2
   44400:	198cb03a 	or	r6,r3,r6
   44404:	300cc03a 	cmpne	r6,r6,zero
   44408:	218cb03a 	or	r6,r4,r6
   4440c:	0007883a 	mov	r3,zero
   44410:	003f3b06 	br	44100 <__alt_data_end+0xf4044100>
   44414:	80002a26 	beq	r16,zero,444c0 <__adddf3+0x51c>
   44418:	0101ffc4 	movi	r4,2047
   4441c:	11006826 	beq	r2,r4,445c0 <__adddf3+0x61c>
   44420:	00c7c83a 	sub	r3,zero,r3
   44424:	42002034 	orhi	r8,r8,128
   44428:	01000e04 	movi	r4,56
   4442c:	20c07c16 	blt	r4,r3,44620 <__adddf3+0x67c>
   44430:	010007c4 	movi	r4,31
   44434:	20c0da16 	blt	r4,r3,447a0 <__adddf3+0x7fc>
   44438:	01000804 	movi	r4,32
   4443c:	20c9c83a 	sub	r4,r4,r3
   44440:	4114983a 	sll	r10,r8,r4
   44444:	88cad83a 	srl	r5,r17,r3
   44448:	8908983a 	sll	r4,r17,r4
   4444c:	40c6d83a 	srl	r3,r8,r3
   44450:	5162b03a 	or	r17,r10,r5
   44454:	2008c03a 	cmpne	r4,r4,zero
   44458:	8922b03a 	or	r17,r17,r4
   4445c:	3463c83a 	sub	r17,r6,r17
   44460:	48c7c83a 	sub	r3,r9,r3
   44464:	344d803a 	cmpltu	r6,r6,r17
   44468:	1991c83a 	sub	r8,r3,r6
   4446c:	1021883a 	mov	r16,r2
   44470:	3825883a 	mov	r18,r7
   44474:	003f2706 	br	44114 <__alt_data_end+0xf4044114>
   44478:	24d0b03a 	or	r8,r4,r19
   4447c:	40001b1e 	bne	r8,zero,444ec <__adddf3+0x548>
   44480:	0005883a 	mov	r2,zero
   44484:	0007883a 	mov	r3,zero
   44488:	0021883a 	mov	r16,zero
   4448c:	003f4d06 	br	441c4 <__alt_data_end+0xf40441c4>
   44490:	008007c4 	movi	r2,31
   44494:	11003c16 	blt	r2,r4,44588 <__adddf3+0x5e4>
   44498:	00800804 	movi	r2,32
   4449c:	1105c83a 	sub	r2,r2,r4
   444a0:	488e983a 	sll	r7,r9,r2
   444a4:	310ad83a 	srl	r5,r6,r4
   444a8:	3084983a 	sll	r2,r6,r2
   444ac:	4912d83a 	srl	r9,r9,r4
   444b0:	394ab03a 	or	r5,r7,r5
   444b4:	1004c03a 	cmpne	r2,r2,zero
   444b8:	288ab03a 	or	r5,r5,r2
   444bc:	003f5306 	br	4420c <__alt_data_end+0xf404420c>
   444c0:	4448b03a 	or	r4,r8,r17
   444c4:	20003e26 	beq	r4,zero,445c0 <__adddf3+0x61c>
   444c8:	00c6303a 	nor	r3,zero,r3
   444cc:	18003a1e 	bne	r3,zero,445b8 <__adddf3+0x614>
   444d0:	3463c83a 	sub	r17,r6,r17
   444d4:	4a07c83a 	sub	r3,r9,r8
   444d8:	344d803a 	cmpltu	r6,r6,r17
   444dc:	1991c83a 	sub	r8,r3,r6
   444e0:	1021883a 	mov	r16,r2
   444e4:	3825883a 	mov	r18,r7
   444e8:	003f0a06 	br	44114 <__alt_data_end+0xf4044114>
   444ec:	2023883a 	mov	r17,r4
   444f0:	003f0d06 	br	44128 <__alt_data_end+0xf4044128>
   444f4:	0081ffc4 	movi	r2,2047
   444f8:	80bf3f1e 	bne	r16,r2,441f8 <__alt_data_end+0xf40441f8>
   444fc:	003ec806 	br	44020 <__alt_data_end+0xf4044020>
   44500:	0005883a 	mov	r2,zero
   44504:	003fb106 	br	443cc <__alt_data_end+0xf40443cc>
   44508:	0007883a 	mov	r3,zero
   4450c:	003fbc06 	br	44400 <__alt_data_end+0xf4044400>
   44510:	4444b03a 	or	r2,r8,r17
   44514:	8000871e 	bne	r16,zero,44734 <__adddf3+0x790>
   44518:	1000ba26 	beq	r2,zero,44804 <__adddf3+0x860>
   4451c:	4984b03a 	or	r2,r9,r6
   44520:	103ebf26 	beq	r2,zero,44020 <__alt_data_end+0xf4044020>
   44524:	8985883a 	add	r2,r17,r6
   44528:	4247883a 	add	r3,r8,r9
   4452c:	1451803a 	cmpltu	r8,r2,r17
   44530:	40d1883a 	add	r8,r8,r3
   44534:	40c0202c 	andhi	r3,r8,128
   44538:	1023883a 	mov	r17,r2
   4453c:	183f1a26 	beq	r3,zero,441a8 <__alt_data_end+0xf40441a8>
   44540:	00bfe034 	movhi	r2,65408
   44544:	10bfffc4 	addi	r2,r2,-1
   44548:	2021883a 	mov	r16,r4
   4454c:	4090703a 	and	r8,r8,r2
   44550:	003eb306 	br	44020 <__alt_data_end+0xf4044020>
   44554:	4444b03a 	or	r2,r8,r17
   44558:	8000291e 	bne	r16,zero,44600 <__adddf3+0x65c>
   4455c:	10004b1e 	bne	r2,zero,4468c <__adddf3+0x6e8>
   44560:	4990b03a 	or	r8,r9,r6
   44564:	40008b26 	beq	r8,zero,44794 <__adddf3+0x7f0>
   44568:	4811883a 	mov	r8,r9
   4456c:	3023883a 	mov	r17,r6
   44570:	3825883a 	mov	r18,r7
   44574:	003eaa06 	br	44020 <__alt_data_end+0xf4044020>
   44578:	1021883a 	mov	r16,r2
   4457c:	0011883a 	mov	r8,zero
   44580:	0005883a 	mov	r2,zero
   44584:	003f0f06 	br	441c4 <__alt_data_end+0xf40441c4>
   44588:	217ff804 	addi	r5,r4,-32
   4458c:	00800804 	movi	r2,32
   44590:	494ad83a 	srl	r5,r9,r5
   44594:	20807d26 	beq	r4,r2,4478c <__adddf3+0x7e8>
   44598:	00801004 	movi	r2,64
   4459c:	1109c83a 	sub	r4,r2,r4
   445a0:	4912983a 	sll	r9,r9,r4
   445a4:	498cb03a 	or	r6,r9,r6
   445a8:	300cc03a 	cmpne	r6,r6,zero
   445ac:	298ab03a 	or	r5,r5,r6
   445b0:	0013883a 	mov	r9,zero
   445b4:	003f1506 	br	4420c <__alt_data_end+0xf404420c>
   445b8:	0101ffc4 	movi	r4,2047
   445bc:	113f9a1e 	bne	r2,r4,44428 <__alt_data_end+0xf4044428>
   445c0:	4811883a 	mov	r8,r9
   445c4:	3023883a 	mov	r17,r6
   445c8:	1021883a 	mov	r16,r2
   445cc:	3825883a 	mov	r18,r7
   445d0:	003e9306 	br	44020 <__alt_data_end+0xf4044020>
   445d4:	8000161e 	bne	r16,zero,44630 <__adddf3+0x68c>
   445d8:	444ab03a 	or	r5,r8,r17
   445dc:	28005126 	beq	r5,zero,44724 <__adddf3+0x780>
   445e0:	0108303a 	nor	r4,zero,r4
   445e4:	20004d1e 	bne	r4,zero,4471c <__adddf3+0x778>
   445e8:	89a3883a 	add	r17,r17,r6
   445ec:	4253883a 	add	r9,r8,r9
   445f0:	898d803a 	cmpltu	r6,r17,r6
   445f4:	3251883a 	add	r8,r6,r9
   445f8:	1021883a 	mov	r16,r2
   445fc:	003f0806 	br	44220 <__alt_data_end+0xf4044220>
   44600:	1000301e 	bne	r2,zero,446c4 <__adddf3+0x720>
   44604:	4984b03a 	or	r2,r9,r6
   44608:	10007126 	beq	r2,zero,447d0 <__adddf3+0x82c>
   4460c:	4811883a 	mov	r8,r9
   44610:	3023883a 	mov	r17,r6
   44614:	3825883a 	mov	r18,r7
   44618:	0401ffc4 	movi	r16,2047
   4461c:	003e8006 	br	44020 <__alt_data_end+0xf4044020>
   44620:	4462b03a 	or	r17,r8,r17
   44624:	8822c03a 	cmpne	r17,r17,zero
   44628:	0007883a 	mov	r3,zero
   4462c:	003f8b06 	br	4445c <__alt_data_end+0xf404445c>
   44630:	0141ffc4 	movi	r5,2047
   44634:	11403b26 	beq	r2,r5,44724 <__adddf3+0x780>
   44638:	0109c83a 	sub	r4,zero,r4
   4463c:	42002034 	orhi	r8,r8,128
   44640:	01400e04 	movi	r5,56
   44644:	29006716 	blt	r5,r4,447e4 <__adddf3+0x840>
   44648:	014007c4 	movi	r5,31
   4464c:	29007016 	blt	r5,r4,44810 <__adddf3+0x86c>
   44650:	01400804 	movi	r5,32
   44654:	290bc83a 	sub	r5,r5,r4
   44658:	4154983a 	sll	r10,r8,r5
   4465c:	890ed83a 	srl	r7,r17,r4
   44660:	894a983a 	sll	r5,r17,r5
   44664:	4108d83a 	srl	r4,r8,r4
   44668:	51e2b03a 	or	r17,r10,r7
   4466c:	280ac03a 	cmpne	r5,r5,zero
   44670:	8962b03a 	or	r17,r17,r5
   44674:	89a3883a 	add	r17,r17,r6
   44678:	2253883a 	add	r9,r4,r9
   4467c:	898d803a 	cmpltu	r6,r17,r6
   44680:	3251883a 	add	r8,r6,r9
   44684:	1021883a 	mov	r16,r2
   44688:	003ee506 	br	44220 <__alt_data_end+0xf4044220>
   4468c:	4984b03a 	or	r2,r9,r6
   44690:	103e6326 	beq	r2,zero,44020 <__alt_data_end+0xf4044020>
   44694:	8987c83a 	sub	r3,r17,r6
   44698:	88c9803a 	cmpltu	r4,r17,r3
   4469c:	4245c83a 	sub	r2,r8,r9
   446a0:	1105c83a 	sub	r2,r2,r4
   446a4:	1100202c 	andhi	r4,r2,128
   446a8:	203ebb26 	beq	r4,zero,44198 <__alt_data_end+0xf4044198>
   446ac:	3463c83a 	sub	r17,r6,r17
   446b0:	4a07c83a 	sub	r3,r9,r8
   446b4:	344d803a 	cmpltu	r6,r6,r17
   446b8:	1991c83a 	sub	r8,r3,r6
   446bc:	3825883a 	mov	r18,r7
   446c0:	003e5706 	br	44020 <__alt_data_end+0xf4044020>
   446c4:	4984b03a 	or	r2,r9,r6
   446c8:	10002e26 	beq	r2,zero,44784 <__adddf3+0x7e0>
   446cc:	4004d0fa 	srli	r2,r8,3
   446d0:	8822d0fa 	srli	r17,r17,3
   446d4:	4010977a 	slli	r8,r8,29
   446d8:	10c0022c 	andhi	r3,r2,8
   446dc:	4462b03a 	or	r17,r8,r17
   446e0:	18000826 	beq	r3,zero,44704 <__adddf3+0x760>
   446e4:	4808d0fa 	srli	r4,r9,3
   446e8:	20c0022c 	andhi	r3,r4,8
   446ec:	1800051e 	bne	r3,zero,44704 <__adddf3+0x760>
   446f0:	300cd0fa 	srli	r6,r6,3
   446f4:	4806977a 	slli	r3,r9,29
   446f8:	2005883a 	mov	r2,r4
   446fc:	3825883a 	mov	r18,r7
   44700:	19a2b03a 	or	r17,r3,r6
   44704:	8810d77a 	srli	r8,r17,29
   44708:	100490fa 	slli	r2,r2,3
   4470c:	882290fa 	slli	r17,r17,3
   44710:	0401ffc4 	movi	r16,2047
   44714:	4090b03a 	or	r8,r8,r2
   44718:	003e4106 	br	44020 <__alt_data_end+0xf4044020>
   4471c:	0141ffc4 	movi	r5,2047
   44720:	117fc71e 	bne	r2,r5,44640 <__alt_data_end+0xf4044640>
   44724:	4811883a 	mov	r8,r9
   44728:	3023883a 	mov	r17,r6
   4472c:	1021883a 	mov	r16,r2
   44730:	003e3b06 	br	44020 <__alt_data_end+0xf4044020>
   44734:	10002f26 	beq	r2,zero,447f4 <__adddf3+0x850>
   44738:	4984b03a 	or	r2,r9,r6
   4473c:	10001126 	beq	r2,zero,44784 <__adddf3+0x7e0>
   44740:	4004d0fa 	srli	r2,r8,3
   44744:	8822d0fa 	srli	r17,r17,3
   44748:	4010977a 	slli	r8,r8,29
   4474c:	10c0022c 	andhi	r3,r2,8
   44750:	4462b03a 	or	r17,r8,r17
   44754:	183feb26 	beq	r3,zero,44704 <__alt_data_end+0xf4044704>
   44758:	4808d0fa 	srli	r4,r9,3
   4475c:	20c0022c 	andhi	r3,r4,8
   44760:	183fe81e 	bne	r3,zero,44704 <__alt_data_end+0xf4044704>
   44764:	300cd0fa 	srli	r6,r6,3
   44768:	4806977a 	slli	r3,r9,29
   4476c:	2005883a 	mov	r2,r4
   44770:	19a2b03a 	or	r17,r3,r6
   44774:	003fe306 	br	44704 <__alt_data_end+0xf4044704>
   44778:	0011883a 	mov	r8,zero
   4477c:	0005883a 	mov	r2,zero
   44780:	003e3f06 	br	44080 <__alt_data_end+0xf4044080>
   44784:	0401ffc4 	movi	r16,2047
   44788:	003e2506 	br	44020 <__alt_data_end+0xf4044020>
   4478c:	0013883a 	mov	r9,zero
   44790:	003f8406 	br	445a4 <__alt_data_end+0xf40445a4>
   44794:	0005883a 	mov	r2,zero
   44798:	0007883a 	mov	r3,zero
   4479c:	003e8906 	br	441c4 <__alt_data_end+0xf40441c4>
   447a0:	197ff804 	addi	r5,r3,-32
   447a4:	01000804 	movi	r4,32
   447a8:	414ad83a 	srl	r5,r8,r5
   447ac:	19002426 	beq	r3,r4,44840 <__adddf3+0x89c>
   447b0:	01001004 	movi	r4,64
   447b4:	20c7c83a 	sub	r3,r4,r3
   447b8:	40c6983a 	sll	r3,r8,r3
   447bc:	1c46b03a 	or	r3,r3,r17
   447c0:	1806c03a 	cmpne	r3,r3,zero
   447c4:	28e2b03a 	or	r17,r5,r3
   447c8:	0007883a 	mov	r3,zero
   447cc:	003f2306 	br	4445c <__alt_data_end+0xf404445c>
   447d0:	0007883a 	mov	r3,zero
   447d4:	5811883a 	mov	r8,r11
   447d8:	00bfffc4 	movi	r2,-1
   447dc:	0401ffc4 	movi	r16,2047
   447e0:	003e7806 	br	441c4 <__alt_data_end+0xf40441c4>
   447e4:	4462b03a 	or	r17,r8,r17
   447e8:	8822c03a 	cmpne	r17,r17,zero
   447ec:	0009883a 	mov	r4,zero
   447f0:	003fa006 	br	44674 <__alt_data_end+0xf4044674>
   447f4:	4811883a 	mov	r8,r9
   447f8:	3023883a 	mov	r17,r6
   447fc:	0401ffc4 	movi	r16,2047
   44800:	003e0706 	br	44020 <__alt_data_end+0xf4044020>
   44804:	4811883a 	mov	r8,r9
   44808:	3023883a 	mov	r17,r6
   4480c:	003e0406 	br	44020 <__alt_data_end+0xf4044020>
   44810:	21fff804 	addi	r7,r4,-32
   44814:	01400804 	movi	r5,32
   44818:	41ced83a 	srl	r7,r8,r7
   4481c:	21400a26 	beq	r4,r5,44848 <__adddf3+0x8a4>
   44820:	01401004 	movi	r5,64
   44824:	2909c83a 	sub	r4,r5,r4
   44828:	4108983a 	sll	r4,r8,r4
   4482c:	2448b03a 	or	r4,r4,r17
   44830:	2008c03a 	cmpne	r4,r4,zero
   44834:	3922b03a 	or	r17,r7,r4
   44838:	0009883a 	mov	r4,zero
   4483c:	003f8d06 	br	44674 <__alt_data_end+0xf4044674>
   44840:	0007883a 	mov	r3,zero
   44844:	003fdd06 	br	447bc <__alt_data_end+0xf40447bc>
   44848:	0009883a 	mov	r4,zero
   4484c:	003ff706 	br	4482c <__alt_data_end+0xf404482c>

00044850 <__divdf3>:
   44850:	defff004 	addi	sp,sp,-64
   44854:	dc800815 	stw	r18,32(sp)
   44858:	2824d53a 	srli	r18,r5,20
   4485c:	dd800c15 	stw	r22,48(sp)
   44860:	282cd7fa 	srli	r22,r5,31
   44864:	dc000615 	stw	r16,24(sp)
   44868:	04000434 	movhi	r16,16
   4486c:	843fffc4 	addi	r16,r16,-1
   44870:	dfc00f15 	stw	ra,60(sp)
   44874:	df000e15 	stw	fp,56(sp)
   44878:	ddc00d15 	stw	r23,52(sp)
   4487c:	dd400b15 	stw	r21,44(sp)
   44880:	dd000a15 	stw	r20,40(sp)
   44884:	dcc00915 	stw	r19,36(sp)
   44888:	dc400715 	stw	r17,28(sp)
   4488c:	9481ffcc 	andi	r18,r18,2047
   44890:	2c20703a 	and	r16,r5,r16
   44894:	b2003fcc 	andi	r8,r22,255
   44898:	90006126 	beq	r18,zero,44a20 <__divdf3+0x1d0>
   4489c:	0081ffc4 	movi	r2,2047
   448a0:	202b883a 	mov	r21,r4
   448a4:	90803726 	beq	r18,r2,44984 <__divdf3+0x134>
   448a8:	80800434 	orhi	r2,r16,16
   448ac:	100490fa 	slli	r2,r2,3
   448b0:	2020d77a 	srli	r16,r4,29
   448b4:	202a90fa 	slli	r21,r4,3
   448b8:	94bf0044 	addi	r18,r18,-1023
   448bc:	80a0b03a 	or	r16,r16,r2
   448c0:	0013883a 	mov	r9,zero
   448c4:	000b883a 	mov	r5,zero
   448c8:	3806d53a 	srli	r3,r7,20
   448cc:	382ed7fa 	srli	r23,r7,31
   448d0:	04400434 	movhi	r17,16
   448d4:	8c7fffc4 	addi	r17,r17,-1
   448d8:	18c1ffcc 	andi	r3,r3,2047
   448dc:	3029883a 	mov	r20,r6
   448e0:	3c62703a 	and	r17,r7,r17
   448e4:	bf003fcc 	andi	fp,r23,255
   448e8:	18006e26 	beq	r3,zero,44aa4 <__divdf3+0x254>
   448ec:	0081ffc4 	movi	r2,2047
   448f0:	18806626 	beq	r3,r2,44a8c <__divdf3+0x23c>
   448f4:	88800434 	orhi	r2,r17,16
   448f8:	100490fa 	slli	r2,r2,3
   448fc:	3022d77a 	srli	r17,r6,29
   44900:	302890fa 	slli	r20,r6,3
   44904:	18ff0044 	addi	r3,r3,-1023
   44908:	88a2b03a 	or	r17,r17,r2
   4490c:	000f883a 	mov	r7,zero
   44910:	b5e6f03a 	xor	r19,r22,r23
   44914:	3a4cb03a 	or	r6,r7,r9
   44918:	008003c4 	movi	r2,15
   4491c:	9809883a 	mov	r4,r19
   44920:	90c7c83a 	sub	r3,r18,r3
   44924:	9cc03fcc 	andi	r19,r19,255
   44928:	11809636 	bltu	r2,r6,44b84 <__divdf3+0x334>
   4492c:	300c90ba 	slli	r6,r6,2
   44930:	00800134 	movhi	r2,4
   44934:	10925104 	addi	r2,r2,18756
   44938:	308d883a 	add	r6,r6,r2
   4493c:	30800017 	ldw	r2,0(r6)
   44940:	1000683a 	jmp	r2
   44944:	00044b84 	movi	zero,4398
   44948:	000449bc 	xorhi	zero,zero,4390
   4494c:	00044b74 	movhi	zero,4397
   44950:	000449b0 	cmpltui	zero,zero,4390
   44954:	00044b74 	movhi	zero,4397
   44958:	00044b48 	cmpgei	zero,zero,4397
   4495c:	00044b74 	movhi	zero,4397
   44960:	000449b0 	cmpltui	zero,zero,4390
   44964:	000449bc 	xorhi	zero,zero,4390
   44968:	000449bc 	xorhi	zero,zero,4390
   4496c:	00044b48 	cmpgei	zero,zero,4397
   44970:	000449b0 	cmpltui	zero,zero,4390
   44974:	000449a0 	cmpeqi	zero,zero,4390
   44978:	000449a0 	cmpeqi	zero,zero,4390
   4497c:	000449a0 	cmpeqi	zero,zero,4390
   44980:	00044f0c 	andi	zero,zero,4412
   44984:	2404b03a 	or	r2,r4,r16
   44988:	10006c1e 	bne	r2,zero,44b3c <__divdf3+0x2ec>
   4498c:	02400204 	movi	r9,8
   44990:	0021883a 	mov	r16,zero
   44994:	002b883a 	mov	r21,zero
   44998:	01400084 	movi	r5,2
   4499c:	003fca06 	br	448c8 <__alt_data_end+0xf40448c8>
   449a0:	8023883a 	mov	r17,r16
   449a4:	a829883a 	mov	r20,r21
   449a8:	4039883a 	mov	fp,r8
   449ac:	280f883a 	mov	r7,r5
   449b0:	00800084 	movi	r2,2
   449b4:	3881601e 	bne	r7,r2,44f38 <__divdf3+0x6e8>
   449b8:	e027883a 	mov	r19,fp
   449bc:	9900004c 	andi	r4,r19,1
   449c0:	0081ffc4 	movi	r2,2047
   449c4:	0021883a 	mov	r16,zero
   449c8:	002b883a 	mov	r21,zero
   449cc:	1004953a 	slli	r2,r2,20
   449d0:	20c03fcc 	andi	r3,r4,255
   449d4:	01400434 	movhi	r5,16
   449d8:	297fffc4 	addi	r5,r5,-1
   449dc:	180697fa 	slli	r3,r3,31
   449e0:	8160703a 	and	r16,r16,r5
   449e4:	80a0b03a 	or	r16,r16,r2
   449e8:	80c6b03a 	or	r3,r16,r3
   449ec:	a805883a 	mov	r2,r21
   449f0:	dfc00f17 	ldw	ra,60(sp)
   449f4:	df000e17 	ldw	fp,56(sp)
   449f8:	ddc00d17 	ldw	r23,52(sp)
   449fc:	dd800c17 	ldw	r22,48(sp)
   44a00:	dd400b17 	ldw	r21,44(sp)
   44a04:	dd000a17 	ldw	r20,40(sp)
   44a08:	dcc00917 	ldw	r19,36(sp)
   44a0c:	dc800817 	ldw	r18,32(sp)
   44a10:	dc400717 	ldw	r17,28(sp)
   44a14:	dc000617 	ldw	r16,24(sp)
   44a18:	dec01004 	addi	sp,sp,64
   44a1c:	f800283a 	ret
   44a20:	2404b03a 	or	r2,r4,r16
   44a24:	2023883a 	mov	r17,r4
   44a28:	10003f26 	beq	r2,zero,44b28 <__divdf3+0x2d8>
   44a2c:	80015e26 	beq	r16,zero,44fa8 <__divdf3+0x758>
   44a30:	8009883a 	mov	r4,r16
   44a34:	d9800215 	stw	r6,8(sp)
   44a38:	d9c00515 	stw	r7,20(sp)
   44a3c:	da000415 	stw	r8,16(sp)
   44a40:	00467e40 	call	467e4 <__clzsi2>
   44a44:	d9800217 	ldw	r6,8(sp)
   44a48:	d9c00517 	ldw	r7,20(sp)
   44a4c:	da000417 	ldw	r8,16(sp)
   44a50:	113ffd44 	addi	r4,r2,-11
   44a54:	00c00704 	movi	r3,28
   44a58:	19014f16 	blt	r3,r4,44f98 <__divdf3+0x748>
   44a5c:	00c00744 	movi	r3,29
   44a60:	157ffe04 	addi	r21,r2,-8
   44a64:	1907c83a 	sub	r3,r3,r4
   44a68:	8560983a 	sll	r16,r16,r21
   44a6c:	88c6d83a 	srl	r3,r17,r3
   44a70:	8d6a983a 	sll	r21,r17,r21
   44a74:	1c20b03a 	or	r16,r3,r16
   44a78:	1080fcc4 	addi	r2,r2,1011
   44a7c:	00a5c83a 	sub	r18,zero,r2
   44a80:	0013883a 	mov	r9,zero
   44a84:	000b883a 	mov	r5,zero
   44a88:	003f8f06 	br	448c8 <__alt_data_end+0xf40448c8>
   44a8c:	3444b03a 	or	r2,r6,r17
   44a90:	1000231e 	bne	r2,zero,44b20 <__divdf3+0x2d0>
   44a94:	0023883a 	mov	r17,zero
   44a98:	0029883a 	mov	r20,zero
   44a9c:	01c00084 	movi	r7,2
   44aa0:	003f9b06 	br	44910 <__alt_data_end+0xf4044910>
   44aa4:	3444b03a 	or	r2,r6,r17
   44aa8:	10001926 	beq	r2,zero,44b10 <__divdf3+0x2c0>
   44aac:	88014b26 	beq	r17,zero,44fdc <__divdf3+0x78c>
   44ab0:	8809883a 	mov	r4,r17
   44ab4:	d9400115 	stw	r5,4(sp)
   44ab8:	d9800215 	stw	r6,8(sp)
   44abc:	da000415 	stw	r8,16(sp)
   44ac0:	da400315 	stw	r9,12(sp)
   44ac4:	00467e40 	call	467e4 <__clzsi2>
   44ac8:	d9400117 	ldw	r5,4(sp)
   44acc:	d9800217 	ldw	r6,8(sp)
   44ad0:	da000417 	ldw	r8,16(sp)
   44ad4:	da400317 	ldw	r9,12(sp)
   44ad8:	113ffd44 	addi	r4,r2,-11
   44adc:	00c00704 	movi	r3,28
   44ae0:	19013a16 	blt	r3,r4,44fcc <__divdf3+0x77c>
   44ae4:	00c00744 	movi	r3,29
   44ae8:	153ffe04 	addi	r20,r2,-8
   44aec:	1907c83a 	sub	r3,r3,r4
   44af0:	8d22983a 	sll	r17,r17,r20
   44af4:	30c6d83a 	srl	r3,r6,r3
   44af8:	3528983a 	sll	r20,r6,r20
   44afc:	1c62b03a 	or	r17,r3,r17
   44b00:	1080fcc4 	addi	r2,r2,1011
   44b04:	0087c83a 	sub	r3,zero,r2
   44b08:	000f883a 	mov	r7,zero
   44b0c:	003f8006 	br	44910 <__alt_data_end+0xf4044910>
   44b10:	0023883a 	mov	r17,zero
   44b14:	0029883a 	mov	r20,zero
   44b18:	01c00044 	movi	r7,1
   44b1c:	003f7c06 	br	44910 <__alt_data_end+0xf4044910>
   44b20:	01c000c4 	movi	r7,3
   44b24:	003f7a06 	br	44910 <__alt_data_end+0xf4044910>
   44b28:	02400104 	movi	r9,4
   44b2c:	0021883a 	mov	r16,zero
   44b30:	002b883a 	mov	r21,zero
   44b34:	01400044 	movi	r5,1
   44b38:	003f6306 	br	448c8 <__alt_data_end+0xf40448c8>
   44b3c:	02400304 	movi	r9,12
   44b40:	014000c4 	movi	r5,3
   44b44:	003f6006 	br	448c8 <__alt_data_end+0xf40448c8>
   44b48:	04000434 	movhi	r16,16
   44b4c:	0009883a 	mov	r4,zero
   44b50:	843fffc4 	addi	r16,r16,-1
   44b54:	057fffc4 	movi	r21,-1
   44b58:	0081ffc4 	movi	r2,2047
   44b5c:	003f9b06 	br	449cc <__alt_data_end+0xf40449cc>
   44b60:	00c00044 	movi	r3,1
   44b64:	1887c83a 	sub	r3,r3,r2
   44b68:	01000e04 	movi	r4,56
   44b6c:	20c1530e 	bge	r4,r3,450bc <__divdf3+0x86c>
   44b70:	9900004c 	andi	r4,r19,1
   44b74:	0005883a 	mov	r2,zero
   44b78:	0021883a 	mov	r16,zero
   44b7c:	002b883a 	mov	r21,zero
   44b80:	003f9206 	br	449cc <__alt_data_end+0xf40449cc>
   44b84:	8c012e36 	bltu	r17,r16,45040 <__divdf3+0x7f0>
   44b88:	84412c26 	beq	r16,r17,4503c <__divdf3+0x7ec>
   44b8c:	a82f883a 	mov	r23,r21
   44b90:	18ffffc4 	addi	r3,r3,-1
   44b94:	002b883a 	mov	r21,zero
   44b98:	a004d63a 	srli	r2,r20,24
   44b9c:	8822923a 	slli	r17,r17,8
   44ba0:	a028923a 	slli	r20,r20,8
   44ba4:	8009883a 	mov	r4,r16
   44ba8:	88acb03a 	or	r22,r17,r2
   44bac:	dd000015 	stw	r20,0(sp)
   44bb0:	b028d43a 	srli	r20,r22,16
   44bb4:	d8c00215 	stw	r3,8(sp)
   44bb8:	b4bfffcc 	andi	r18,r22,65535
   44bbc:	a00b883a 	mov	r5,r20
   44bc0:	0043ec00 	call	43ec0 <__udivsi3>
   44bc4:	100b883a 	mov	r5,r2
   44bc8:	9009883a 	mov	r4,r18
   44bcc:	1023883a 	mov	r17,r2
   44bd0:	0043f7c0 	call	43f7c <__mulsi3>
   44bd4:	8009883a 	mov	r4,r16
   44bd8:	a00b883a 	mov	r5,r20
   44bdc:	1039883a 	mov	fp,r2
   44be0:	0043f240 	call	43f24 <__umodsi3>
   44be4:	1004943a 	slli	r2,r2,16
   44be8:	b808d43a 	srli	r4,r23,16
   44bec:	d8c00217 	ldw	r3,8(sp)
   44bf0:	2084b03a 	or	r2,r4,r2
   44bf4:	1700062e 	bgeu	r2,fp,44c10 <__divdf3+0x3c0>
   44bf8:	1585883a 	add	r2,r2,r22
   44bfc:	893fffc4 	addi	r4,r17,-1
   44c00:	15811d36 	bltu	r2,r22,45078 <__divdf3+0x828>
   44c04:	17011c2e 	bgeu	r2,fp,45078 <__divdf3+0x828>
   44c08:	8c7fff84 	addi	r17,r17,-2
   44c0c:	1585883a 	add	r2,r2,r22
   44c10:	1739c83a 	sub	fp,r2,fp
   44c14:	a00b883a 	mov	r5,r20
   44c18:	e009883a 	mov	r4,fp
   44c1c:	d8c00215 	stw	r3,8(sp)
   44c20:	0043ec00 	call	43ec0 <__udivsi3>
   44c24:	100b883a 	mov	r5,r2
   44c28:	9009883a 	mov	r4,r18
   44c2c:	1021883a 	mov	r16,r2
   44c30:	0043f7c0 	call	43f7c <__mulsi3>
   44c34:	a00b883a 	mov	r5,r20
   44c38:	e009883a 	mov	r4,fp
   44c3c:	d8800415 	stw	r2,16(sp)
   44c40:	0043f240 	call	43f24 <__umodsi3>
   44c44:	1004943a 	slli	r2,r2,16
   44c48:	da000417 	ldw	r8,16(sp)
   44c4c:	bdffffcc 	andi	r23,r23,65535
   44c50:	b884b03a 	or	r2,r23,r2
   44c54:	d8c00217 	ldw	r3,8(sp)
   44c58:	1200062e 	bgeu	r2,r8,44c74 <__divdf3+0x424>
   44c5c:	1585883a 	add	r2,r2,r22
   44c60:	813fffc4 	addi	r4,r16,-1
   44c64:	15810236 	bltu	r2,r22,45070 <__divdf3+0x820>
   44c68:	1201012e 	bgeu	r2,r8,45070 <__divdf3+0x820>
   44c6c:	843fff84 	addi	r16,r16,-2
   44c70:	1585883a 	add	r2,r2,r22
   44c74:	8822943a 	slli	r17,r17,16
   44c78:	d9800017 	ldw	r6,0(sp)
   44c7c:	1211c83a 	sub	r8,r2,r8
   44c80:	8c22b03a 	or	r17,r17,r16
   44c84:	373fffcc 	andi	fp,r6,65535
   44c88:	8abfffcc 	andi	r10,r17,65535
   44c8c:	8820d43a 	srli	r16,r17,16
   44c90:	5009883a 	mov	r4,r10
   44c94:	e00b883a 	mov	r5,fp
   44c98:	302ed43a 	srli	r23,r6,16
   44c9c:	d8c00215 	stw	r3,8(sp)
   44ca0:	da000415 	stw	r8,16(sp)
   44ca4:	da800115 	stw	r10,4(sp)
   44ca8:	0043f7c0 	call	43f7c <__mulsi3>
   44cac:	800b883a 	mov	r5,r16
   44cb0:	e009883a 	mov	r4,fp
   44cb4:	d8800515 	stw	r2,20(sp)
   44cb8:	0043f7c0 	call	43f7c <__mulsi3>
   44cbc:	8009883a 	mov	r4,r16
   44cc0:	b80b883a 	mov	r5,r23
   44cc4:	d8800315 	stw	r2,12(sp)
   44cc8:	0043f7c0 	call	43f7c <__mulsi3>
   44ccc:	da800117 	ldw	r10,4(sp)
   44cd0:	b80b883a 	mov	r5,r23
   44cd4:	1021883a 	mov	r16,r2
   44cd8:	5009883a 	mov	r4,r10
   44cdc:	0043f7c0 	call	43f7c <__mulsi3>
   44ce0:	d9c00517 	ldw	r7,20(sp)
   44ce4:	da400317 	ldw	r9,12(sp)
   44ce8:	d8c00217 	ldw	r3,8(sp)
   44cec:	3808d43a 	srli	r4,r7,16
   44cf0:	1245883a 	add	r2,r2,r9
   44cf4:	da000417 	ldw	r8,16(sp)
   44cf8:	2085883a 	add	r2,r4,r2
   44cfc:	1240022e 	bgeu	r2,r9,44d08 <__divdf3+0x4b8>
   44d00:	01000074 	movhi	r4,1
   44d04:	8121883a 	add	r16,r16,r4
   44d08:	1008d43a 	srli	r4,r2,16
   44d0c:	1004943a 	slli	r2,r2,16
   44d10:	39ffffcc 	andi	r7,r7,65535
   44d14:	2409883a 	add	r4,r4,r16
   44d18:	11c5883a 	add	r2,r2,r7
   44d1c:	4100bb36 	bltu	r8,r4,4500c <__divdf3+0x7bc>
   44d20:	4100d726 	beq	r8,r4,45080 <__divdf3+0x830>
   44d24:	4109c83a 	sub	r4,r8,r4
   44d28:	a8a1c83a 	sub	r16,r21,r2
   44d2c:	ac2b803a 	cmpltu	r21,r21,r16
   44d30:	256bc83a 	sub	r21,r4,r21
   44d34:	b540d926 	beq	r22,r21,4509c <__divdf3+0x84c>
   44d38:	a00b883a 	mov	r5,r20
   44d3c:	a809883a 	mov	r4,r21
   44d40:	d8c00215 	stw	r3,8(sp)
   44d44:	0043ec00 	call	43ec0 <__udivsi3>
   44d48:	100b883a 	mov	r5,r2
   44d4c:	9009883a 	mov	r4,r18
   44d50:	d8800515 	stw	r2,20(sp)
   44d54:	0043f7c0 	call	43f7c <__mulsi3>
   44d58:	a809883a 	mov	r4,r21
   44d5c:	a00b883a 	mov	r5,r20
   44d60:	d8800415 	stw	r2,16(sp)
   44d64:	0043f240 	call	43f24 <__umodsi3>
   44d68:	1004943a 	slli	r2,r2,16
   44d6c:	8008d43a 	srli	r4,r16,16
   44d70:	da000417 	ldw	r8,16(sp)
   44d74:	d8c00217 	ldw	r3,8(sp)
   44d78:	2084b03a 	or	r2,r4,r2
   44d7c:	d9c00517 	ldw	r7,20(sp)
   44d80:	1200062e 	bgeu	r2,r8,44d9c <__divdf3+0x54c>
   44d84:	1585883a 	add	r2,r2,r22
   44d88:	393fffc4 	addi	r4,r7,-1
   44d8c:	1580c536 	bltu	r2,r22,450a4 <__divdf3+0x854>
   44d90:	1200c42e 	bgeu	r2,r8,450a4 <__divdf3+0x854>
   44d94:	39ffff84 	addi	r7,r7,-2
   44d98:	1585883a 	add	r2,r2,r22
   44d9c:	122bc83a 	sub	r21,r2,r8
   44da0:	a00b883a 	mov	r5,r20
   44da4:	a809883a 	mov	r4,r21
   44da8:	d8c00215 	stw	r3,8(sp)
   44dac:	d9c00515 	stw	r7,20(sp)
   44db0:	0043ec00 	call	43ec0 <__udivsi3>
   44db4:	9009883a 	mov	r4,r18
   44db8:	100b883a 	mov	r5,r2
   44dbc:	d8800415 	stw	r2,16(sp)
   44dc0:	0043f7c0 	call	43f7c <__mulsi3>
   44dc4:	a809883a 	mov	r4,r21
   44dc8:	a00b883a 	mov	r5,r20
   44dcc:	1025883a 	mov	r18,r2
   44dd0:	0043f240 	call	43f24 <__umodsi3>
   44dd4:	1004943a 	slli	r2,r2,16
   44dd8:	813fffcc 	andi	r4,r16,65535
   44ddc:	d8c00217 	ldw	r3,8(sp)
   44de0:	20a0b03a 	or	r16,r4,r2
   44de4:	d9c00517 	ldw	r7,20(sp)
   44de8:	da000417 	ldw	r8,16(sp)
   44dec:	8480062e 	bgeu	r16,r18,44e08 <__divdf3+0x5b8>
   44df0:	85a1883a 	add	r16,r16,r22
   44df4:	40bfffc4 	addi	r2,r8,-1
   44df8:	8580ac36 	bltu	r16,r22,450ac <__divdf3+0x85c>
   44dfc:	8480ab2e 	bgeu	r16,r18,450ac <__divdf3+0x85c>
   44e00:	423fff84 	addi	r8,r8,-2
   44e04:	85a1883a 	add	r16,r16,r22
   44e08:	3804943a 	slli	r2,r7,16
   44e0c:	84a1c83a 	sub	r16,r16,r18
   44e10:	e009883a 	mov	r4,fp
   44e14:	1228b03a 	or	r20,r2,r8
   44e18:	a1ffffcc 	andi	r7,r20,65535
   44e1c:	a024d43a 	srli	r18,r20,16
   44e20:	380b883a 	mov	r5,r7
   44e24:	d8c00215 	stw	r3,8(sp)
   44e28:	d9c00515 	stw	r7,20(sp)
   44e2c:	0043f7c0 	call	43f7c <__mulsi3>
   44e30:	900b883a 	mov	r5,r18
   44e34:	e009883a 	mov	r4,fp
   44e38:	102b883a 	mov	r21,r2
   44e3c:	0043f7c0 	call	43f7c <__mulsi3>
   44e40:	900b883a 	mov	r5,r18
   44e44:	b809883a 	mov	r4,r23
   44e48:	1039883a 	mov	fp,r2
   44e4c:	0043f7c0 	call	43f7c <__mulsi3>
   44e50:	d9c00517 	ldw	r7,20(sp)
   44e54:	b80b883a 	mov	r5,r23
   44e58:	1025883a 	mov	r18,r2
   44e5c:	3809883a 	mov	r4,r7
   44e60:	0043f7c0 	call	43f7c <__mulsi3>
   44e64:	a808d43a 	srli	r4,r21,16
   44e68:	1705883a 	add	r2,r2,fp
   44e6c:	d8c00217 	ldw	r3,8(sp)
   44e70:	2085883a 	add	r2,r4,r2
   44e74:	1700022e 	bgeu	r2,fp,44e80 <__divdf3+0x630>
   44e78:	01000074 	movhi	r4,1
   44e7c:	9125883a 	add	r18,r18,r4
   44e80:	1008d43a 	srli	r4,r2,16
   44e84:	1004943a 	slli	r2,r2,16
   44e88:	ad7fffcc 	andi	r21,r21,65535
   44e8c:	2489883a 	add	r4,r4,r18
   44e90:	1545883a 	add	r2,r2,r21
   44e94:	81003836 	bltu	r16,r4,44f78 <__divdf3+0x728>
   44e98:	81003626 	beq	r16,r4,44f74 <__divdf3+0x724>
   44e9c:	a5000054 	ori	r20,r20,1
   44ea0:	1880ffc4 	addi	r2,r3,1023
   44ea4:	00bf2e0e 	bge	zero,r2,44b60 <__alt_data_end+0xf4044b60>
   44ea8:	a10001cc 	andi	r4,r20,7
   44eac:	20000726 	beq	r4,zero,44ecc <__divdf3+0x67c>
   44eb0:	a10003cc 	andi	r4,r20,15
   44eb4:	01400104 	movi	r5,4
   44eb8:	21400426 	beq	r4,r5,44ecc <__divdf3+0x67c>
   44ebc:	a149883a 	add	r4,r20,r5
   44ec0:	2529803a 	cmpltu	r20,r4,r20
   44ec4:	8d23883a 	add	r17,r17,r20
   44ec8:	2029883a 	mov	r20,r4
   44ecc:	8900402c 	andhi	r4,r17,256
   44ed0:	20000426 	beq	r4,zero,44ee4 <__divdf3+0x694>
   44ed4:	18810004 	addi	r2,r3,1024
   44ed8:	00ffc034 	movhi	r3,65280
   44edc:	18ffffc4 	addi	r3,r3,-1
   44ee0:	88e2703a 	and	r17,r17,r3
   44ee4:	00c1ff84 	movi	r3,2046
   44ee8:	18beb416 	blt	r3,r2,449bc <__alt_data_end+0xf40449bc>
   44eec:	a028d0fa 	srli	r20,r20,3
   44ef0:	882a977a 	slli	r21,r17,29
   44ef4:	8820927a 	slli	r16,r17,9
   44ef8:	1081ffcc 	andi	r2,r2,2047
   44efc:	ad2ab03a 	or	r21,r21,r20
   44f00:	8020d33a 	srli	r16,r16,12
   44f04:	9900004c 	andi	r4,r19,1
   44f08:	003eb006 	br	449cc <__alt_data_end+0xf40449cc>
   44f0c:	8080022c 	andhi	r2,r16,8
   44f10:	10001226 	beq	r2,zero,44f5c <__divdf3+0x70c>
   44f14:	8880022c 	andhi	r2,r17,8
   44f18:	1000101e 	bne	r2,zero,44f5c <__divdf3+0x70c>
   44f1c:	00800434 	movhi	r2,16
   44f20:	8c000234 	orhi	r16,r17,8
   44f24:	10bfffc4 	addi	r2,r2,-1
   44f28:	b809883a 	mov	r4,r23
   44f2c:	80a0703a 	and	r16,r16,r2
   44f30:	a02b883a 	mov	r21,r20
   44f34:	003f0806 	br	44b58 <__alt_data_end+0xf4044b58>
   44f38:	008000c4 	movi	r2,3
   44f3c:	3880b126 	beq	r7,r2,45204 <__divdf3+0x9b4>
   44f40:	00800044 	movi	r2,1
   44f44:	38805b1e 	bne	r7,r2,450b4 <__divdf3+0x864>
   44f48:	e009883a 	mov	r4,fp
   44f4c:	0005883a 	mov	r2,zero
   44f50:	0021883a 	mov	r16,zero
   44f54:	002b883a 	mov	r21,zero
   44f58:	003e9c06 	br	449cc <__alt_data_end+0xf40449cc>
   44f5c:	00800434 	movhi	r2,16
   44f60:	84000234 	orhi	r16,r16,8
   44f64:	10bfffc4 	addi	r2,r2,-1
   44f68:	b009883a 	mov	r4,r22
   44f6c:	80a0703a 	and	r16,r16,r2
   44f70:	003ef906 	br	44b58 <__alt_data_end+0xf4044b58>
   44f74:	103fca26 	beq	r2,zero,44ea0 <__alt_data_end+0xf4044ea0>
   44f78:	b421883a 	add	r16,r22,r16
   44f7c:	a17fffc4 	addi	r5,r20,-1
   44f80:	8580422e 	bgeu	r16,r22,4508c <__divdf3+0x83c>
   44f84:	2829883a 	mov	r20,r5
   44f88:	813fc41e 	bne	r16,r4,44e9c <__alt_data_end+0xf4044e9c>
   44f8c:	d9800017 	ldw	r6,0(sp)
   44f90:	30bfc21e 	bne	r6,r2,44e9c <__alt_data_end+0xf4044e9c>
   44f94:	003fc206 	br	44ea0 <__alt_data_end+0xf4044ea0>
   44f98:	143ff604 	addi	r16,r2,-40
   44f9c:	8c20983a 	sll	r16,r17,r16
   44fa0:	002b883a 	mov	r21,zero
   44fa4:	003eb406 	br	44a78 <__alt_data_end+0xf4044a78>
   44fa8:	d9800215 	stw	r6,8(sp)
   44fac:	d9c00515 	stw	r7,20(sp)
   44fb0:	da000415 	stw	r8,16(sp)
   44fb4:	00467e40 	call	467e4 <__clzsi2>
   44fb8:	10800804 	addi	r2,r2,32
   44fbc:	da000417 	ldw	r8,16(sp)
   44fc0:	d9c00517 	ldw	r7,20(sp)
   44fc4:	d9800217 	ldw	r6,8(sp)
   44fc8:	003ea106 	br	44a50 <__alt_data_end+0xf4044a50>
   44fcc:	147ff604 	addi	r17,r2,-40
   44fd0:	3462983a 	sll	r17,r6,r17
   44fd4:	0029883a 	mov	r20,zero
   44fd8:	003ec906 	br	44b00 <__alt_data_end+0xf4044b00>
   44fdc:	3009883a 	mov	r4,r6
   44fe0:	d9400115 	stw	r5,4(sp)
   44fe4:	d9800215 	stw	r6,8(sp)
   44fe8:	da000415 	stw	r8,16(sp)
   44fec:	da400315 	stw	r9,12(sp)
   44ff0:	00467e40 	call	467e4 <__clzsi2>
   44ff4:	10800804 	addi	r2,r2,32
   44ff8:	da400317 	ldw	r9,12(sp)
   44ffc:	da000417 	ldw	r8,16(sp)
   45000:	d9800217 	ldw	r6,8(sp)
   45004:	d9400117 	ldw	r5,4(sp)
   45008:	003eb306 	br	44ad8 <__alt_data_end+0xf4044ad8>
   4500c:	d9800017 	ldw	r6,0(sp)
   45010:	a9ab883a 	add	r21,r21,r6
   45014:	a98b803a 	cmpltu	r5,r21,r6
   45018:	2d8b883a 	add	r5,r5,r22
   4501c:	2a11883a 	add	r8,r5,r8
   45020:	897fffc4 	addi	r5,r17,-1
   45024:	b2000c2e 	bgeu	r22,r8,45058 <__divdf3+0x808>
   45028:	41003f36 	bltu	r8,r4,45128 <__divdf3+0x8d8>
   4502c:	22006c26 	beq	r4,r8,451e0 <__divdf3+0x990>
   45030:	4109c83a 	sub	r4,r8,r4
   45034:	2823883a 	mov	r17,r5
   45038:	003f3b06 	br	44d28 <__alt_data_end+0xf4044d28>
   4503c:	ad3ed336 	bltu	r21,r20,44b8c <__alt_data_end+0xf4044b8c>
   45040:	a804d07a 	srli	r2,r21,1
   45044:	802e97fa 	slli	r23,r16,31
   45048:	a82a97fa 	slli	r21,r21,31
   4504c:	8020d07a 	srli	r16,r16,1
   45050:	b8aeb03a 	or	r23,r23,r2
   45054:	003ed006 	br	44b98 <__alt_data_end+0xf4044b98>
   45058:	b23ff51e 	bne	r22,r8,45030 <__alt_data_end+0xf4045030>
   4505c:	d9800017 	ldw	r6,0(sp)
   45060:	a9bff12e 	bgeu	r21,r6,45028 <__alt_data_end+0xf4045028>
   45064:	b109c83a 	sub	r4,r22,r4
   45068:	2823883a 	mov	r17,r5
   4506c:	003f2e06 	br	44d28 <__alt_data_end+0xf4044d28>
   45070:	2021883a 	mov	r16,r4
   45074:	003eff06 	br	44c74 <__alt_data_end+0xf4044c74>
   45078:	2023883a 	mov	r17,r4
   4507c:	003ee406 	br	44c10 <__alt_data_end+0xf4044c10>
   45080:	a8bfe236 	bltu	r21,r2,4500c <__alt_data_end+0xf404500c>
   45084:	0009883a 	mov	r4,zero
   45088:	003f2706 	br	44d28 <__alt_data_end+0xf4044d28>
   4508c:	81002d36 	bltu	r16,r4,45144 <__divdf3+0x8f4>
   45090:	24005626 	beq	r4,r16,451ec <__divdf3+0x99c>
   45094:	2829883a 	mov	r20,r5
   45098:	003f8006 	br	44e9c <__alt_data_end+0xf4044e9c>
   4509c:	053fffc4 	movi	r20,-1
   450a0:	003f7f06 	br	44ea0 <__alt_data_end+0xf4044ea0>
   450a4:	200f883a 	mov	r7,r4
   450a8:	003f3c06 	br	44d9c <__alt_data_end+0xf4044d9c>
   450ac:	1011883a 	mov	r8,r2
   450b0:	003f5506 	br	44e08 <__alt_data_end+0xf4044e08>
   450b4:	e027883a 	mov	r19,fp
   450b8:	003f7906 	br	44ea0 <__alt_data_end+0xf4044ea0>
   450bc:	010007c4 	movi	r4,31
   450c0:	20c02816 	blt	r4,r3,45164 <__divdf3+0x914>
   450c4:	00800804 	movi	r2,32
   450c8:	10c5c83a 	sub	r2,r2,r3
   450cc:	888a983a 	sll	r5,r17,r2
   450d0:	a0c8d83a 	srl	r4,r20,r3
   450d4:	a084983a 	sll	r2,r20,r2
   450d8:	88e2d83a 	srl	r17,r17,r3
   450dc:	2906b03a 	or	r3,r5,r4
   450e0:	1004c03a 	cmpne	r2,r2,zero
   450e4:	1886b03a 	or	r3,r3,r2
   450e8:	188001cc 	andi	r2,r3,7
   450ec:	10000726 	beq	r2,zero,4510c <__divdf3+0x8bc>
   450f0:	188003cc 	andi	r2,r3,15
   450f4:	01000104 	movi	r4,4
   450f8:	11000426 	beq	r2,r4,4510c <__divdf3+0x8bc>
   450fc:	1805883a 	mov	r2,r3
   45100:	10c00104 	addi	r3,r2,4
   45104:	1885803a 	cmpltu	r2,r3,r2
   45108:	88a3883a 	add	r17,r17,r2
   4510c:	8880202c 	andhi	r2,r17,128
   45110:	10002926 	beq	r2,zero,451b8 <__divdf3+0x968>
   45114:	9900004c 	andi	r4,r19,1
   45118:	00800044 	movi	r2,1
   4511c:	0021883a 	mov	r16,zero
   45120:	002b883a 	mov	r21,zero
   45124:	003e2906 	br	449cc <__alt_data_end+0xf40449cc>
   45128:	d9800017 	ldw	r6,0(sp)
   4512c:	8c7fff84 	addi	r17,r17,-2
   45130:	a9ab883a 	add	r21,r21,r6
   45134:	a98b803a 	cmpltu	r5,r21,r6
   45138:	2d8b883a 	add	r5,r5,r22
   4513c:	2a11883a 	add	r8,r5,r8
   45140:	003ef806 	br	44d24 <__alt_data_end+0xf4044d24>
   45144:	d9800017 	ldw	r6,0(sp)
   45148:	318f883a 	add	r7,r6,r6
   4514c:	398b803a 	cmpltu	r5,r7,r6
   45150:	2d8d883a 	add	r6,r5,r22
   45154:	81a1883a 	add	r16,r16,r6
   45158:	a17fff84 	addi	r5,r20,-2
   4515c:	d9c00015 	stw	r7,0(sp)
   45160:	003f8806 	br	44f84 <__alt_data_end+0xf4044f84>
   45164:	013ff844 	movi	r4,-31
   45168:	2085c83a 	sub	r2,r4,r2
   4516c:	8888d83a 	srl	r4,r17,r2
   45170:	00800804 	movi	r2,32
   45174:	18802126 	beq	r3,r2,451fc <__divdf3+0x9ac>
   45178:	04001004 	movi	r16,64
   4517c:	80c7c83a 	sub	r3,r16,r3
   45180:	88e0983a 	sll	r16,r17,r3
   45184:	8504b03a 	or	r2,r16,r20
   45188:	1004c03a 	cmpne	r2,r2,zero
   4518c:	2084b03a 	or	r2,r4,r2
   45190:	144001cc 	andi	r17,r2,7
   45194:	88000d1e 	bne	r17,zero,451cc <__divdf3+0x97c>
   45198:	0021883a 	mov	r16,zero
   4519c:	102ad0fa 	srli	r21,r2,3
   451a0:	9900004c 	andi	r4,r19,1
   451a4:	0005883a 	mov	r2,zero
   451a8:	ac6ab03a 	or	r21,r21,r17
   451ac:	003e0706 	br	449cc <__alt_data_end+0xf40449cc>
   451b0:	1007883a 	mov	r3,r2
   451b4:	0023883a 	mov	r17,zero
   451b8:	8820927a 	slli	r16,r17,9
   451bc:	1805883a 	mov	r2,r3
   451c0:	8822977a 	slli	r17,r17,29
   451c4:	8020d33a 	srli	r16,r16,12
   451c8:	003ff406 	br	4519c <__alt_data_end+0xf404519c>
   451cc:	10c003cc 	andi	r3,r2,15
   451d0:	01000104 	movi	r4,4
   451d4:	193ff626 	beq	r3,r4,451b0 <__alt_data_end+0xf40451b0>
   451d8:	0023883a 	mov	r17,zero
   451dc:	003fc806 	br	45100 <__alt_data_end+0xf4045100>
   451e0:	a8bfd136 	bltu	r21,r2,45128 <__alt_data_end+0xf4045128>
   451e4:	2823883a 	mov	r17,r5
   451e8:	003fa606 	br	45084 <__alt_data_end+0xf4045084>
   451ec:	d9800017 	ldw	r6,0(sp)
   451f0:	30bfd436 	bltu	r6,r2,45144 <__alt_data_end+0xf4045144>
   451f4:	2829883a 	mov	r20,r5
   451f8:	003f6406 	br	44f8c <__alt_data_end+0xf4044f8c>
   451fc:	0021883a 	mov	r16,zero
   45200:	003fe006 	br	45184 <__alt_data_end+0xf4045184>
   45204:	00800434 	movhi	r2,16
   45208:	8c000234 	orhi	r16,r17,8
   4520c:	10bfffc4 	addi	r2,r2,-1
   45210:	e009883a 	mov	r4,fp
   45214:	80a0703a 	and	r16,r16,r2
   45218:	a02b883a 	mov	r21,r20
   4521c:	003e4e06 	br	44b58 <__alt_data_end+0xf4044b58>

00045220 <__eqdf2>:
   45220:	2804d53a 	srli	r2,r5,20
   45224:	3806d53a 	srli	r3,r7,20
   45228:	02000434 	movhi	r8,16
   4522c:	423fffc4 	addi	r8,r8,-1
   45230:	1081ffcc 	andi	r2,r2,2047
   45234:	0281ffc4 	movi	r10,2047
   45238:	2a12703a 	and	r9,r5,r8
   4523c:	18c1ffcc 	andi	r3,r3,2047
   45240:	3a10703a 	and	r8,r7,r8
   45244:	280ad7fa 	srli	r5,r5,31
   45248:	380ed7fa 	srli	r7,r7,31
   4524c:	12801026 	beq	r2,r10,45290 <__eqdf2+0x70>
   45250:	0281ffc4 	movi	r10,2047
   45254:	1a800a26 	beq	r3,r10,45280 <__eqdf2+0x60>
   45258:	10c00226 	beq	r2,r3,45264 <__eqdf2+0x44>
   4525c:	00800044 	movi	r2,1
   45260:	f800283a 	ret
   45264:	4a3ffd1e 	bne	r9,r8,4525c <__alt_data_end+0xf404525c>
   45268:	21bffc1e 	bne	r4,r6,4525c <__alt_data_end+0xf404525c>
   4526c:	29c00c26 	beq	r5,r7,452a0 <__eqdf2+0x80>
   45270:	103ffa1e 	bne	r2,zero,4525c <__alt_data_end+0xf404525c>
   45274:	2244b03a 	or	r2,r4,r9
   45278:	1004c03a 	cmpne	r2,r2,zero
   4527c:	f800283a 	ret
   45280:	3214b03a 	or	r10,r6,r8
   45284:	503ff426 	beq	r10,zero,45258 <__alt_data_end+0xf4045258>
   45288:	00800044 	movi	r2,1
   4528c:	f800283a 	ret
   45290:	2254b03a 	or	r10,r4,r9
   45294:	503fee26 	beq	r10,zero,45250 <__alt_data_end+0xf4045250>
   45298:	00800044 	movi	r2,1
   4529c:	f800283a 	ret
   452a0:	0005883a 	mov	r2,zero
   452a4:	f800283a 	ret

000452a8 <__gedf2>:
   452a8:	2804d53a 	srli	r2,r5,20
   452ac:	3806d53a 	srli	r3,r7,20
   452b0:	02000434 	movhi	r8,16
   452b4:	423fffc4 	addi	r8,r8,-1
   452b8:	1081ffcc 	andi	r2,r2,2047
   452bc:	0241ffc4 	movi	r9,2047
   452c0:	2a14703a 	and	r10,r5,r8
   452c4:	18c1ffcc 	andi	r3,r3,2047
   452c8:	3a10703a 	and	r8,r7,r8
   452cc:	280ad7fa 	srli	r5,r5,31
   452d0:	380ed7fa 	srli	r7,r7,31
   452d4:	12401d26 	beq	r2,r9,4534c <__gedf2+0xa4>
   452d8:	0241ffc4 	movi	r9,2047
   452dc:	1a401226 	beq	r3,r9,45328 <__gedf2+0x80>
   452e0:	1000081e 	bne	r2,zero,45304 <__gedf2+0x5c>
   452e4:	2296b03a 	or	r11,r4,r10
   452e8:	5813003a 	cmpeq	r9,r11,zero
   452ec:	1800091e 	bne	r3,zero,45314 <__gedf2+0x6c>
   452f0:	3218b03a 	or	r12,r6,r8
   452f4:	6000071e 	bne	r12,zero,45314 <__gedf2+0x6c>
   452f8:	0005883a 	mov	r2,zero
   452fc:	5800101e 	bne	r11,zero,45340 <__gedf2+0x98>
   45300:	f800283a 	ret
   45304:	18000c1e 	bne	r3,zero,45338 <__gedf2+0x90>
   45308:	3212b03a 	or	r9,r6,r8
   4530c:	48000c26 	beq	r9,zero,45340 <__gedf2+0x98>
   45310:	0013883a 	mov	r9,zero
   45314:	39c03fcc 	andi	r7,r7,255
   45318:	48000826 	beq	r9,zero,4533c <__gedf2+0x94>
   4531c:	38000926 	beq	r7,zero,45344 <__gedf2+0x9c>
   45320:	00800044 	movi	r2,1
   45324:	f800283a 	ret
   45328:	3212b03a 	or	r9,r6,r8
   4532c:	483fec26 	beq	r9,zero,452e0 <__alt_data_end+0xf40452e0>
   45330:	00bfff84 	movi	r2,-2
   45334:	f800283a 	ret
   45338:	39c03fcc 	andi	r7,r7,255
   4533c:	29c00626 	beq	r5,r7,45358 <__gedf2+0xb0>
   45340:	283ff726 	beq	r5,zero,45320 <__alt_data_end+0xf4045320>
   45344:	00bfffc4 	movi	r2,-1
   45348:	f800283a 	ret
   4534c:	2292b03a 	or	r9,r4,r10
   45350:	483fe126 	beq	r9,zero,452d8 <__alt_data_end+0xf40452d8>
   45354:	003ff606 	br	45330 <__alt_data_end+0xf4045330>
   45358:	18bff916 	blt	r3,r2,45340 <__alt_data_end+0xf4045340>
   4535c:	10c00316 	blt	r2,r3,4536c <__gedf2+0xc4>
   45360:	42bff736 	bltu	r8,r10,45340 <__alt_data_end+0xf4045340>
   45364:	52000326 	beq	r10,r8,45374 <__gedf2+0xcc>
   45368:	5200042e 	bgeu	r10,r8,4537c <__gedf2+0xd4>
   4536c:	283fec1e 	bne	r5,zero,45320 <__alt_data_end+0xf4045320>
   45370:	003ff406 	br	45344 <__alt_data_end+0xf4045344>
   45374:	313ff236 	bltu	r6,r4,45340 <__alt_data_end+0xf4045340>
   45378:	21bffc36 	bltu	r4,r6,4536c <__alt_data_end+0xf404536c>
   4537c:	0005883a 	mov	r2,zero
   45380:	f800283a 	ret

00045384 <__ledf2>:
   45384:	2804d53a 	srli	r2,r5,20
   45388:	3810d53a 	srli	r8,r7,20
   4538c:	00c00434 	movhi	r3,16
   45390:	18ffffc4 	addi	r3,r3,-1
   45394:	1081ffcc 	andi	r2,r2,2047
   45398:	0241ffc4 	movi	r9,2047
   4539c:	28d4703a 	and	r10,r5,r3
   453a0:	4201ffcc 	andi	r8,r8,2047
   453a4:	38c6703a 	and	r3,r7,r3
   453a8:	280ad7fa 	srli	r5,r5,31
   453ac:	380ed7fa 	srli	r7,r7,31
   453b0:	12401f26 	beq	r2,r9,45430 <__ledf2+0xac>
   453b4:	0241ffc4 	movi	r9,2047
   453b8:	42401426 	beq	r8,r9,4540c <__ledf2+0x88>
   453bc:	1000091e 	bne	r2,zero,453e4 <__ledf2+0x60>
   453c0:	2296b03a 	or	r11,r4,r10
   453c4:	5813003a 	cmpeq	r9,r11,zero
   453c8:	29403fcc 	andi	r5,r5,255
   453cc:	40000a1e 	bne	r8,zero,453f8 <__ledf2+0x74>
   453d0:	30d8b03a 	or	r12,r6,r3
   453d4:	6000081e 	bne	r12,zero,453f8 <__ledf2+0x74>
   453d8:	0005883a 	mov	r2,zero
   453dc:	5800111e 	bne	r11,zero,45424 <__ledf2+0xa0>
   453e0:	f800283a 	ret
   453e4:	29403fcc 	andi	r5,r5,255
   453e8:	40000c1e 	bne	r8,zero,4541c <__ledf2+0x98>
   453ec:	30d2b03a 	or	r9,r6,r3
   453f0:	48000c26 	beq	r9,zero,45424 <__ledf2+0xa0>
   453f4:	0013883a 	mov	r9,zero
   453f8:	39c03fcc 	andi	r7,r7,255
   453fc:	48000826 	beq	r9,zero,45420 <__ledf2+0x9c>
   45400:	38001126 	beq	r7,zero,45448 <__ledf2+0xc4>
   45404:	00800044 	movi	r2,1
   45408:	f800283a 	ret
   4540c:	30d2b03a 	or	r9,r6,r3
   45410:	483fea26 	beq	r9,zero,453bc <__alt_data_end+0xf40453bc>
   45414:	00800084 	movi	r2,2
   45418:	f800283a 	ret
   4541c:	39c03fcc 	andi	r7,r7,255
   45420:	39400726 	beq	r7,r5,45440 <__ledf2+0xbc>
   45424:	2800081e 	bne	r5,zero,45448 <__ledf2+0xc4>
   45428:	00800044 	movi	r2,1
   4542c:	f800283a 	ret
   45430:	2292b03a 	or	r9,r4,r10
   45434:	483fdf26 	beq	r9,zero,453b4 <__alt_data_end+0xf40453b4>
   45438:	00800084 	movi	r2,2
   4543c:	f800283a 	ret
   45440:	4080030e 	bge	r8,r2,45450 <__ledf2+0xcc>
   45444:	383fef26 	beq	r7,zero,45404 <__alt_data_end+0xf4045404>
   45448:	00bfffc4 	movi	r2,-1
   4544c:	f800283a 	ret
   45450:	123feb16 	blt	r2,r8,45400 <__alt_data_end+0xf4045400>
   45454:	1abff336 	bltu	r3,r10,45424 <__alt_data_end+0xf4045424>
   45458:	50c00326 	beq	r10,r3,45468 <__ledf2+0xe4>
   4545c:	50c0042e 	bgeu	r10,r3,45470 <__ledf2+0xec>
   45460:	283fe81e 	bne	r5,zero,45404 <__alt_data_end+0xf4045404>
   45464:	003ff806 	br	45448 <__alt_data_end+0xf4045448>
   45468:	313fee36 	bltu	r6,r4,45424 <__alt_data_end+0xf4045424>
   4546c:	21bffc36 	bltu	r4,r6,45460 <__alt_data_end+0xf4045460>
   45470:	0005883a 	mov	r2,zero
   45474:	f800283a 	ret

00045478 <__muldf3>:
   45478:	deffee04 	addi	sp,sp,-72
   4547c:	dd000c15 	stw	r20,48(sp)
   45480:	2828d53a 	srli	r20,r5,20
   45484:	ddc00f15 	stw	r23,60(sp)
   45488:	282ed7fa 	srli	r23,r5,31
   4548c:	dc000815 	stw	r16,32(sp)
   45490:	04000434 	movhi	r16,16
   45494:	dcc00b15 	stw	r19,44(sp)
   45498:	843fffc4 	addi	r16,r16,-1
   4549c:	dfc01115 	stw	ra,68(sp)
   454a0:	df001015 	stw	fp,64(sp)
   454a4:	dd800e15 	stw	r22,56(sp)
   454a8:	dd400d15 	stw	r21,52(sp)
   454ac:	dc800a15 	stw	r18,40(sp)
   454b0:	dc400915 	stw	r17,36(sp)
   454b4:	a501ffcc 	andi	r20,r20,2047
   454b8:	2c20703a 	and	r16,r5,r16
   454bc:	b827883a 	mov	r19,r23
   454c0:	ba403fcc 	andi	r9,r23,255
   454c4:	a0006026 	beq	r20,zero,45648 <__muldf3+0x1d0>
   454c8:	0081ffc4 	movi	r2,2047
   454cc:	202d883a 	mov	r22,r4
   454d0:	a0803626 	beq	r20,r2,455ac <__muldf3+0x134>
   454d4:	84000434 	orhi	r16,r16,16
   454d8:	200ad77a 	srli	r5,r4,29
   454dc:	800490fa 	slli	r2,r16,3
   454e0:	202c90fa 	slli	r22,r4,3
   454e4:	a53f0044 	addi	r20,r20,-1023
   454e8:	28a0b03a 	or	r16,r5,r2
   454ec:	002b883a 	mov	r21,zero
   454f0:	000b883a 	mov	r5,zero
   454f4:	3804d53a 	srli	r2,r7,20
   454f8:	3838d7fa 	srli	fp,r7,31
   454fc:	04400434 	movhi	r17,16
   45500:	8c7fffc4 	addi	r17,r17,-1
   45504:	1081ffcc 	andi	r2,r2,2047
   45508:	3025883a 	mov	r18,r6
   4550c:	3c62703a 	and	r17,r7,r17
   45510:	e2803fcc 	andi	r10,fp,255
   45514:	10006d26 	beq	r2,zero,456cc <__muldf3+0x254>
   45518:	00c1ffc4 	movi	r3,2047
   4551c:	10c06526 	beq	r2,r3,456b4 <__muldf3+0x23c>
   45520:	8c400434 	orhi	r17,r17,16
   45524:	300ed77a 	srli	r7,r6,29
   45528:	880690fa 	slli	r3,r17,3
   4552c:	302490fa 	slli	r18,r6,3
   45530:	10bf0044 	addi	r2,r2,-1023
   45534:	38e2b03a 	or	r17,r7,r3
   45538:	000f883a 	mov	r7,zero
   4553c:	a087883a 	add	r3,r20,r2
   45540:	010003c4 	movi	r4,15
   45544:	3d44b03a 	or	r2,r7,r21
   45548:	e5ccf03a 	xor	r6,fp,r23
   4554c:	1a000044 	addi	r8,r3,1
   45550:	20809b36 	bltu	r4,r2,457c0 <__muldf3+0x348>
   45554:	100490ba 	slli	r2,r2,2
   45558:	01000134 	movhi	r4,4
   4555c:	21155b04 	addi	r4,r4,21868
   45560:	1105883a 	add	r2,r2,r4
   45564:	10800017 	ldw	r2,0(r2)
   45568:	1000683a 	jmp	r2
   4556c:	000457c0 	call	457c <__reset-0x3ba84>
   45570:	000455cc 	andi	zero,zero,4439
   45574:	000455cc 	andi	zero,zero,4439
   45578:	000455c8 	cmpgei	zero,zero,4439
   4557c:	0004579c 	xori	zero,zero,4446
   45580:	0004579c 	xori	zero,zero,4446
   45584:	00045784 	movi	zero,4446
   45588:	000455c8 	cmpgei	zero,zero,4439
   4558c:	0004579c 	xori	zero,zero,4446
   45590:	00045784 	movi	zero,4446
   45594:	0004579c 	xori	zero,zero,4446
   45598:	000455c8 	cmpgei	zero,zero,4439
   4559c:	000457ac 	andhi	zero,zero,4446
   455a0:	000457ac 	andhi	zero,zero,4446
   455a4:	000457ac 	andhi	zero,zero,4446
   455a8:	00045b0c 	andi	zero,zero,4460
   455ac:	2404b03a 	or	r2,r4,r16
   455b0:	1000711e 	bne	r2,zero,45778 <__muldf3+0x300>
   455b4:	05400204 	movi	r21,8
   455b8:	0021883a 	mov	r16,zero
   455bc:	002d883a 	mov	r22,zero
   455c0:	01400084 	movi	r5,2
   455c4:	003fcb06 	br	454f4 <__alt_data_end+0xf40454f4>
   455c8:	500d883a 	mov	r6,r10
   455cc:	00800084 	movi	r2,2
   455d0:	38805926 	beq	r7,r2,45738 <__muldf3+0x2c0>
   455d4:	008000c4 	movi	r2,3
   455d8:	3881bb26 	beq	r7,r2,45cc8 <__muldf3+0x850>
   455dc:	00800044 	movi	r2,1
   455e0:	3881961e 	bne	r7,r2,45c3c <__muldf3+0x7c4>
   455e4:	3027883a 	mov	r19,r6
   455e8:	0005883a 	mov	r2,zero
   455ec:	0021883a 	mov	r16,zero
   455f0:	002d883a 	mov	r22,zero
   455f4:	1004953a 	slli	r2,r2,20
   455f8:	98c03fcc 	andi	r3,r19,255
   455fc:	04400434 	movhi	r17,16
   45600:	8c7fffc4 	addi	r17,r17,-1
   45604:	180697fa 	slli	r3,r3,31
   45608:	8460703a 	and	r16,r16,r17
   4560c:	80a0b03a 	or	r16,r16,r2
   45610:	80c6b03a 	or	r3,r16,r3
   45614:	b005883a 	mov	r2,r22
   45618:	dfc01117 	ldw	ra,68(sp)
   4561c:	df001017 	ldw	fp,64(sp)
   45620:	ddc00f17 	ldw	r23,60(sp)
   45624:	dd800e17 	ldw	r22,56(sp)
   45628:	dd400d17 	ldw	r21,52(sp)
   4562c:	dd000c17 	ldw	r20,48(sp)
   45630:	dcc00b17 	ldw	r19,44(sp)
   45634:	dc800a17 	ldw	r18,40(sp)
   45638:	dc400917 	ldw	r17,36(sp)
   4563c:	dc000817 	ldw	r16,32(sp)
   45640:	dec01204 	addi	sp,sp,72
   45644:	f800283a 	ret
   45648:	2404b03a 	or	r2,r4,r16
   4564c:	202b883a 	mov	r21,r4
   45650:	10004426 	beq	r2,zero,45764 <__muldf3+0x2ec>
   45654:	80015126 	beq	r16,zero,45b9c <__muldf3+0x724>
   45658:	8009883a 	mov	r4,r16
   4565c:	d9800715 	stw	r6,28(sp)
   45660:	d9c00215 	stw	r7,8(sp)
   45664:	da400415 	stw	r9,16(sp)
   45668:	00467e40 	call	467e4 <__clzsi2>
   4566c:	d9800717 	ldw	r6,28(sp)
   45670:	d9c00217 	ldw	r7,8(sp)
   45674:	da400417 	ldw	r9,16(sp)
   45678:	113ffd44 	addi	r4,r2,-11
   4567c:	00c00704 	movi	r3,28
   45680:	19014216 	blt	r3,r4,45b8c <__muldf3+0x714>
   45684:	00c00744 	movi	r3,29
   45688:	15bffe04 	addi	r22,r2,-8
   4568c:	1907c83a 	sub	r3,r3,r4
   45690:	85a0983a 	sll	r16,r16,r22
   45694:	a8c6d83a 	srl	r3,r21,r3
   45698:	adac983a 	sll	r22,r21,r22
   4569c:	1c20b03a 	or	r16,r3,r16
   456a0:	1080fcc4 	addi	r2,r2,1011
   456a4:	00a9c83a 	sub	r20,zero,r2
   456a8:	002b883a 	mov	r21,zero
   456ac:	000b883a 	mov	r5,zero
   456b0:	003f9006 	br	454f4 <__alt_data_end+0xf40454f4>
   456b4:	3446b03a 	or	r3,r6,r17
   456b8:	1800281e 	bne	r3,zero,4575c <__muldf3+0x2e4>
   456bc:	0023883a 	mov	r17,zero
   456c0:	0025883a 	mov	r18,zero
   456c4:	01c00084 	movi	r7,2
   456c8:	003f9c06 	br	4553c <__alt_data_end+0xf404553c>
   456cc:	3446b03a 	or	r3,r6,r17
   456d0:	18001e26 	beq	r3,zero,4574c <__muldf3+0x2d4>
   456d4:	88012126 	beq	r17,zero,45b5c <__muldf3+0x6e4>
   456d8:	8809883a 	mov	r4,r17
   456dc:	d9400215 	stw	r5,8(sp)
   456e0:	d9800715 	stw	r6,28(sp)
   456e4:	da400415 	stw	r9,16(sp)
   456e8:	da800315 	stw	r10,12(sp)
   456ec:	00467e40 	call	467e4 <__clzsi2>
   456f0:	d9400217 	ldw	r5,8(sp)
   456f4:	d9800717 	ldw	r6,28(sp)
   456f8:	da400417 	ldw	r9,16(sp)
   456fc:	da800317 	ldw	r10,12(sp)
   45700:	113ffd44 	addi	r4,r2,-11
   45704:	00c00704 	movi	r3,28
   45708:	19011016 	blt	r3,r4,45b4c <__muldf3+0x6d4>
   4570c:	00c00744 	movi	r3,29
   45710:	14bffe04 	addi	r18,r2,-8
   45714:	1907c83a 	sub	r3,r3,r4
   45718:	8ca2983a 	sll	r17,r17,r18
   4571c:	30c6d83a 	srl	r3,r6,r3
   45720:	34a4983a 	sll	r18,r6,r18
   45724:	1c62b03a 	or	r17,r3,r17
   45728:	1080fcc4 	addi	r2,r2,1011
   4572c:	0085c83a 	sub	r2,zero,r2
   45730:	000f883a 	mov	r7,zero
   45734:	003f8106 	br	4553c <__alt_data_end+0xf404553c>
   45738:	3027883a 	mov	r19,r6
   4573c:	0081ffc4 	movi	r2,2047
   45740:	0021883a 	mov	r16,zero
   45744:	002d883a 	mov	r22,zero
   45748:	003faa06 	br	455f4 <__alt_data_end+0xf40455f4>
   4574c:	0023883a 	mov	r17,zero
   45750:	0025883a 	mov	r18,zero
   45754:	01c00044 	movi	r7,1
   45758:	003f7806 	br	4553c <__alt_data_end+0xf404553c>
   4575c:	01c000c4 	movi	r7,3
   45760:	003f7606 	br	4553c <__alt_data_end+0xf404553c>
   45764:	05400104 	movi	r21,4
   45768:	0021883a 	mov	r16,zero
   4576c:	002d883a 	mov	r22,zero
   45770:	01400044 	movi	r5,1
   45774:	003f5f06 	br	454f4 <__alt_data_end+0xf40454f4>
   45778:	05400304 	movi	r21,12
   4577c:	014000c4 	movi	r5,3
   45780:	003f5c06 	br	454f4 <__alt_data_end+0xf40454f4>
   45784:	04000434 	movhi	r16,16
   45788:	0027883a 	mov	r19,zero
   4578c:	843fffc4 	addi	r16,r16,-1
   45790:	05bfffc4 	movi	r22,-1
   45794:	0081ffc4 	movi	r2,2047
   45798:	003f9606 	br	455f4 <__alt_data_end+0xf40455f4>
   4579c:	8023883a 	mov	r17,r16
   457a0:	b025883a 	mov	r18,r22
   457a4:	280f883a 	mov	r7,r5
   457a8:	003f8806 	br	455cc <__alt_data_end+0xf40455cc>
   457ac:	8023883a 	mov	r17,r16
   457b0:	b025883a 	mov	r18,r22
   457b4:	480d883a 	mov	r6,r9
   457b8:	280f883a 	mov	r7,r5
   457bc:	003f8306 	br	455cc <__alt_data_end+0xf40455cc>
   457c0:	b026d43a 	srli	r19,r22,16
   457c4:	902ed43a 	srli	r23,r18,16
   457c8:	b5bfffcc 	andi	r22,r22,65535
   457cc:	94bfffcc 	andi	r18,r18,65535
   457d0:	b00b883a 	mov	r5,r22
   457d4:	9009883a 	mov	r4,r18
   457d8:	d8c00515 	stw	r3,20(sp)
   457dc:	d9800715 	stw	r6,28(sp)
   457e0:	da000615 	stw	r8,24(sp)
   457e4:	0043f7c0 	call	43f7c <__mulsi3>
   457e8:	980b883a 	mov	r5,r19
   457ec:	9009883a 	mov	r4,r18
   457f0:	1029883a 	mov	r20,r2
   457f4:	0043f7c0 	call	43f7c <__mulsi3>
   457f8:	b80b883a 	mov	r5,r23
   457fc:	9809883a 	mov	r4,r19
   45800:	102b883a 	mov	r21,r2
   45804:	0043f7c0 	call	43f7c <__mulsi3>
   45808:	b809883a 	mov	r4,r23
   4580c:	b00b883a 	mov	r5,r22
   45810:	1039883a 	mov	fp,r2
   45814:	0043f7c0 	call	43f7c <__mulsi3>
   45818:	a008d43a 	srli	r4,r20,16
   4581c:	1545883a 	add	r2,r2,r21
   45820:	d8c00517 	ldw	r3,20(sp)
   45824:	2085883a 	add	r2,r4,r2
   45828:	d9800717 	ldw	r6,28(sp)
   4582c:	da000617 	ldw	r8,24(sp)
   45830:	1540022e 	bgeu	r2,r21,4583c <__muldf3+0x3c4>
   45834:	01000074 	movhi	r4,1
   45838:	e139883a 	add	fp,fp,r4
   4583c:	100e943a 	slli	r7,r2,16
   45840:	1004d43a 	srli	r2,r2,16
   45844:	882ad43a 	srli	r21,r17,16
   45848:	a53fffcc 	andi	r20,r20,65535
   4584c:	8c7fffcc 	andi	r17,r17,65535
   45850:	3d29883a 	add	r20,r7,r20
   45854:	b00b883a 	mov	r5,r22
   45858:	8809883a 	mov	r4,r17
   4585c:	d8c00515 	stw	r3,20(sp)
   45860:	d9800715 	stw	r6,28(sp)
   45864:	da000615 	stw	r8,24(sp)
   45868:	dd000115 	stw	r20,4(sp)
   4586c:	d8800015 	stw	r2,0(sp)
   45870:	0043f7c0 	call	43f7c <__mulsi3>
   45874:	980b883a 	mov	r5,r19
   45878:	8809883a 	mov	r4,r17
   4587c:	d8800215 	stw	r2,8(sp)
   45880:	0043f7c0 	call	43f7c <__mulsi3>
   45884:	9809883a 	mov	r4,r19
   45888:	a80b883a 	mov	r5,r21
   4588c:	1029883a 	mov	r20,r2
   45890:	0043f7c0 	call	43f7c <__mulsi3>
   45894:	b00b883a 	mov	r5,r22
   45898:	a809883a 	mov	r4,r21
   4589c:	d8800415 	stw	r2,16(sp)
   458a0:	0043f7c0 	call	43f7c <__mulsi3>
   458a4:	d9c00217 	ldw	r7,8(sp)
   458a8:	1505883a 	add	r2,r2,r20
   458ac:	d8c00517 	ldw	r3,20(sp)
   458b0:	3826d43a 	srli	r19,r7,16
   458b4:	d9800717 	ldw	r6,28(sp)
   458b8:	da000617 	ldw	r8,24(sp)
   458bc:	9885883a 	add	r2,r19,r2
   458c0:	da400417 	ldw	r9,16(sp)
   458c4:	1500022e 	bgeu	r2,r20,458d0 <__muldf3+0x458>
   458c8:	01000074 	movhi	r4,1
   458cc:	4913883a 	add	r9,r9,r4
   458d0:	1028d43a 	srli	r20,r2,16
   458d4:	1004943a 	slli	r2,r2,16
   458d8:	802cd43a 	srli	r22,r16,16
   458dc:	843fffcc 	andi	r16,r16,65535
   458e0:	3cffffcc 	andi	r19,r7,65535
   458e4:	9009883a 	mov	r4,r18
   458e8:	800b883a 	mov	r5,r16
   458ec:	a269883a 	add	r20,r20,r9
   458f0:	d8c00515 	stw	r3,20(sp)
   458f4:	d9800715 	stw	r6,28(sp)
   458f8:	da000615 	stw	r8,24(sp)
   458fc:	14e7883a 	add	r19,r2,r19
   45900:	0043f7c0 	call	43f7c <__mulsi3>
   45904:	9009883a 	mov	r4,r18
   45908:	b00b883a 	mov	r5,r22
   4590c:	d8800315 	stw	r2,12(sp)
   45910:	0043f7c0 	call	43f7c <__mulsi3>
   45914:	b809883a 	mov	r4,r23
   45918:	b00b883a 	mov	r5,r22
   4591c:	d8800215 	stw	r2,8(sp)
   45920:	0043f7c0 	call	43f7c <__mulsi3>
   45924:	b80b883a 	mov	r5,r23
   45928:	8009883a 	mov	r4,r16
   4592c:	d8800415 	stw	r2,16(sp)
   45930:	0043f7c0 	call	43f7c <__mulsi3>
   45934:	da800317 	ldw	r10,12(sp)
   45938:	d9c00217 	ldw	r7,8(sp)
   4593c:	d9000017 	ldw	r4,0(sp)
   45940:	502ed43a 	srli	r23,r10,16
   45944:	11c5883a 	add	r2,r2,r7
   45948:	24e5883a 	add	r18,r4,r19
   4594c:	b885883a 	add	r2,r23,r2
   45950:	d8c00517 	ldw	r3,20(sp)
   45954:	d9800717 	ldw	r6,28(sp)
   45958:	da000617 	ldw	r8,24(sp)
   4595c:	da400417 	ldw	r9,16(sp)
   45960:	11c0022e 	bgeu	r2,r7,4596c <__muldf3+0x4f4>
   45964:	01000074 	movhi	r4,1
   45968:	4913883a 	add	r9,r9,r4
   4596c:	100ed43a 	srli	r7,r2,16
   45970:	1004943a 	slli	r2,r2,16
   45974:	55ffffcc 	andi	r23,r10,65535
   45978:	3a53883a 	add	r9,r7,r9
   4597c:	8809883a 	mov	r4,r17
   45980:	800b883a 	mov	r5,r16
   45984:	d8c00515 	stw	r3,20(sp)
   45988:	d9800715 	stw	r6,28(sp)
   4598c:	da000615 	stw	r8,24(sp)
   45990:	da400415 	stw	r9,16(sp)
   45994:	15ef883a 	add	r23,r2,r23
   45998:	0043f7c0 	call	43f7c <__mulsi3>
   4599c:	8809883a 	mov	r4,r17
   459a0:	b00b883a 	mov	r5,r22
   459a4:	d8800215 	stw	r2,8(sp)
   459a8:	0043f7c0 	call	43f7c <__mulsi3>
   459ac:	b00b883a 	mov	r5,r22
   459b0:	a809883a 	mov	r4,r21
   459b4:	d8800315 	stw	r2,12(sp)
   459b8:	0043f7c0 	call	43f7c <__mulsi3>
   459bc:	8009883a 	mov	r4,r16
   459c0:	a80b883a 	mov	r5,r21
   459c4:	1023883a 	mov	r17,r2
   459c8:	0043f7c0 	call	43f7c <__mulsi3>
   459cc:	d9c00217 	ldw	r7,8(sp)
   459d0:	da800317 	ldw	r10,12(sp)
   459d4:	d8c00517 	ldw	r3,20(sp)
   459d8:	3808d43a 	srli	r4,r7,16
   459dc:	1285883a 	add	r2,r2,r10
   459e0:	d9800717 	ldw	r6,28(sp)
   459e4:	2085883a 	add	r2,r4,r2
   459e8:	da000617 	ldw	r8,24(sp)
   459ec:	da400417 	ldw	r9,16(sp)
   459f0:	1280022e 	bgeu	r2,r10,459fc <__muldf3+0x584>
   459f4:	01000074 	movhi	r4,1
   459f8:	8923883a 	add	r17,r17,r4
   459fc:	1008943a 	slli	r4,r2,16
   45a00:	39ffffcc 	andi	r7,r7,65535
   45a04:	e4b9883a 	add	fp,fp,r18
   45a08:	21cf883a 	add	r7,r4,r7
   45a0c:	e4e7803a 	cmpltu	r19,fp,r19
   45a10:	3d0f883a 	add	r7,r7,r20
   45a14:	bf39883a 	add	fp,r23,fp
   45a18:	99c9883a 	add	r4,r19,r7
   45a1c:	e5ef803a 	cmpltu	r23,fp,r23
   45a20:	490b883a 	add	r5,r9,r4
   45a24:	1004d43a 	srli	r2,r2,16
   45a28:	b965883a 	add	r18,r23,r5
   45a2c:	24c9803a 	cmpltu	r4,r4,r19
   45a30:	3d29803a 	cmpltu	r20,r7,r20
   45a34:	a128b03a 	or	r20,r20,r4
   45a38:	95ef803a 	cmpltu	r23,r18,r23
   45a3c:	2a53803a 	cmpltu	r9,r5,r9
   45a40:	a0a9883a 	add	r20,r20,r2
   45a44:	4deeb03a 	or	r23,r9,r23
   45a48:	a5ef883a 	add	r23,r20,r23
   45a4c:	bc63883a 	add	r17,r23,r17
   45a50:	e004927a 	slli	r2,fp,9
   45a54:	d9000117 	ldw	r4,4(sp)
   45a58:	882e927a 	slli	r23,r17,9
   45a5c:	9022d5fa 	srli	r17,r18,23
   45a60:	e038d5fa 	srli	fp,fp,23
   45a64:	1104b03a 	or	r2,r2,r4
   45a68:	9024927a 	slli	r18,r18,9
   45a6c:	1004c03a 	cmpne	r2,r2,zero
   45a70:	bc62b03a 	or	r17,r23,r17
   45a74:	1738b03a 	or	fp,r2,fp
   45a78:	8880402c 	andhi	r2,r17,256
   45a7c:	e4a4b03a 	or	r18,fp,r18
   45a80:	10000726 	beq	r2,zero,45aa0 <__muldf3+0x628>
   45a84:	9006d07a 	srli	r3,r18,1
   45a88:	880497fa 	slli	r2,r17,31
   45a8c:	9480004c 	andi	r18,r18,1
   45a90:	8822d07a 	srli	r17,r17,1
   45a94:	1ca4b03a 	or	r18,r3,r18
   45a98:	14a4b03a 	or	r18,r2,r18
   45a9c:	4007883a 	mov	r3,r8
   45aa0:	1880ffc4 	addi	r2,r3,1023
   45aa4:	0080460e 	bge	zero,r2,45bc0 <__muldf3+0x748>
   45aa8:	910001cc 	andi	r4,r18,7
   45aac:	20000726 	beq	r4,zero,45acc <__muldf3+0x654>
   45ab0:	910003cc 	andi	r4,r18,15
   45ab4:	01400104 	movi	r5,4
   45ab8:	21400426 	beq	r4,r5,45acc <__muldf3+0x654>
   45abc:	9149883a 	add	r4,r18,r5
   45ac0:	24a5803a 	cmpltu	r18,r4,r18
   45ac4:	8ca3883a 	add	r17,r17,r18
   45ac8:	2025883a 	mov	r18,r4
   45acc:	8900402c 	andhi	r4,r17,256
   45ad0:	20000426 	beq	r4,zero,45ae4 <__muldf3+0x66c>
   45ad4:	18810004 	addi	r2,r3,1024
   45ad8:	00ffc034 	movhi	r3,65280
   45adc:	18ffffc4 	addi	r3,r3,-1
   45ae0:	88e2703a 	and	r17,r17,r3
   45ae4:	00c1ff84 	movi	r3,2046
   45ae8:	18bf1316 	blt	r3,r2,45738 <__alt_data_end+0xf4045738>
   45aec:	882c977a 	slli	r22,r17,29
   45af0:	9024d0fa 	srli	r18,r18,3
   45af4:	8822927a 	slli	r17,r17,9
   45af8:	1081ffcc 	andi	r2,r2,2047
   45afc:	b4acb03a 	or	r22,r22,r18
   45b00:	8820d33a 	srli	r16,r17,12
   45b04:	3027883a 	mov	r19,r6
   45b08:	003eba06 	br	455f4 <__alt_data_end+0xf40455f4>
   45b0c:	8080022c 	andhi	r2,r16,8
   45b10:	10000926 	beq	r2,zero,45b38 <__muldf3+0x6c0>
   45b14:	8880022c 	andhi	r2,r17,8
   45b18:	1000071e 	bne	r2,zero,45b38 <__muldf3+0x6c0>
   45b1c:	00800434 	movhi	r2,16
   45b20:	8c000234 	orhi	r16,r17,8
   45b24:	10bfffc4 	addi	r2,r2,-1
   45b28:	e027883a 	mov	r19,fp
   45b2c:	80a0703a 	and	r16,r16,r2
   45b30:	902d883a 	mov	r22,r18
   45b34:	003f1706 	br	45794 <__alt_data_end+0xf4045794>
   45b38:	00800434 	movhi	r2,16
   45b3c:	84000234 	orhi	r16,r16,8
   45b40:	10bfffc4 	addi	r2,r2,-1
   45b44:	80a0703a 	and	r16,r16,r2
   45b48:	003f1206 	br	45794 <__alt_data_end+0xf4045794>
   45b4c:	147ff604 	addi	r17,r2,-40
   45b50:	3462983a 	sll	r17,r6,r17
   45b54:	0025883a 	mov	r18,zero
   45b58:	003ef306 	br	45728 <__alt_data_end+0xf4045728>
   45b5c:	3009883a 	mov	r4,r6
   45b60:	d9400215 	stw	r5,8(sp)
   45b64:	d9800715 	stw	r6,28(sp)
   45b68:	da400415 	stw	r9,16(sp)
   45b6c:	da800315 	stw	r10,12(sp)
   45b70:	00467e40 	call	467e4 <__clzsi2>
   45b74:	10800804 	addi	r2,r2,32
   45b78:	da800317 	ldw	r10,12(sp)
   45b7c:	da400417 	ldw	r9,16(sp)
   45b80:	d9800717 	ldw	r6,28(sp)
   45b84:	d9400217 	ldw	r5,8(sp)
   45b88:	003edd06 	br	45700 <__alt_data_end+0xf4045700>
   45b8c:	143ff604 	addi	r16,r2,-40
   45b90:	ac20983a 	sll	r16,r21,r16
   45b94:	002d883a 	mov	r22,zero
   45b98:	003ec106 	br	456a0 <__alt_data_end+0xf40456a0>
   45b9c:	d9800715 	stw	r6,28(sp)
   45ba0:	d9c00215 	stw	r7,8(sp)
   45ba4:	da400415 	stw	r9,16(sp)
   45ba8:	00467e40 	call	467e4 <__clzsi2>
   45bac:	10800804 	addi	r2,r2,32
   45bb0:	da400417 	ldw	r9,16(sp)
   45bb4:	d9c00217 	ldw	r7,8(sp)
   45bb8:	d9800717 	ldw	r6,28(sp)
   45bbc:	003eae06 	br	45678 <__alt_data_end+0xf4045678>
   45bc0:	00c00044 	movi	r3,1
   45bc4:	1887c83a 	sub	r3,r3,r2
   45bc8:	01000e04 	movi	r4,56
   45bcc:	20fe8516 	blt	r4,r3,455e4 <__alt_data_end+0xf40455e4>
   45bd0:	010007c4 	movi	r4,31
   45bd4:	20c01b16 	blt	r4,r3,45c44 <__muldf3+0x7cc>
   45bd8:	00800804 	movi	r2,32
   45bdc:	10c5c83a 	sub	r2,r2,r3
   45be0:	888a983a 	sll	r5,r17,r2
   45be4:	90c8d83a 	srl	r4,r18,r3
   45be8:	9084983a 	sll	r2,r18,r2
   45bec:	88e2d83a 	srl	r17,r17,r3
   45bf0:	2906b03a 	or	r3,r5,r4
   45bf4:	1004c03a 	cmpne	r2,r2,zero
   45bf8:	1886b03a 	or	r3,r3,r2
   45bfc:	188001cc 	andi	r2,r3,7
   45c00:	10000726 	beq	r2,zero,45c20 <__muldf3+0x7a8>
   45c04:	188003cc 	andi	r2,r3,15
   45c08:	01000104 	movi	r4,4
   45c0c:	11000426 	beq	r2,r4,45c20 <__muldf3+0x7a8>
   45c10:	1805883a 	mov	r2,r3
   45c14:	10c00104 	addi	r3,r2,4
   45c18:	1885803a 	cmpltu	r2,r3,r2
   45c1c:	88a3883a 	add	r17,r17,r2
   45c20:	8880202c 	andhi	r2,r17,128
   45c24:	10001c26 	beq	r2,zero,45c98 <__muldf3+0x820>
   45c28:	3027883a 	mov	r19,r6
   45c2c:	00800044 	movi	r2,1
   45c30:	0021883a 	mov	r16,zero
   45c34:	002d883a 	mov	r22,zero
   45c38:	003e6e06 	br	455f4 <__alt_data_end+0xf40455f4>
   45c3c:	4007883a 	mov	r3,r8
   45c40:	003f9706 	br	45aa0 <__alt_data_end+0xf4045aa0>
   45c44:	017ff844 	movi	r5,-31
   45c48:	2885c83a 	sub	r2,r5,r2
   45c4c:	888ad83a 	srl	r5,r17,r2
   45c50:	00800804 	movi	r2,32
   45c54:	18801a26 	beq	r3,r2,45cc0 <__muldf3+0x848>
   45c58:	01001004 	movi	r4,64
   45c5c:	20c7c83a 	sub	r3,r4,r3
   45c60:	88e2983a 	sll	r17,r17,r3
   45c64:	8ca4b03a 	or	r18,r17,r18
   45c68:	9004c03a 	cmpne	r2,r18,zero
   45c6c:	2884b03a 	or	r2,r5,r2
   45c70:	144001cc 	andi	r17,r2,7
   45c74:	88000d1e 	bne	r17,zero,45cac <__muldf3+0x834>
   45c78:	0021883a 	mov	r16,zero
   45c7c:	102cd0fa 	srli	r22,r2,3
   45c80:	3027883a 	mov	r19,r6
   45c84:	0005883a 	mov	r2,zero
   45c88:	b46cb03a 	or	r22,r22,r17
   45c8c:	003e5906 	br	455f4 <__alt_data_end+0xf40455f4>
   45c90:	1007883a 	mov	r3,r2
   45c94:	0023883a 	mov	r17,zero
   45c98:	8820927a 	slli	r16,r17,9
   45c9c:	1805883a 	mov	r2,r3
   45ca0:	8822977a 	slli	r17,r17,29
   45ca4:	8020d33a 	srli	r16,r16,12
   45ca8:	003ff406 	br	45c7c <__alt_data_end+0xf4045c7c>
   45cac:	10c003cc 	andi	r3,r2,15
   45cb0:	01000104 	movi	r4,4
   45cb4:	193ff626 	beq	r3,r4,45c90 <__alt_data_end+0xf4045c90>
   45cb8:	0023883a 	mov	r17,zero
   45cbc:	003fd506 	br	45c14 <__alt_data_end+0xf4045c14>
   45cc0:	0023883a 	mov	r17,zero
   45cc4:	003fe706 	br	45c64 <__alt_data_end+0xf4045c64>
   45cc8:	00800434 	movhi	r2,16
   45ccc:	8c000234 	orhi	r16,r17,8
   45cd0:	10bfffc4 	addi	r2,r2,-1
   45cd4:	3027883a 	mov	r19,r6
   45cd8:	80a0703a 	and	r16,r16,r2
   45cdc:	902d883a 	mov	r22,r18
   45ce0:	003eac06 	br	45794 <__alt_data_end+0xf4045794>

00045ce4 <__subdf3>:
   45ce4:	02000434 	movhi	r8,16
   45ce8:	423fffc4 	addi	r8,r8,-1
   45cec:	defffb04 	addi	sp,sp,-20
   45cf0:	2a14703a 	and	r10,r5,r8
   45cf4:	3812d53a 	srli	r9,r7,20
   45cf8:	3a10703a 	and	r8,r7,r8
   45cfc:	2006d77a 	srli	r3,r4,29
   45d00:	3004d77a 	srli	r2,r6,29
   45d04:	dc000015 	stw	r16,0(sp)
   45d08:	501490fa 	slli	r10,r10,3
   45d0c:	2820d53a 	srli	r16,r5,20
   45d10:	401090fa 	slli	r8,r8,3
   45d14:	dc800215 	stw	r18,8(sp)
   45d18:	dc400115 	stw	r17,4(sp)
   45d1c:	dfc00415 	stw	ra,16(sp)
   45d20:	202290fa 	slli	r17,r4,3
   45d24:	dcc00315 	stw	r19,12(sp)
   45d28:	4a41ffcc 	andi	r9,r9,2047
   45d2c:	0101ffc4 	movi	r4,2047
   45d30:	2824d7fa 	srli	r18,r5,31
   45d34:	8401ffcc 	andi	r16,r16,2047
   45d38:	50c6b03a 	or	r3,r10,r3
   45d3c:	380ed7fa 	srli	r7,r7,31
   45d40:	408ab03a 	or	r5,r8,r2
   45d44:	300c90fa 	slli	r6,r6,3
   45d48:	49009626 	beq	r9,r4,45fa4 <__subdf3+0x2c0>
   45d4c:	39c0005c 	xori	r7,r7,1
   45d50:	8245c83a 	sub	r2,r16,r9
   45d54:	3c807426 	beq	r7,r18,45f28 <__subdf3+0x244>
   45d58:	0080af0e 	bge	zero,r2,46018 <__subdf3+0x334>
   45d5c:	48002a1e 	bne	r9,zero,45e08 <__subdf3+0x124>
   45d60:	2988b03a 	or	r4,r5,r6
   45d64:	20009a1e 	bne	r4,zero,45fd0 <__subdf3+0x2ec>
   45d68:	888001cc 	andi	r2,r17,7
   45d6c:	10000726 	beq	r2,zero,45d8c <__subdf3+0xa8>
   45d70:	888003cc 	andi	r2,r17,15
   45d74:	01000104 	movi	r4,4
   45d78:	11000426 	beq	r2,r4,45d8c <__subdf3+0xa8>
   45d7c:	890b883a 	add	r5,r17,r4
   45d80:	2c63803a 	cmpltu	r17,r5,r17
   45d84:	1c47883a 	add	r3,r3,r17
   45d88:	2823883a 	mov	r17,r5
   45d8c:	1880202c 	andhi	r2,r3,128
   45d90:	10005926 	beq	r2,zero,45ef8 <__subdf3+0x214>
   45d94:	84000044 	addi	r16,r16,1
   45d98:	0081ffc4 	movi	r2,2047
   45d9c:	8080be26 	beq	r16,r2,46098 <__subdf3+0x3b4>
   45da0:	017fe034 	movhi	r5,65408
   45da4:	297fffc4 	addi	r5,r5,-1
   45da8:	1946703a 	and	r3,r3,r5
   45dac:	1804977a 	slli	r2,r3,29
   45db0:	1806927a 	slli	r3,r3,9
   45db4:	8822d0fa 	srli	r17,r17,3
   45db8:	8401ffcc 	andi	r16,r16,2047
   45dbc:	180ad33a 	srli	r5,r3,12
   45dc0:	9100004c 	andi	r4,r18,1
   45dc4:	1444b03a 	or	r2,r2,r17
   45dc8:	80c1ffcc 	andi	r3,r16,2047
   45dcc:	1820953a 	slli	r16,r3,20
   45dd0:	20c03fcc 	andi	r3,r4,255
   45dd4:	180897fa 	slli	r4,r3,31
   45dd8:	00c00434 	movhi	r3,16
   45ddc:	18ffffc4 	addi	r3,r3,-1
   45de0:	28c6703a 	and	r3,r5,r3
   45de4:	1c06b03a 	or	r3,r3,r16
   45de8:	1906b03a 	or	r3,r3,r4
   45dec:	dfc00417 	ldw	ra,16(sp)
   45df0:	dcc00317 	ldw	r19,12(sp)
   45df4:	dc800217 	ldw	r18,8(sp)
   45df8:	dc400117 	ldw	r17,4(sp)
   45dfc:	dc000017 	ldw	r16,0(sp)
   45e00:	dec00504 	addi	sp,sp,20
   45e04:	f800283a 	ret
   45e08:	0101ffc4 	movi	r4,2047
   45e0c:	813fd626 	beq	r16,r4,45d68 <__alt_data_end+0xf4045d68>
   45e10:	29402034 	orhi	r5,r5,128
   45e14:	01000e04 	movi	r4,56
   45e18:	2080a316 	blt	r4,r2,460a8 <__subdf3+0x3c4>
   45e1c:	010007c4 	movi	r4,31
   45e20:	2080c616 	blt	r4,r2,4613c <__subdf3+0x458>
   45e24:	01000804 	movi	r4,32
   45e28:	2089c83a 	sub	r4,r4,r2
   45e2c:	2910983a 	sll	r8,r5,r4
   45e30:	308ed83a 	srl	r7,r6,r2
   45e34:	3108983a 	sll	r4,r6,r4
   45e38:	2884d83a 	srl	r2,r5,r2
   45e3c:	41ccb03a 	or	r6,r8,r7
   45e40:	2008c03a 	cmpne	r4,r4,zero
   45e44:	310cb03a 	or	r6,r6,r4
   45e48:	898dc83a 	sub	r6,r17,r6
   45e4c:	89a3803a 	cmpltu	r17,r17,r6
   45e50:	1887c83a 	sub	r3,r3,r2
   45e54:	1c47c83a 	sub	r3,r3,r17
   45e58:	3023883a 	mov	r17,r6
   45e5c:	1880202c 	andhi	r2,r3,128
   45e60:	10002326 	beq	r2,zero,45ef0 <__subdf3+0x20c>
   45e64:	04c02034 	movhi	r19,128
   45e68:	9cffffc4 	addi	r19,r19,-1
   45e6c:	1ce6703a 	and	r19,r3,r19
   45e70:	98007a26 	beq	r19,zero,4605c <__subdf3+0x378>
   45e74:	9809883a 	mov	r4,r19
   45e78:	00467e40 	call	467e4 <__clzsi2>
   45e7c:	113ffe04 	addi	r4,r2,-8
   45e80:	00c007c4 	movi	r3,31
   45e84:	19007b16 	blt	r3,r4,46074 <__subdf3+0x390>
   45e88:	00800804 	movi	r2,32
   45e8c:	1105c83a 	sub	r2,r2,r4
   45e90:	8884d83a 	srl	r2,r17,r2
   45e94:	9906983a 	sll	r3,r19,r4
   45e98:	8922983a 	sll	r17,r17,r4
   45e9c:	10c4b03a 	or	r2,r2,r3
   45ea0:	24007816 	blt	r4,r16,46084 <__subdf3+0x3a0>
   45ea4:	2421c83a 	sub	r16,r4,r16
   45ea8:	80c00044 	addi	r3,r16,1
   45eac:	010007c4 	movi	r4,31
   45eb0:	20c09516 	blt	r4,r3,46108 <__subdf3+0x424>
   45eb4:	01400804 	movi	r5,32
   45eb8:	28cbc83a 	sub	r5,r5,r3
   45ebc:	88c8d83a 	srl	r4,r17,r3
   45ec0:	8962983a 	sll	r17,r17,r5
   45ec4:	114a983a 	sll	r5,r2,r5
   45ec8:	10c6d83a 	srl	r3,r2,r3
   45ecc:	8804c03a 	cmpne	r2,r17,zero
   45ed0:	290ab03a 	or	r5,r5,r4
   45ed4:	28a2b03a 	or	r17,r5,r2
   45ed8:	0021883a 	mov	r16,zero
   45edc:	003fa206 	br	45d68 <__alt_data_end+0xf4045d68>
   45ee0:	2090b03a 	or	r8,r4,r2
   45ee4:	40018e26 	beq	r8,zero,46520 <__subdf3+0x83c>
   45ee8:	1007883a 	mov	r3,r2
   45eec:	2023883a 	mov	r17,r4
   45ef0:	888001cc 	andi	r2,r17,7
   45ef4:	103f9e1e 	bne	r2,zero,45d70 <__alt_data_end+0xf4045d70>
   45ef8:	1804977a 	slli	r2,r3,29
   45efc:	8822d0fa 	srli	r17,r17,3
   45f00:	1810d0fa 	srli	r8,r3,3
   45f04:	9100004c 	andi	r4,r18,1
   45f08:	1444b03a 	or	r2,r2,r17
   45f0c:	00c1ffc4 	movi	r3,2047
   45f10:	80c02826 	beq	r16,r3,45fb4 <__subdf3+0x2d0>
   45f14:	01400434 	movhi	r5,16
   45f18:	297fffc4 	addi	r5,r5,-1
   45f1c:	80e0703a 	and	r16,r16,r3
   45f20:	414a703a 	and	r5,r8,r5
   45f24:	003fa806 	br	45dc8 <__alt_data_end+0xf4045dc8>
   45f28:	0080630e 	bge	zero,r2,460b8 <__subdf3+0x3d4>
   45f2c:	48003026 	beq	r9,zero,45ff0 <__subdf3+0x30c>
   45f30:	0101ffc4 	movi	r4,2047
   45f34:	813f8c26 	beq	r16,r4,45d68 <__alt_data_end+0xf4045d68>
   45f38:	29402034 	orhi	r5,r5,128
   45f3c:	01000e04 	movi	r4,56
   45f40:	2080a90e 	bge	r4,r2,461e8 <__subdf3+0x504>
   45f44:	298cb03a 	or	r6,r5,r6
   45f48:	3012c03a 	cmpne	r9,r6,zero
   45f4c:	0005883a 	mov	r2,zero
   45f50:	4c53883a 	add	r9,r9,r17
   45f54:	4c63803a 	cmpltu	r17,r9,r17
   45f58:	10c7883a 	add	r3,r2,r3
   45f5c:	88c7883a 	add	r3,r17,r3
   45f60:	4823883a 	mov	r17,r9
   45f64:	1880202c 	andhi	r2,r3,128
   45f68:	1000d026 	beq	r2,zero,462ac <__subdf3+0x5c8>
   45f6c:	84000044 	addi	r16,r16,1
   45f70:	0081ffc4 	movi	r2,2047
   45f74:	8080fe26 	beq	r16,r2,46370 <__subdf3+0x68c>
   45f78:	00bfe034 	movhi	r2,65408
   45f7c:	10bfffc4 	addi	r2,r2,-1
   45f80:	1886703a 	and	r3,r3,r2
   45f84:	880ad07a 	srli	r5,r17,1
   45f88:	180497fa 	slli	r2,r3,31
   45f8c:	8900004c 	andi	r4,r17,1
   45f90:	2922b03a 	or	r17,r5,r4
   45f94:	1806d07a 	srli	r3,r3,1
   45f98:	1462b03a 	or	r17,r2,r17
   45f9c:	3825883a 	mov	r18,r7
   45fa0:	003f7106 	br	45d68 <__alt_data_end+0xf4045d68>
   45fa4:	2984b03a 	or	r2,r5,r6
   45fa8:	103f6826 	beq	r2,zero,45d4c <__alt_data_end+0xf4045d4c>
   45fac:	39c03fcc 	andi	r7,r7,255
   45fb0:	003f6706 	br	45d50 <__alt_data_end+0xf4045d50>
   45fb4:	4086b03a 	or	r3,r8,r2
   45fb8:	18015226 	beq	r3,zero,46504 <__subdf3+0x820>
   45fbc:	00c00434 	movhi	r3,16
   45fc0:	41400234 	orhi	r5,r8,8
   45fc4:	18ffffc4 	addi	r3,r3,-1
   45fc8:	28ca703a 	and	r5,r5,r3
   45fcc:	003f7e06 	br	45dc8 <__alt_data_end+0xf4045dc8>
   45fd0:	10bfffc4 	addi	r2,r2,-1
   45fd4:	1000491e 	bne	r2,zero,460fc <__subdf3+0x418>
   45fd8:	898fc83a 	sub	r7,r17,r6
   45fdc:	89e3803a 	cmpltu	r17,r17,r7
   45fe0:	1947c83a 	sub	r3,r3,r5
   45fe4:	1c47c83a 	sub	r3,r3,r17
   45fe8:	3823883a 	mov	r17,r7
   45fec:	003f9b06 	br	45e5c <__alt_data_end+0xf4045e5c>
   45ff0:	2988b03a 	or	r4,r5,r6
   45ff4:	203f5c26 	beq	r4,zero,45d68 <__alt_data_end+0xf4045d68>
   45ff8:	10bfffc4 	addi	r2,r2,-1
   45ffc:	1000931e 	bne	r2,zero,4624c <__subdf3+0x568>
   46000:	898d883a 	add	r6,r17,r6
   46004:	3463803a 	cmpltu	r17,r6,r17
   46008:	1947883a 	add	r3,r3,r5
   4600c:	88c7883a 	add	r3,r17,r3
   46010:	3023883a 	mov	r17,r6
   46014:	003fd306 	br	45f64 <__alt_data_end+0xf4045f64>
   46018:	1000541e 	bne	r2,zero,4616c <__subdf3+0x488>
   4601c:	80800044 	addi	r2,r16,1
   46020:	1081ffcc 	andi	r2,r2,2047
   46024:	01000044 	movi	r4,1
   46028:	2080a20e 	bge	r4,r2,462b4 <__subdf3+0x5d0>
   4602c:	8989c83a 	sub	r4,r17,r6
   46030:	8905803a 	cmpltu	r2,r17,r4
   46034:	1967c83a 	sub	r19,r3,r5
   46038:	98a7c83a 	sub	r19,r19,r2
   4603c:	9880202c 	andhi	r2,r19,128
   46040:	10006326 	beq	r2,zero,461d0 <__subdf3+0x4ec>
   46044:	3463c83a 	sub	r17,r6,r17
   46048:	28c7c83a 	sub	r3,r5,r3
   4604c:	344d803a 	cmpltu	r6,r6,r17
   46050:	19a7c83a 	sub	r19,r3,r6
   46054:	3825883a 	mov	r18,r7
   46058:	983f861e 	bne	r19,zero,45e74 <__alt_data_end+0xf4045e74>
   4605c:	8809883a 	mov	r4,r17
   46060:	00467e40 	call	467e4 <__clzsi2>
   46064:	10800804 	addi	r2,r2,32
   46068:	113ffe04 	addi	r4,r2,-8
   4606c:	00c007c4 	movi	r3,31
   46070:	193f850e 	bge	r3,r4,45e88 <__alt_data_end+0xf4045e88>
   46074:	10bff604 	addi	r2,r2,-40
   46078:	8884983a 	sll	r2,r17,r2
   4607c:	0023883a 	mov	r17,zero
   46080:	243f880e 	bge	r4,r16,45ea4 <__alt_data_end+0xf4045ea4>
   46084:	00ffe034 	movhi	r3,65408
   46088:	18ffffc4 	addi	r3,r3,-1
   4608c:	8121c83a 	sub	r16,r16,r4
   46090:	10c6703a 	and	r3,r2,r3
   46094:	003f3406 	br	45d68 <__alt_data_end+0xf4045d68>
   46098:	9100004c 	andi	r4,r18,1
   4609c:	000b883a 	mov	r5,zero
   460a0:	0005883a 	mov	r2,zero
   460a4:	003f4806 	br	45dc8 <__alt_data_end+0xf4045dc8>
   460a8:	298cb03a 	or	r6,r5,r6
   460ac:	300cc03a 	cmpne	r6,r6,zero
   460b0:	0005883a 	mov	r2,zero
   460b4:	003f6406 	br	45e48 <__alt_data_end+0xf4045e48>
   460b8:	10009a1e 	bne	r2,zero,46324 <__subdf3+0x640>
   460bc:	82400044 	addi	r9,r16,1
   460c0:	4881ffcc 	andi	r2,r9,2047
   460c4:	02800044 	movi	r10,1
   460c8:	5080670e 	bge	r10,r2,46268 <__subdf3+0x584>
   460cc:	0081ffc4 	movi	r2,2047
   460d0:	4880af26 	beq	r9,r2,46390 <__subdf3+0x6ac>
   460d4:	898d883a 	add	r6,r17,r6
   460d8:	1945883a 	add	r2,r3,r5
   460dc:	3447803a 	cmpltu	r3,r6,r17
   460e0:	1887883a 	add	r3,r3,r2
   460e4:	182297fa 	slli	r17,r3,31
   460e8:	300cd07a 	srli	r6,r6,1
   460ec:	1806d07a 	srli	r3,r3,1
   460f0:	4821883a 	mov	r16,r9
   460f4:	89a2b03a 	or	r17,r17,r6
   460f8:	003f1b06 	br	45d68 <__alt_data_end+0xf4045d68>
   460fc:	0101ffc4 	movi	r4,2047
   46100:	813f441e 	bne	r16,r4,45e14 <__alt_data_end+0xf4045e14>
   46104:	003f1806 	br	45d68 <__alt_data_end+0xf4045d68>
   46108:	843ff844 	addi	r16,r16,-31
   4610c:	01400804 	movi	r5,32
   46110:	1408d83a 	srl	r4,r2,r16
   46114:	19405026 	beq	r3,r5,46258 <__subdf3+0x574>
   46118:	01401004 	movi	r5,64
   4611c:	28c7c83a 	sub	r3,r5,r3
   46120:	10c4983a 	sll	r2,r2,r3
   46124:	88a2b03a 	or	r17,r17,r2
   46128:	8822c03a 	cmpne	r17,r17,zero
   4612c:	2462b03a 	or	r17,r4,r17
   46130:	0007883a 	mov	r3,zero
   46134:	0021883a 	mov	r16,zero
   46138:	003f6d06 	br	45ef0 <__alt_data_end+0xf4045ef0>
   4613c:	11fff804 	addi	r7,r2,-32
   46140:	01000804 	movi	r4,32
   46144:	29ced83a 	srl	r7,r5,r7
   46148:	11004526 	beq	r2,r4,46260 <__subdf3+0x57c>
   4614c:	01001004 	movi	r4,64
   46150:	2089c83a 	sub	r4,r4,r2
   46154:	2904983a 	sll	r2,r5,r4
   46158:	118cb03a 	or	r6,r2,r6
   4615c:	300cc03a 	cmpne	r6,r6,zero
   46160:	398cb03a 	or	r6,r7,r6
   46164:	0005883a 	mov	r2,zero
   46168:	003f3706 	br	45e48 <__alt_data_end+0xf4045e48>
   4616c:	80002a26 	beq	r16,zero,46218 <__subdf3+0x534>
   46170:	0101ffc4 	movi	r4,2047
   46174:	49006626 	beq	r9,r4,46310 <__subdf3+0x62c>
   46178:	0085c83a 	sub	r2,zero,r2
   4617c:	18c02034 	orhi	r3,r3,128
   46180:	01000e04 	movi	r4,56
   46184:	20807e16 	blt	r4,r2,46380 <__subdf3+0x69c>
   46188:	010007c4 	movi	r4,31
   4618c:	2080e716 	blt	r4,r2,4652c <__subdf3+0x848>
   46190:	01000804 	movi	r4,32
   46194:	2089c83a 	sub	r4,r4,r2
   46198:	1914983a 	sll	r10,r3,r4
   4619c:	8890d83a 	srl	r8,r17,r2
   461a0:	8908983a 	sll	r4,r17,r4
   461a4:	1884d83a 	srl	r2,r3,r2
   461a8:	5222b03a 	or	r17,r10,r8
   461ac:	2006c03a 	cmpne	r3,r4,zero
   461b0:	88e2b03a 	or	r17,r17,r3
   461b4:	3463c83a 	sub	r17,r6,r17
   461b8:	2885c83a 	sub	r2,r5,r2
   461bc:	344d803a 	cmpltu	r6,r6,r17
   461c0:	1187c83a 	sub	r3,r2,r6
   461c4:	4821883a 	mov	r16,r9
   461c8:	3825883a 	mov	r18,r7
   461cc:	003f2306 	br	45e5c <__alt_data_end+0xf4045e5c>
   461d0:	24d0b03a 	or	r8,r4,r19
   461d4:	40001b1e 	bne	r8,zero,46244 <__subdf3+0x560>
   461d8:	0005883a 	mov	r2,zero
   461dc:	0009883a 	mov	r4,zero
   461e0:	0021883a 	mov	r16,zero
   461e4:	003f4906 	br	45f0c <__alt_data_end+0xf4045f0c>
   461e8:	010007c4 	movi	r4,31
   461ec:	20803a16 	blt	r4,r2,462d8 <__subdf3+0x5f4>
   461f0:	01000804 	movi	r4,32
   461f4:	2089c83a 	sub	r4,r4,r2
   461f8:	2912983a 	sll	r9,r5,r4
   461fc:	3090d83a 	srl	r8,r6,r2
   46200:	3108983a 	sll	r4,r6,r4
   46204:	2884d83a 	srl	r2,r5,r2
   46208:	4a12b03a 	or	r9,r9,r8
   4620c:	2008c03a 	cmpne	r4,r4,zero
   46210:	4912b03a 	or	r9,r9,r4
   46214:	003f4e06 	br	45f50 <__alt_data_end+0xf4045f50>
   46218:	1c48b03a 	or	r4,r3,r17
   4621c:	20003c26 	beq	r4,zero,46310 <__subdf3+0x62c>
   46220:	0084303a 	nor	r2,zero,r2
   46224:	1000381e 	bne	r2,zero,46308 <__subdf3+0x624>
   46228:	3463c83a 	sub	r17,r6,r17
   4622c:	28c5c83a 	sub	r2,r5,r3
   46230:	344d803a 	cmpltu	r6,r6,r17
   46234:	1187c83a 	sub	r3,r2,r6
   46238:	4821883a 	mov	r16,r9
   4623c:	3825883a 	mov	r18,r7
   46240:	003f0606 	br	45e5c <__alt_data_end+0xf4045e5c>
   46244:	2023883a 	mov	r17,r4
   46248:	003f0906 	br	45e70 <__alt_data_end+0xf4045e70>
   4624c:	0101ffc4 	movi	r4,2047
   46250:	813f3a1e 	bne	r16,r4,45f3c <__alt_data_end+0xf4045f3c>
   46254:	003ec406 	br	45d68 <__alt_data_end+0xf4045d68>
   46258:	0005883a 	mov	r2,zero
   4625c:	003fb106 	br	46124 <__alt_data_end+0xf4046124>
   46260:	0005883a 	mov	r2,zero
   46264:	003fbc06 	br	46158 <__alt_data_end+0xf4046158>
   46268:	1c44b03a 	or	r2,r3,r17
   4626c:	80008e1e 	bne	r16,zero,464a8 <__subdf3+0x7c4>
   46270:	1000c826 	beq	r2,zero,46594 <__subdf3+0x8b0>
   46274:	2984b03a 	or	r2,r5,r6
   46278:	103ebb26 	beq	r2,zero,45d68 <__alt_data_end+0xf4045d68>
   4627c:	8989883a 	add	r4,r17,r6
   46280:	1945883a 	add	r2,r3,r5
   46284:	2447803a 	cmpltu	r3,r4,r17
   46288:	1887883a 	add	r3,r3,r2
   4628c:	1880202c 	andhi	r2,r3,128
   46290:	2023883a 	mov	r17,r4
   46294:	103f1626 	beq	r2,zero,45ef0 <__alt_data_end+0xf4045ef0>
   46298:	00bfe034 	movhi	r2,65408
   4629c:	10bfffc4 	addi	r2,r2,-1
   462a0:	5021883a 	mov	r16,r10
   462a4:	1886703a 	and	r3,r3,r2
   462a8:	003eaf06 	br	45d68 <__alt_data_end+0xf4045d68>
   462ac:	3825883a 	mov	r18,r7
   462b0:	003f0f06 	br	45ef0 <__alt_data_end+0xf4045ef0>
   462b4:	1c44b03a 	or	r2,r3,r17
   462b8:	8000251e 	bne	r16,zero,46350 <__subdf3+0x66c>
   462bc:	1000661e 	bne	r2,zero,46458 <__subdf3+0x774>
   462c0:	2990b03a 	or	r8,r5,r6
   462c4:	40009626 	beq	r8,zero,46520 <__subdf3+0x83c>
   462c8:	2807883a 	mov	r3,r5
   462cc:	3023883a 	mov	r17,r6
   462d0:	3825883a 	mov	r18,r7
   462d4:	003ea406 	br	45d68 <__alt_data_end+0xf4045d68>
   462d8:	127ff804 	addi	r9,r2,-32
   462dc:	01000804 	movi	r4,32
   462e0:	2a52d83a 	srl	r9,r5,r9
   462e4:	11008c26 	beq	r2,r4,46518 <__subdf3+0x834>
   462e8:	01001004 	movi	r4,64
   462ec:	2085c83a 	sub	r2,r4,r2
   462f0:	2884983a 	sll	r2,r5,r2
   462f4:	118cb03a 	or	r6,r2,r6
   462f8:	300cc03a 	cmpne	r6,r6,zero
   462fc:	4992b03a 	or	r9,r9,r6
   46300:	0005883a 	mov	r2,zero
   46304:	003f1206 	br	45f50 <__alt_data_end+0xf4045f50>
   46308:	0101ffc4 	movi	r4,2047
   4630c:	493f9c1e 	bne	r9,r4,46180 <__alt_data_end+0xf4046180>
   46310:	2807883a 	mov	r3,r5
   46314:	3023883a 	mov	r17,r6
   46318:	4821883a 	mov	r16,r9
   4631c:	3825883a 	mov	r18,r7
   46320:	003e9106 	br	45d68 <__alt_data_end+0xf4045d68>
   46324:	80001f1e 	bne	r16,zero,463a4 <__subdf3+0x6c0>
   46328:	1c48b03a 	or	r4,r3,r17
   4632c:	20005a26 	beq	r4,zero,46498 <__subdf3+0x7b4>
   46330:	0084303a 	nor	r2,zero,r2
   46334:	1000561e 	bne	r2,zero,46490 <__subdf3+0x7ac>
   46338:	89a3883a 	add	r17,r17,r6
   4633c:	1945883a 	add	r2,r3,r5
   46340:	898d803a 	cmpltu	r6,r17,r6
   46344:	3087883a 	add	r3,r6,r2
   46348:	4821883a 	mov	r16,r9
   4634c:	003f0506 	br	45f64 <__alt_data_end+0xf4045f64>
   46350:	10002b1e 	bne	r2,zero,46400 <__subdf3+0x71c>
   46354:	2984b03a 	or	r2,r5,r6
   46358:	10008026 	beq	r2,zero,4655c <__subdf3+0x878>
   4635c:	2807883a 	mov	r3,r5
   46360:	3023883a 	mov	r17,r6
   46364:	3825883a 	mov	r18,r7
   46368:	0401ffc4 	movi	r16,2047
   4636c:	003e7e06 	br	45d68 <__alt_data_end+0xf4045d68>
   46370:	3809883a 	mov	r4,r7
   46374:	0011883a 	mov	r8,zero
   46378:	0005883a 	mov	r2,zero
   4637c:	003ee306 	br	45f0c <__alt_data_end+0xf4045f0c>
   46380:	1c62b03a 	or	r17,r3,r17
   46384:	8822c03a 	cmpne	r17,r17,zero
   46388:	0005883a 	mov	r2,zero
   4638c:	003f8906 	br	461b4 <__alt_data_end+0xf40461b4>
   46390:	3809883a 	mov	r4,r7
   46394:	4821883a 	mov	r16,r9
   46398:	0011883a 	mov	r8,zero
   4639c:	0005883a 	mov	r2,zero
   463a0:	003eda06 	br	45f0c <__alt_data_end+0xf4045f0c>
   463a4:	0101ffc4 	movi	r4,2047
   463a8:	49003b26 	beq	r9,r4,46498 <__subdf3+0x7b4>
   463ac:	0085c83a 	sub	r2,zero,r2
   463b0:	18c02034 	orhi	r3,r3,128
   463b4:	01000e04 	movi	r4,56
   463b8:	20806e16 	blt	r4,r2,46574 <__subdf3+0x890>
   463bc:	010007c4 	movi	r4,31
   463c0:	20807716 	blt	r4,r2,465a0 <__subdf3+0x8bc>
   463c4:	01000804 	movi	r4,32
   463c8:	2089c83a 	sub	r4,r4,r2
   463cc:	1914983a 	sll	r10,r3,r4
   463d0:	8890d83a 	srl	r8,r17,r2
   463d4:	8908983a 	sll	r4,r17,r4
   463d8:	1884d83a 	srl	r2,r3,r2
   463dc:	5222b03a 	or	r17,r10,r8
   463e0:	2006c03a 	cmpne	r3,r4,zero
   463e4:	88e2b03a 	or	r17,r17,r3
   463e8:	89a3883a 	add	r17,r17,r6
   463ec:	1145883a 	add	r2,r2,r5
   463f0:	898d803a 	cmpltu	r6,r17,r6
   463f4:	3087883a 	add	r3,r6,r2
   463f8:	4821883a 	mov	r16,r9
   463fc:	003ed906 	br	45f64 <__alt_data_end+0xf4045f64>
   46400:	2984b03a 	or	r2,r5,r6
   46404:	10004226 	beq	r2,zero,46510 <__subdf3+0x82c>
   46408:	1808d0fa 	srli	r4,r3,3
   4640c:	8822d0fa 	srli	r17,r17,3
   46410:	1806977a 	slli	r3,r3,29
   46414:	2080022c 	andhi	r2,r4,8
   46418:	1c62b03a 	or	r17,r3,r17
   4641c:	10000826 	beq	r2,zero,46440 <__subdf3+0x75c>
   46420:	2812d0fa 	srli	r9,r5,3
   46424:	4880022c 	andhi	r2,r9,8
   46428:	1000051e 	bne	r2,zero,46440 <__subdf3+0x75c>
   4642c:	300cd0fa 	srli	r6,r6,3
   46430:	2804977a 	slli	r2,r5,29
   46434:	4809883a 	mov	r4,r9
   46438:	3825883a 	mov	r18,r7
   4643c:	11a2b03a 	or	r17,r2,r6
   46440:	8806d77a 	srli	r3,r17,29
   46444:	200890fa 	slli	r4,r4,3
   46448:	882290fa 	slli	r17,r17,3
   4644c:	0401ffc4 	movi	r16,2047
   46450:	1906b03a 	or	r3,r3,r4
   46454:	003e4406 	br	45d68 <__alt_data_end+0xf4045d68>
   46458:	2984b03a 	or	r2,r5,r6
   4645c:	103e4226 	beq	r2,zero,45d68 <__alt_data_end+0xf4045d68>
   46460:	8989c83a 	sub	r4,r17,r6
   46464:	8911803a 	cmpltu	r8,r17,r4
   46468:	1945c83a 	sub	r2,r3,r5
   4646c:	1205c83a 	sub	r2,r2,r8
   46470:	1200202c 	andhi	r8,r2,128
   46474:	403e9a26 	beq	r8,zero,45ee0 <__alt_data_end+0xf4045ee0>
   46478:	3463c83a 	sub	r17,r6,r17
   4647c:	28c5c83a 	sub	r2,r5,r3
   46480:	344d803a 	cmpltu	r6,r6,r17
   46484:	1187c83a 	sub	r3,r2,r6
   46488:	3825883a 	mov	r18,r7
   4648c:	003e3606 	br	45d68 <__alt_data_end+0xf4045d68>
   46490:	0101ffc4 	movi	r4,2047
   46494:	493fc71e 	bne	r9,r4,463b4 <__alt_data_end+0xf40463b4>
   46498:	2807883a 	mov	r3,r5
   4649c:	3023883a 	mov	r17,r6
   464a0:	4821883a 	mov	r16,r9
   464a4:	003e3006 	br	45d68 <__alt_data_end+0xf4045d68>
   464a8:	10003626 	beq	r2,zero,46584 <__subdf3+0x8a0>
   464ac:	2984b03a 	or	r2,r5,r6
   464b0:	10001726 	beq	r2,zero,46510 <__subdf3+0x82c>
   464b4:	1808d0fa 	srli	r4,r3,3
   464b8:	8822d0fa 	srli	r17,r17,3
   464bc:	1806977a 	slli	r3,r3,29
   464c0:	2080022c 	andhi	r2,r4,8
   464c4:	1c62b03a 	or	r17,r3,r17
   464c8:	10000726 	beq	r2,zero,464e8 <__subdf3+0x804>
   464cc:	2812d0fa 	srli	r9,r5,3
   464d0:	4880022c 	andhi	r2,r9,8
   464d4:	1000041e 	bne	r2,zero,464e8 <__subdf3+0x804>
   464d8:	300cd0fa 	srli	r6,r6,3
   464dc:	2804977a 	slli	r2,r5,29
   464e0:	4809883a 	mov	r4,r9
   464e4:	11a2b03a 	or	r17,r2,r6
   464e8:	8806d77a 	srli	r3,r17,29
   464ec:	200890fa 	slli	r4,r4,3
   464f0:	882290fa 	slli	r17,r17,3
   464f4:	3825883a 	mov	r18,r7
   464f8:	1906b03a 	or	r3,r3,r4
   464fc:	0401ffc4 	movi	r16,2047
   46500:	003e1906 	br	45d68 <__alt_data_end+0xf4045d68>
   46504:	000b883a 	mov	r5,zero
   46508:	0005883a 	mov	r2,zero
   4650c:	003e2e06 	br	45dc8 <__alt_data_end+0xf4045dc8>
   46510:	0401ffc4 	movi	r16,2047
   46514:	003e1406 	br	45d68 <__alt_data_end+0xf4045d68>
   46518:	0005883a 	mov	r2,zero
   4651c:	003f7506 	br	462f4 <__alt_data_end+0xf40462f4>
   46520:	0005883a 	mov	r2,zero
   46524:	0009883a 	mov	r4,zero
   46528:	003e7806 	br	45f0c <__alt_data_end+0xf4045f0c>
   4652c:	123ff804 	addi	r8,r2,-32
   46530:	01000804 	movi	r4,32
   46534:	1a10d83a 	srl	r8,r3,r8
   46538:	11002526 	beq	r2,r4,465d0 <__subdf3+0x8ec>
   4653c:	01001004 	movi	r4,64
   46540:	2085c83a 	sub	r2,r4,r2
   46544:	1884983a 	sll	r2,r3,r2
   46548:	1444b03a 	or	r2,r2,r17
   4654c:	1004c03a 	cmpne	r2,r2,zero
   46550:	40a2b03a 	or	r17,r8,r2
   46554:	0005883a 	mov	r2,zero
   46558:	003f1606 	br	461b4 <__alt_data_end+0xf40461b4>
   4655c:	02000434 	movhi	r8,16
   46560:	0009883a 	mov	r4,zero
   46564:	423fffc4 	addi	r8,r8,-1
   46568:	00bfffc4 	movi	r2,-1
   4656c:	0401ffc4 	movi	r16,2047
   46570:	003e6606 	br	45f0c <__alt_data_end+0xf4045f0c>
   46574:	1c62b03a 	or	r17,r3,r17
   46578:	8822c03a 	cmpne	r17,r17,zero
   4657c:	0005883a 	mov	r2,zero
   46580:	003f9906 	br	463e8 <__alt_data_end+0xf40463e8>
   46584:	2807883a 	mov	r3,r5
   46588:	3023883a 	mov	r17,r6
   4658c:	0401ffc4 	movi	r16,2047
   46590:	003df506 	br	45d68 <__alt_data_end+0xf4045d68>
   46594:	2807883a 	mov	r3,r5
   46598:	3023883a 	mov	r17,r6
   4659c:	003df206 	br	45d68 <__alt_data_end+0xf4045d68>
   465a0:	123ff804 	addi	r8,r2,-32
   465a4:	01000804 	movi	r4,32
   465a8:	1a10d83a 	srl	r8,r3,r8
   465ac:	11000a26 	beq	r2,r4,465d8 <__subdf3+0x8f4>
   465b0:	01001004 	movi	r4,64
   465b4:	2085c83a 	sub	r2,r4,r2
   465b8:	1884983a 	sll	r2,r3,r2
   465bc:	1444b03a 	or	r2,r2,r17
   465c0:	1004c03a 	cmpne	r2,r2,zero
   465c4:	40a2b03a 	or	r17,r8,r2
   465c8:	0005883a 	mov	r2,zero
   465cc:	003f8606 	br	463e8 <__alt_data_end+0xf40463e8>
   465d0:	0005883a 	mov	r2,zero
   465d4:	003fdc06 	br	46548 <__alt_data_end+0xf4046548>
   465d8:	0005883a 	mov	r2,zero
   465dc:	003ff706 	br	465bc <__alt_data_end+0xf40465bc>

000465e0 <__fixdfsi>:
   465e0:	280cd53a 	srli	r6,r5,20
   465e4:	00c00434 	movhi	r3,16
   465e8:	18ffffc4 	addi	r3,r3,-1
   465ec:	3181ffcc 	andi	r6,r6,2047
   465f0:	01c0ff84 	movi	r7,1022
   465f4:	28c6703a 	and	r3,r5,r3
   465f8:	280ad7fa 	srli	r5,r5,31
   465fc:	3980120e 	bge	r7,r6,46648 <__fixdfsi+0x68>
   46600:	00810744 	movi	r2,1053
   46604:	11800c16 	blt	r2,r6,46638 <__fixdfsi+0x58>
   46608:	00810cc4 	movi	r2,1075
   4660c:	1185c83a 	sub	r2,r2,r6
   46610:	01c007c4 	movi	r7,31
   46614:	18c00434 	orhi	r3,r3,16
   46618:	38800d16 	blt	r7,r2,46650 <__fixdfsi+0x70>
   4661c:	31befb44 	addi	r6,r6,-1043
   46620:	2084d83a 	srl	r2,r4,r2
   46624:	1986983a 	sll	r3,r3,r6
   46628:	1884b03a 	or	r2,r3,r2
   4662c:	28000726 	beq	r5,zero,4664c <__fixdfsi+0x6c>
   46630:	0085c83a 	sub	r2,zero,r2
   46634:	f800283a 	ret
   46638:	00a00034 	movhi	r2,32768
   4663c:	10bfffc4 	addi	r2,r2,-1
   46640:	2885883a 	add	r2,r5,r2
   46644:	f800283a 	ret
   46648:	0005883a 	mov	r2,zero
   4664c:	f800283a 	ret
   46650:	008104c4 	movi	r2,1043
   46654:	1185c83a 	sub	r2,r2,r6
   46658:	1884d83a 	srl	r2,r3,r2
   4665c:	003ff306 	br	4662c <__alt_data_end+0xf404662c>

00046660 <__floatsidf>:
   46660:	defffd04 	addi	sp,sp,-12
   46664:	dfc00215 	stw	ra,8(sp)
   46668:	dc400115 	stw	r17,4(sp)
   4666c:	dc000015 	stw	r16,0(sp)
   46670:	20002b26 	beq	r4,zero,46720 <__floatsidf+0xc0>
   46674:	2023883a 	mov	r17,r4
   46678:	2020d7fa 	srli	r16,r4,31
   4667c:	20002d16 	blt	r4,zero,46734 <__floatsidf+0xd4>
   46680:	8809883a 	mov	r4,r17
   46684:	00467e40 	call	467e4 <__clzsi2>
   46688:	01410784 	movi	r5,1054
   4668c:	288bc83a 	sub	r5,r5,r2
   46690:	01010cc4 	movi	r4,1075
   46694:	2149c83a 	sub	r4,r4,r5
   46698:	00c007c4 	movi	r3,31
   4669c:	1900160e 	bge	r3,r4,466f8 <__floatsidf+0x98>
   466a0:	00c104c4 	movi	r3,1043
   466a4:	1947c83a 	sub	r3,r3,r5
   466a8:	88c6983a 	sll	r3,r17,r3
   466ac:	00800434 	movhi	r2,16
   466b0:	10bfffc4 	addi	r2,r2,-1
   466b4:	1886703a 	and	r3,r3,r2
   466b8:	2941ffcc 	andi	r5,r5,2047
   466bc:	800d883a 	mov	r6,r16
   466c0:	0005883a 	mov	r2,zero
   466c4:	280a953a 	slli	r5,r5,20
   466c8:	31803fcc 	andi	r6,r6,255
   466cc:	01000434 	movhi	r4,16
   466d0:	300c97fa 	slli	r6,r6,31
   466d4:	213fffc4 	addi	r4,r4,-1
   466d8:	1906703a 	and	r3,r3,r4
   466dc:	1946b03a 	or	r3,r3,r5
   466e0:	1986b03a 	or	r3,r3,r6
   466e4:	dfc00217 	ldw	ra,8(sp)
   466e8:	dc400117 	ldw	r17,4(sp)
   466ec:	dc000017 	ldw	r16,0(sp)
   466f0:	dec00304 	addi	sp,sp,12
   466f4:	f800283a 	ret
   466f8:	00c002c4 	movi	r3,11
   466fc:	1887c83a 	sub	r3,r3,r2
   46700:	88c6d83a 	srl	r3,r17,r3
   46704:	8904983a 	sll	r2,r17,r4
   46708:	01000434 	movhi	r4,16
   4670c:	213fffc4 	addi	r4,r4,-1
   46710:	2941ffcc 	andi	r5,r5,2047
   46714:	1906703a 	and	r3,r3,r4
   46718:	800d883a 	mov	r6,r16
   4671c:	003fe906 	br	466c4 <__alt_data_end+0xf40466c4>
   46720:	000d883a 	mov	r6,zero
   46724:	000b883a 	mov	r5,zero
   46728:	0007883a 	mov	r3,zero
   4672c:	0005883a 	mov	r2,zero
   46730:	003fe406 	br	466c4 <__alt_data_end+0xf40466c4>
   46734:	0123c83a 	sub	r17,zero,r4
   46738:	003fd106 	br	46680 <__alt_data_end+0xf4046680>

0004673c <__floatunsidf>:
   4673c:	defffe04 	addi	sp,sp,-8
   46740:	dc000015 	stw	r16,0(sp)
   46744:	dfc00115 	stw	ra,4(sp)
   46748:	2021883a 	mov	r16,r4
   4674c:	20002226 	beq	r4,zero,467d8 <__floatunsidf+0x9c>
   46750:	00467e40 	call	467e4 <__clzsi2>
   46754:	01010784 	movi	r4,1054
   46758:	2089c83a 	sub	r4,r4,r2
   4675c:	01810cc4 	movi	r6,1075
   46760:	310dc83a 	sub	r6,r6,r4
   46764:	00c007c4 	movi	r3,31
   46768:	1980120e 	bge	r3,r6,467b4 <__floatunsidf+0x78>
   4676c:	00c104c4 	movi	r3,1043
   46770:	1907c83a 	sub	r3,r3,r4
   46774:	80ca983a 	sll	r5,r16,r3
   46778:	00800434 	movhi	r2,16
   4677c:	10bfffc4 	addi	r2,r2,-1
   46780:	2101ffcc 	andi	r4,r4,2047
   46784:	0021883a 	mov	r16,zero
   46788:	288a703a 	and	r5,r5,r2
   4678c:	2008953a 	slli	r4,r4,20
   46790:	00c00434 	movhi	r3,16
   46794:	18ffffc4 	addi	r3,r3,-1
   46798:	28c6703a 	and	r3,r5,r3
   4679c:	8005883a 	mov	r2,r16
   467a0:	1906b03a 	or	r3,r3,r4
   467a4:	dfc00117 	ldw	ra,4(sp)
   467a8:	dc000017 	ldw	r16,0(sp)
   467ac:	dec00204 	addi	sp,sp,8
   467b0:	f800283a 	ret
   467b4:	00c002c4 	movi	r3,11
   467b8:	188bc83a 	sub	r5,r3,r2
   467bc:	814ad83a 	srl	r5,r16,r5
   467c0:	00c00434 	movhi	r3,16
   467c4:	18ffffc4 	addi	r3,r3,-1
   467c8:	81a0983a 	sll	r16,r16,r6
   467cc:	2101ffcc 	andi	r4,r4,2047
   467d0:	28ca703a 	and	r5,r5,r3
   467d4:	003fed06 	br	4678c <__alt_data_end+0xf404678c>
   467d8:	0009883a 	mov	r4,zero
   467dc:	000b883a 	mov	r5,zero
   467e0:	003fea06 	br	4678c <__alt_data_end+0xf404678c>

000467e4 <__clzsi2>:
   467e4:	00bfffd4 	movui	r2,65535
   467e8:	11000536 	bltu	r2,r4,46800 <__clzsi2+0x1c>
   467ec:	00803fc4 	movi	r2,255
   467f0:	11000f36 	bltu	r2,r4,46830 <__clzsi2+0x4c>
   467f4:	00800804 	movi	r2,32
   467f8:	0007883a 	mov	r3,zero
   467fc:	00000506 	br	46814 <__clzsi2+0x30>
   46800:	00804034 	movhi	r2,256
   46804:	10bfffc4 	addi	r2,r2,-1
   46808:	11000c2e 	bgeu	r2,r4,4683c <__clzsi2+0x58>
   4680c:	00800204 	movi	r2,8
   46810:	00c00604 	movi	r3,24
   46814:	20c8d83a 	srl	r4,r4,r3
   46818:	00c20034 	movhi	r3,2048
   4681c:	18c08904 	addi	r3,r3,548
   46820:	1909883a 	add	r4,r3,r4
   46824:	20c00003 	ldbu	r3,0(r4)
   46828:	10c5c83a 	sub	r2,r2,r3
   4682c:	f800283a 	ret
   46830:	00800604 	movi	r2,24
   46834:	00c00204 	movi	r3,8
   46838:	003ff606 	br	46814 <__alt_data_end+0xf4046814>
   4683c:	00800404 	movi	r2,16
   46840:	1007883a 	mov	r3,r2
   46844:	003ff306 	br	46814 <__alt_data_end+0xf4046814>

00046848 <__errno>:
   46848:	00820034 	movhi	r2,2048
   4684c:	10921204 	addi	r2,r2,18504
   46850:	10800017 	ldw	r2,0(r2)
   46854:	f800283a 	ret

00046858 <srand>:
   46858:	00820034 	movhi	r2,2048
   4685c:	10921204 	addi	r2,r2,18504
   46860:	10800017 	ldw	r2,0(r2)
   46864:	11002915 	stw	r4,164(r2)
   46868:	10002a15 	stw	zero,168(r2)
   4686c:	f800283a 	ret

00046870 <rand>:
   46870:	00820034 	movhi	r2,2048
   46874:	defffe04 	addi	sp,sp,-8
   46878:	10921204 	addi	r2,r2,18504
   4687c:	dc000015 	stw	r16,0(sp)
   46880:	14000017 	ldw	r16,0(r2)
   46884:	dfc00115 	stw	ra,4(sp)
   46888:	01932574 	movhi	r6,19605
   4688c:	81002917 	ldw	r4,164(r16)
   46890:	81402a17 	ldw	r5,168(r16)
   46894:	01d614b4 	movhi	r7,22610
   46898:	319fcb44 	addi	r6,r6,32557
   4689c:	39fd0b44 	addi	r7,r7,-3027
   468a0:	00468d40 	call	468d4 <__muldi3>
   468a4:	11000044 	addi	r4,r2,1
   468a8:	2085803a 	cmpltu	r2,r4,r2
   468ac:	10c7883a 	add	r3,r2,r3
   468b0:	00a00034 	movhi	r2,32768
   468b4:	10bfffc4 	addi	r2,r2,-1
   468b8:	1884703a 	and	r2,r3,r2
   468bc:	81002915 	stw	r4,164(r16)
   468c0:	80c02a15 	stw	r3,168(r16)
   468c4:	dfc00117 	ldw	ra,4(sp)
   468c8:	dc000017 	ldw	r16,0(sp)
   468cc:	dec00204 	addi	sp,sp,8
   468d0:	f800283a 	ret

000468d4 <__muldi3>:
   468d4:	defff604 	addi	sp,sp,-40
   468d8:	dd800615 	stw	r22,24(sp)
   468dc:	dd400515 	stw	r21,20(sp)
   468e0:	dc400115 	stw	r17,4(sp)
   468e4:	357fffcc 	andi	r21,r6,65535
   468e8:	2022d43a 	srli	r17,r4,16
   468ec:	25bfffcc 	andi	r22,r4,65535
   468f0:	dcc00315 	stw	r19,12(sp)
   468f4:	dc800215 	stw	r18,8(sp)
   468f8:	2027883a 	mov	r19,r4
   468fc:	2825883a 	mov	r18,r5
   46900:	b009883a 	mov	r4,r22
   46904:	a80b883a 	mov	r5,r21
   46908:	dfc00915 	stw	ra,36(sp)
   4690c:	df000815 	stw	fp,32(sp)
   46910:	ddc00715 	stw	r23,28(sp)
   46914:	3839883a 	mov	fp,r7
   46918:	302ed43a 	srli	r23,r6,16
   4691c:	dd000415 	stw	r20,16(sp)
   46920:	dc000015 	stw	r16,0(sp)
   46924:	3029883a 	mov	r20,r6
   46928:	0043f7c0 	call	43f7c <__mulsi3>
   4692c:	a80b883a 	mov	r5,r21
   46930:	8809883a 	mov	r4,r17
   46934:	1021883a 	mov	r16,r2
   46938:	0043f7c0 	call	43f7c <__mulsi3>
   4693c:	8809883a 	mov	r4,r17
   46940:	b80b883a 	mov	r5,r23
   46944:	102b883a 	mov	r21,r2
   46948:	0043f7c0 	call	43f7c <__mulsi3>
   4694c:	b80b883a 	mov	r5,r23
   46950:	b009883a 	mov	r4,r22
   46954:	1023883a 	mov	r17,r2
   46958:	0043f7c0 	call	43f7c <__mulsi3>
   4695c:	8006d43a 	srli	r3,r16,16
   46960:	1545883a 	add	r2,r2,r21
   46964:	1885883a 	add	r2,r3,r2
   46968:	1540022e 	bgeu	r2,r21,46974 <__muldi3+0xa0>
   4696c:	00c00074 	movhi	r3,1
   46970:	88e3883a 	add	r17,r17,r3
   46974:	1006d43a 	srli	r3,r2,16
   46978:	1004943a 	slli	r2,r2,16
   4697c:	e00b883a 	mov	r5,fp
   46980:	9809883a 	mov	r4,r19
   46984:	843fffcc 	andi	r16,r16,65535
   46988:	1c63883a 	add	r17,r3,r17
   4698c:	1421883a 	add	r16,r2,r16
   46990:	0043f7c0 	call	43f7c <__mulsi3>
   46994:	900b883a 	mov	r5,r18
   46998:	a009883a 	mov	r4,r20
   4699c:	1027883a 	mov	r19,r2
   469a0:	0043f7c0 	call	43f7c <__mulsi3>
   469a4:	9885883a 	add	r2,r19,r2
   469a8:	1447883a 	add	r3,r2,r17
   469ac:	8005883a 	mov	r2,r16
   469b0:	dfc00917 	ldw	ra,36(sp)
   469b4:	df000817 	ldw	fp,32(sp)
   469b8:	ddc00717 	ldw	r23,28(sp)
   469bc:	dd800617 	ldw	r22,24(sp)
   469c0:	dd400517 	ldw	r21,20(sp)
   469c4:	dd000417 	ldw	r20,16(sp)
   469c8:	dcc00317 	ldw	r19,12(sp)
   469cc:	dc800217 	ldw	r18,8(sp)
   469d0:	dc400117 	ldw	r17,4(sp)
   469d4:	dc000017 	ldw	r16,0(sp)
   469d8:	dec00a04 	addi	sp,sp,40
   469dc:	f800283a 	ret

000469e0 <alt_ic_isr_register>:
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   469e0:	0046a6c1 	jmpi	46a6c <alt_iic_isr_register>

000469e4 <alt_ic_irq_enable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   469e4:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   469e8:	00bfff84 	movi	r2,-2
   469ec:	2084703a 	and	r2,r4,r2
   469f0:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
   469f4:	00c00044 	movi	r3,1
   469f8:	d0a00717 	ldw	r2,-32740(gp)
   469fc:	194a983a 	sll	r5,r3,r5
   46a00:	288ab03a 	or	r5,r5,r2
   46a04:	d1600715 	stw	r5,-32740(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   46a08:	d0a00717 	ldw	r2,-32740(gp)
   46a0c:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   46a10:	2001703a 	wrctl	status,r4
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_enable(irq);
}
   46a14:	0005883a 	mov	r2,zero
   46a18:	f800283a 	ret

00046a1c <alt_ic_irq_disable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   46a1c:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   46a20:	00bfff84 	movi	r2,-2
   46a24:	2084703a 	and	r2,r4,r2
   46a28:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
   46a2c:	00ffff84 	movi	r3,-2
   46a30:	d0a00717 	ldw	r2,-32740(gp)
   46a34:	194a183a 	rol	r5,r3,r5
   46a38:	288a703a 	and	r5,r5,r2
   46a3c:	d1600715 	stw	r5,-32740(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   46a40:	d0a00717 	ldw	r2,-32740(gp)
   46a44:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   46a48:	2001703a 	wrctl	status,r4
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_disable(irq);
}
   46a4c:	0005883a 	mov	r2,zero
   46a50:	f800283a 	ret

00046a54 <alt_ic_irq_enabled>:
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   46a54:	000730fa 	rdctl	r3,ienable

    return (irq_enabled & (1 << irq)) ? 1: 0;
   46a58:	00800044 	movi	r2,1
   46a5c:	1144983a 	sll	r2,r2,r5
   46a60:	10c4703a 	and	r2,r2,r3
}
   46a64:	1004c03a 	cmpne	r2,r2,zero
   46a68:	f800283a 	ret

00046a6c <alt_iic_isr_register>:
{
  int rc = -EINVAL;  
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  alt_irq_context status;

  if (id < ALT_NIRQ)
   46a6c:	00c007c4 	movi	r3,31
   46a70:	19401616 	blt	r3,r5,46acc <alt_iic_isr_register+0x60>
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   46a74:	defffe04 	addi	sp,sp,-8
   46a78:	dfc00115 	stw	ra,4(sp)
   46a7c:	dc000015 	stw	r16,0(sp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   46a80:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   46a84:	00ffff84 	movi	r3,-2
   46a88:	80c6703a 	and	r3,r16,r3
   46a8c:	1801703a 	wrctl	status,r3
     * state.
     */

    status = alt_irq_disable_all();

    alt_irq[id].handler = isr;
   46a90:	280490fa 	slli	r2,r5,3
   46a94:	00c20074 	movhi	r3,2049
   46a98:	18e5ef04 	addi	r3,r3,-26692
   46a9c:	1885883a 	add	r2,r3,r2
   46aa0:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = isr_context;
   46aa4:	11c00115 	stw	r7,4(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   46aa8:	30000226 	beq	r6,zero,46ab4 <alt_iic_isr_register+0x48>
   46aac:	00469e40 	call	469e4 <alt_ic_irq_enable>
   46ab0:	00000106 	br	46ab8 <alt_iic_isr_register+0x4c>
   46ab4:	0046a1c0 	call	46a1c <alt_ic_irq_disable>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   46ab8:	8001703a 	wrctl	status,r16

    alt_irq_enable_all(status);
  }

  return rc; 
}
   46abc:	dfc00117 	ldw	ra,4(sp)
   46ac0:	dc000017 	ldw	r16,0(sp)
   46ac4:	dec00204 	addi	sp,sp,8
   46ac8:	f800283a 	ret
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  int rc = -EINVAL;  
   46acc:	00bffa84 	movi	r2,-22
   46ad0:	f800283a 	ret

00046ad4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   46ad4:	deffff04 	addi	sp,sp,-4
   46ad8:	01020034 	movhi	r4,2048
   46adc:	01400134 	movhi	r5,4
   46ae0:	dfc00015 	stw	ra,0(sp)
   46ae4:	2100ca04 	addi	r4,r4,808
   46ae8:	295c2d04 	addi	r5,r5,28852

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   46aec:	2140061e 	bne	r4,r5,46b08 <alt_load+0x34>
   46af0:	01000134 	movhi	r4,4
   46af4:	01400134 	movhi	r5,4
   46af8:	21000804 	addi	r4,r4,32
   46afc:	29400804 	addi	r5,r5,32
   46b00:	2140121e 	bne	r4,r5,46b4c <alt_load+0x78>
   46b04:	00000b06 	br	46b34 <alt_load+0x60>
   46b08:	00c20034 	movhi	r3,2048
   46b0c:	18d21504 	addi	r3,r3,18516
   46b10:	1907c83a 	sub	r3,r3,r4
   46b14:	0005883a 	mov	r2,zero
  {
    while( to != end )
   46b18:	10fff526 	beq	r2,r3,46af0 <__alt_data_end+0xf4046af0>
    {
      *to++ = *from++;
   46b1c:	114f883a 	add	r7,r2,r5
   46b20:	39c00017 	ldw	r7,0(r7)
   46b24:	110d883a 	add	r6,r2,r4
   46b28:	10800104 	addi	r2,r2,4
   46b2c:	31c00015 	stw	r7,0(r6)
   46b30:	003ff906 	br	46b18 <__alt_data_end+0xf4046b18>
   46b34:	01020034 	movhi	r4,2048
   46b38:	01400134 	movhi	r5,4
   46b3c:	21000004 	addi	r4,r4,0
   46b40:	295b6304 	addi	r5,r5,28044

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   46b44:	2140101e 	bne	r4,r5,46b88 <alt_load+0xb4>
   46b48:	00000b06 	br	46b78 <alt_load+0xa4>
   46b4c:	00c00134 	movhi	r3,4
   46b50:	18c06004 	addi	r3,r3,384
   46b54:	1907c83a 	sub	r3,r3,r4
   46b58:	0005883a 	mov	r2,zero
  {
    while( to != end )
   46b5c:	10fff526 	beq	r2,r3,46b34 <__alt_data_end+0xf4046b34>
    {
      *to++ = *from++;
   46b60:	114f883a 	add	r7,r2,r5
   46b64:	39c00017 	ldw	r7,0(r7)
   46b68:	110d883a 	add	r6,r2,r4
   46b6c:	10800104 	addi	r2,r2,4
   46b70:	31c00015 	stw	r7,0(r6)
   46b74:	003ff906 	br	46b5c <__alt_data_end+0xf4046b5c>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   46b78:	0046c700 	call	46c70 <alt_dcache_flush_all>
  alt_icache_flush_all();
}
   46b7c:	dfc00017 	ldw	ra,0(sp)
   46b80:	dec00104 	addi	sp,sp,4
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  alt_icache_flush_all();
   46b84:	0046c741 	jmpi	46c74 <alt_icache_flush_all>
   46b88:	00c20034 	movhi	r3,2048
   46b8c:	18c0ca04 	addi	r3,r3,808
   46b90:	1907c83a 	sub	r3,r3,r4

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   46b94:	0005883a 	mov	r2,zero
  {
    while( to != end )
   46b98:	18bff726 	beq	r3,r2,46b78 <__alt_data_end+0xf4046b78>
    {
      *to++ = *from++;
   46b9c:	114f883a 	add	r7,r2,r5
   46ba0:	39c00017 	ldw	r7,0(r7)
   46ba4:	110d883a 	add	r6,r2,r4
   46ba8:	10800104 	addi	r2,r2,4
   46bac:	31c00015 	stw	r7,0(r6)
   46bb0:	003ff906 	br	46b98 <__alt_data_end+0xf4046b98>

00046bb4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   46bb4:	deffff04 	addi	sp,sp,-4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   46bb8:	0009883a 	mov	r4,zero
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   46bbc:	dfc00015 	stw	ra,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   46bc0:	0046c180 	call	46c18 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   46bc4:	0046c380 	call	46c38 <alt_sys_init>
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   46bc8:	d1a00817 	ldw	r6,-32736(gp)
   46bcc:	d1600917 	ldw	r5,-32732(gp)
   46bd0:	d1200a17 	ldw	r4,-32728(gp)
  close(STDOUT_FILENO);
  exit (result);
#endif

  ALT_LOG_PRINT_BOOT("[alt_main.c] After main - we should not be here?.\r\n");
}
   46bd4:	dfc00017 	ldw	ra,0(sp)
   46bd8:	dec00104 	addi	sp,sp,4
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   46bdc:	0040a881 	jmpi	40a88 <main>

00046be0 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
   46be0:	defffe04 	addi	sp,sp,-8
   46be4:	dc000015 	stw	r16,0(sp)
   46be8:	dfc00115 	stw	ra,4(sp)
   46bec:	2021883a 	mov	r16,r4
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   46bf0:	0046cf40 	call	46cf4 <strlen>
   46bf4:	01020034 	movhi	r4,2048
   46bf8:	000f883a 	mov	r7,zero
   46bfc:	100d883a 	mov	r6,r2
   46c00:	800b883a 	mov	r5,r16
   46c04:	21121404 	addi	r4,r4,18512
#else
    return fputs(str, stdout);
#endif
#endif
}
   46c08:	dfc00117 	ldw	ra,4(sp)
   46c0c:	dc000017 	ldw	r16,0(sp)
   46c10:	dec00204 	addi	sp,sp,8
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   46c14:	0046c3c1 	jmpi	46c3c <altera_avalon_jtag_uart_write>

00046c18 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   46c18:	deffff04 	addi	sp,sp,-4
   46c1c:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   46c20:	0046cec0 	call	46cec <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   46c24:	00800044 	movi	r2,1
   46c28:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   46c2c:	dfc00017 	ldw	ra,0(sp)
   46c30:	dec00104 	addi	sp,sp,4
   46c34:	f800283a 	ret

00046c38 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   46c38:	f800283a 	ret

00046c3c <altera_avalon_jtag_uart_write>:
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  unsigned int base = sp->base;
   46c3c:	21000017 	ldw	r4,0(r4)
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   46c40:	3005883a 	mov	r2,r6
  unsigned int base = sp->base;

  const char * end = ptr + count;
   46c44:	298d883a 	add	r6,r5,r6

  while (ptr < end)
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   46c48:	21c00104 	addi	r7,r4,4
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
   46c4c:	2980072e 	bgeu	r5,r6,46c6c <altera_avalon_jtag_uart_write+0x30>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   46c50:	38c00037 	ldwio	r3,0(r7)
   46c54:	18ffffec 	andhi	r3,r3,65535
   46c58:	183ffc26 	beq	r3,zero,46c4c <__alt_data_end+0xf4046c4c>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
   46c5c:	28c00007 	ldb	r3,0(r5)
   46c60:	20c00035 	stwio	r3,0(r4)
   46c64:	29400044 	addi	r5,r5,1
   46c68:	003ff806 	br	46c4c <__alt_data_end+0xf4046c4c>

  return count;
}
   46c6c:	f800283a 	ret

00046c70 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   46c70:	f800283a 	ret

00046c74 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   46c74:	f800283a 	ret

00046c78 <alt_exception_cause_generated_bad_addr>:
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  switch (cause) {
   46c78:	213ffe84 	addi	r4,r4,-6
   46c7c:	008003c4 	movi	r2,15
   46c80:	11001636 	bltu	r2,r4,46cdc <alt_exception_cause_generated_bad_addr+0x64>
   46c84:	200890ba 	slli	r4,r4,2
   46c88:	00800134 	movhi	r2,4
   46c8c:	109b2704 	addi	r2,r2,27804
   46c90:	2089883a 	add	r4,r4,r2
   46c94:	20800017 	ldw	r2,0(r4)
   46c98:	1000683a 	jmp	r2
   46c9c:	00046ce4 	muli	zero,zero,4531
   46ca0:	00046ce4 	muli	zero,zero,4531
   46ca4:	00046cdc 	xori	zero,zero,4531
   46ca8:	00046cdc 	xori	zero,zero,4531
   46cac:	00046cdc 	xori	zero,zero,4531
   46cb0:	00046ce4 	muli	zero,zero,4531
   46cb4:	00046cdc 	xori	zero,zero,4531
   46cb8:	00046cdc 	xori	zero,zero,4531
   46cbc:	00046ce4 	muli	zero,zero,4531
   46cc0:	00046ce4 	muli	zero,zero,4531
   46cc4:	00046cdc 	xori	zero,zero,4531
   46cc8:	00046ce4 	muli	zero,zero,4531
   46ccc:	00046cdc 	xori	zero,zero,4531
   46cd0:	00046cdc 	xori	zero,zero,4531
   46cd4:	00046cdc 	xori	zero,zero,4531
   46cd8:	00046ce4 	muli	zero,zero,4531
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   46cdc:	0005883a 	mov	r2,zero
   46ce0:	f800283a 	ret
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   46ce4:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
   46ce8:	f800283a 	ret

00046cec <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
   46cec:	000170fa 	wrctl	ienable,zero
   46cf0:	f800283a 	ret

00046cf4 <strlen>:
   46cf4:	208000cc 	andi	r2,r4,3
   46cf8:	10002026 	beq	r2,zero,46d7c <strlen+0x88>
   46cfc:	20800007 	ldb	r2,0(r4)
   46d00:	10002026 	beq	r2,zero,46d84 <strlen+0x90>
   46d04:	2005883a 	mov	r2,r4
   46d08:	00000206 	br	46d14 <strlen+0x20>
   46d0c:	10c00007 	ldb	r3,0(r2)
   46d10:	18001826 	beq	r3,zero,46d74 <strlen+0x80>
   46d14:	10800044 	addi	r2,r2,1
   46d18:	10c000cc 	andi	r3,r2,3
   46d1c:	183ffb1e 	bne	r3,zero,46d0c <__alt_data_end+0xf4046d0c>
   46d20:	10c00017 	ldw	r3,0(r2)
   46d24:	01ffbff4 	movhi	r7,65279
   46d28:	39ffbfc4 	addi	r7,r7,-257
   46d2c:	00ca303a 	nor	r5,zero,r3
   46d30:	01a02074 	movhi	r6,32897
   46d34:	19c7883a 	add	r3,r3,r7
   46d38:	31a02004 	addi	r6,r6,-32640
   46d3c:	1946703a 	and	r3,r3,r5
   46d40:	1986703a 	and	r3,r3,r6
   46d44:	1800091e 	bne	r3,zero,46d6c <strlen+0x78>
   46d48:	10800104 	addi	r2,r2,4
   46d4c:	10c00017 	ldw	r3,0(r2)
   46d50:	19cb883a 	add	r5,r3,r7
   46d54:	00c6303a 	nor	r3,zero,r3
   46d58:	28c6703a 	and	r3,r5,r3
   46d5c:	1986703a 	and	r3,r3,r6
   46d60:	183ff926 	beq	r3,zero,46d48 <__alt_data_end+0xf4046d48>
   46d64:	00000106 	br	46d6c <strlen+0x78>
   46d68:	10800044 	addi	r2,r2,1
   46d6c:	10c00007 	ldb	r3,0(r2)
   46d70:	183ffd1e 	bne	r3,zero,46d68 <__alt_data_end+0xf4046d68>
   46d74:	1105c83a 	sub	r2,r2,r4
   46d78:	f800283a 	ret
   46d7c:	2005883a 	mov	r2,r4
   46d80:	003fe706 	br	46d20 <__alt_data_end+0xf4046d20>
   46d84:	0005883a 	mov	r2,zero
   46d88:	f800283a 	ret
